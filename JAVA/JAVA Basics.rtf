{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fmodern\fcharset0 Courier;\f2\fnil\fcharset0 Verdana;
\f3\fnil\fcharset0 Menlo-Regular;\f4\froman\fcharset0 Times-Roman;\f5\fmodern\fcharset0 Courier-Oblique;
\f6\fswiss\fcharset0 ArialMT;\f7\fnil\fcharset0 Menlo-Bold;\f8\fnil\fcharset0 Verdana-Bold;
\f9\froman\fcharset0 Times-Bold;}
{\colortbl;\red255\green255\blue255;\red103\green107\blue114;\red23\green23\blue26;\red174\green176\blue183;
\red89\green158\blue96;\red0\green0\blue0;\red255\green255\blue255;\red255\green255\blue255;\red209\green0\blue46;
\red214\green214\blue214;\red185\green101\blue173;\red38\green157\blue169;\red255\green255\blue255;\red195\green123\blue90;
\red0\green0\blue0;\red71\green149\blue242;\red225\green228\blue230;\red12\green99\blue153;\red210\green50\blue85;
\red135\green135\blue135;\red133\green0\blue67;\red135\green91\blue44;\red93\green108\blue125;\red70\green137\blue204;
\red24\green24\blue24;\red193\green193\blue193;\red67\green192\blue160;\red212\green214\blue154;\red66\green179\blue255;
\red140\green211\blue254;\red251\green0\blue7;\red89\green138\blue67;\red194\green126\blue101;\red202\green202\blue202;
\red183\green111\blue179;\red167\green197\blue152;\red213\green213\blue213;\red22\green31\blue40;\red253\green132\blue135;
\red214\green214\blue214;\red255\green244\blue146;}
{\*\expandedcolortbl;;\csgenericrgb\c40392\c41961\c44706;\csgenericrgb\c9020\c9020\c10196;\csgenericrgb\c68235\c69020\c71765;
\csgenericrgb\c34902\c61961\c37647;\cssrgb\c0\c1\c1;\cssrgb\c100000\c100000\c99985\c0;\cssrgb\c100000\c100000\c100000;\cssrgb\c86275\c7843\c23529;
\cssrgb\c87059\c87059\c87059\c30196;\csgenericrgb\c72549\c39608\c67843;\csgenericrgb\c14902\c61569\c66275;\cssrgb\c100000\c100000\c100000\c0;\csgenericrgb\c76471\c48235\c35294;
\cssrgb\c0\c0\c0;\csgenericrgb\c27843\c58431\c94902;\cssrgb\c90588\c91373\c92157;\cssrgb\c0\c46667\c66667;\cssrgb\c86667\c29020\c40784;
\cssrgb\c60000\c60000\c60000;\cssrgb\c60000\c0\c33333;\cssrgb\c60392\c43137\c22745;\cssrgb\c43922\c50196\c56471;\cssrgb\c33725\c61176\c83922;
\cssrgb\c12157\c12157\c12157;\cssrgb\c80000\c80000\c80000;\cssrgb\c30588\c78824\c69020;\cssrgb\c86275\c86275\c66667;\cssrgb\c30980\c75686\c100000;
\cssrgb\c61176\c86275\c99608;\cssrgb\c100000\c12195\c0;\cssrgb\c41569\c60000\c33333;\cssrgb\c80784\c56863\c47059;\cssrgb\c83137\c83137\c83137;
\cssrgb\c77255\c52549\c75294;\cssrgb\c70980\c80784\c65882;\cssrgb\c86667\c86667\c86667;\cssrgb\c11373\c16471\c20784;\cssrgb\c100000\c60000\c60000;
\cssrgb\c87059\c87059\c87059\c10196;\cssrgb\c100000\c95686\c63922;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid4}
{\list\listtemplateid5\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid401\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid5}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}{\listoverride\listid5\listoverridecount0\ls5}}
\paperw11900\paperh16840\margl1440\margr1440\vieww23240\viewh14500\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 JAVA \
\
1. Java mein koi bhi project pe kaam krone toh ek package mein save hota h jaise library ke history section mein sirf history ki books hoti h.. vase hi agr hum koi cheese mein kaam krna h toh buses \'93com.<package_name> mein add kerne.\
\
2.print \'93hello world\'94 \'97> System.out.println(\'93hello world\'94). \'97 it leaves one line after printing .\
                                \'97> System.out.print(\'93hello world\'94) \'97 it does not leave the line after printing.\
3.
\f1\fs26 \cf2 \cb3 // variables\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf4 String name = \cf5 'Apoorv'\cf4 ;\
String full name = name\
\cf6 \cb7 \
4. 
\f2\fs30 \cf0 \cb8 \expnd0\expndtw0\kerning0
Data types are divided into two groups:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0\cf0 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Primitive data types - includes\'a0
\f3\fs31\fsmilli15750 \cf9 \cb10 byte
\f2\fs30 \cf0 \cb8 ,\'a0
\f3\fs31\fsmilli15750 \cf9 \cb10 short
\f2\fs30 \cf0 \cb8 ,\'a0
\f3\fs31\fsmilli15750 \cf9 \cb10 int
\f2\fs30 \cf0 \cb8 ,\'a0
\f3\fs31\fsmilli15750 \cf9 \cb10 long
\f2\fs30 \cf0 \cb8 ,\'a0
\f3\fs31\fsmilli15750 \cf9 \cb10 float
\f2\fs30 \cf0 \cb8 ,\'a0
\f3\fs31\fsmilli15750 \cf9 \cb10 double
\f2\fs30 \cf0 \cb8 ,\'a0
\f3\fs31\fsmilli15750 \cf9 \cb10 boolean
\f2\fs30 \cf0 \cb8 \'a0and\'a0
\f3\fs31\fsmilli15750 \cf9 \cb10 char
\f2\fs30 \cf0 \cb1 \
\ls1\ilvl0\cb8 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Non-primitive data types - such as\'a0{\field{\*\fldinst{HYPERLINK "https://www.w3schools.com/java/java_strings.asp"}}{\fldrslt 
\f3\fs31\fsmilli15750 \cf9 \cb10 \ul \ulc9 String}},\'a0{\field{\*\fldinst{HYPERLINK "https://www.w3schools.com/java/java_arrays.asp"}}{\fldrslt \ul Arrays}}\'a0and\'a0{\field{\*\fldinst{HYPERLINK "https://www.w3schools.com/java/java_classes.asp"}}{\fldrslt \ul Classes}}\cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs31\fsmilli15750 \cf9 \cb10 byte 
\f4\fs24 \cf0 \cb1 1 byteStores whole numbers from -128 to 127 ; 
\f3\fs31\fsmilli15750 \cf9 \cb10 short 
\f4\fs24 \cf0 \cb1 2 bytesStores whole numbers from -32,768 to 32,767; 
\f3\fs31\fsmilli15750 \cf9 \cb10 int 
\f4\fs24 \cf0 \cb1 4 bytesStores whole numbers from -2,147,483,648 to 2,147,483,647; 
\f3\fs31\fsmilli15750 \cf9 \cb10 long 
\f4\fs24 \cf0 \cb1 8 bytesStores whole numbers from -9,223,372,036,854,775,808 to 9,223,372,036,854,775,807; 
\f3\fs31\fsmilli15750 \cf9 \cb10 float 
\f4\fs24 \cf0 \cb1 4 bytesStores fractional numbers. Sufficient for storing 6 to 7 decimal digits; 
\f3\fs31\fsmilli15750 \cf9 \cb10 double 
\f4\fs24 \cf0 \cb1 8 bytesStores fractional numbers. Sufficient for storing 15 decimal digits; 
\f3\fs31\fsmilli15750 \cf9 \cb10 boolean 
\f4\fs24 \cf0 \cb1 1 bitStores true or false values; 
\f3\fs31\fsmilli15750 \cf9 \cb10 char 
\f4\fs24 \cf0 \cb1 2 bytesStores a single character/letter or ASCII values.\
\
\pard\pardeftab720\partightenfactor0

\f0 \cf0 5. Type casting refers to when we change one data type to other.\
\
6. 
\f1\fs26 \cf2 \cb3 \kerning1\expnd0\expndtw0 //charAt\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf4 String name1 = \cf5 "Apoorv"\cf4 ;\
System.
\f5\i \cf11 out
\f1\i0 \cf4 .println(name1.charAt(\cf12 0\cf4 )); \'97> A\
\cf6 \cb7 This defines each character position in string; and Java is 0 indexed based language.\
\
7.\cf2 \cb3 //length\
\cf4 String name1 = \cf5 "Apoorv"\cf4 ;\
System.
\f5\i \cf11 out
\f1\i0 \cf4 .println(name1.length());  \'97> 6\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf6 \cb13 8. In Java, string is immutable, which cannot be changed if given one value\'85. We can make changes to that string value and put it into new string.\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf2 \cb3 //replace\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf4 String name1 = \cf5 "Apoorv"\cf4 ;\
String name2 = name1.replace(\cf5 'p'\cf4 ,\cf5 '4'\cf4 );\
System.
\f5\i \cf11 out
\f1\i0 \cf4 .println(name2);\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf6 \cb7 \
9. \cf2 \cb3 //substring\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf4 String name1 = \cf5 "Apoorv and Shruti\'94\cf4 ;\
System.
\f5\i \cf11 out
\f1\i0 \cf4 .println(name1.substring(\cf12 7\cf4 ,\cf12 10\cf4 ));\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf6 \cb13 As string is immutable, so we r just extracting characters out from a string.\
\
10.\cf2 \cb3 //arrays\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf14 int\cf4 [] num = \cf14 new int\cf4 [\cf12 5\cf4 ];\
num[\cf12 0\cf4 ] = \cf12 4\cf4 ;\
num[\cf12 1\cf4 ] = \cf12 45\cf4 ;\
num[\cf12 2\cf4 ] = \cf12 32\cf4 ;\
num[\cf12 3\cf4 ] = \cf12 33\cf4 ;\
System.
\f5\i \cf11 out
\f1\i0 \cf4 .println(num[\cf12 1\cf4 ]);\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf6 \cb13 Arrays of int type\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf2 \cb3 //arrays\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf4 String[] cars = \{\cf5 "sds"\cf4 , \cf5 "sdsd"\cf4 , \cf5 "tb"\cf4 \};\
System.
\f5\i \cf11 out
\f1\i0 \cf4 .println(cars[\cf12 2\cf4 ]);\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf6 \cb13 Arrays of String type\
\
11. Sort the string -> \cf14 \cb3 int\cf4 [] marks = \cf14 new int\cf4 [\cf12 3\cf4 ];\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf4 marks[\cf12 0\cf4 ]=\cf12 97\cf4 ;\
marks[\cf12 1\cf4 ]=\cf12 95\cf4 ;\
marks[\cf12 2\cf4 ]=\cf12 93\cf4 ;\
\
System.
\f5\i \cf11 out
\f1\i0 \cf4 .println(marks[\cf12 0\cf4 ]);\
Arrays.
\f5\i sort
\f1\i0 (marks);\
System.
\f5\i \cf11 out
\f1\i0 \cf4 .println(marks[\cf12 0\cf4 ]);\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf4 \
\cf6 \cb7 12.\cf2 \cb3 //arrays 1-D\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf14 int\cf4 [] marks = \{\cf12 32\cf4 ,\cf12 43\cf4 ,\cf12 54\cf4 \};\
System.
\f5\i \cf11 out
\f1\i0 \cf4 .println(marks[\cf12 1\cf4 ]);\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf2 //arrays 2-D\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf14 int\cf4 [][] marks1 = \{\{\cf12 232\cf4 ,\cf12 23\cf4 ,\cf12 232\cf4 \},\{\cf12 435\cf4 ,\cf12 3\cf4 ,\cf12 3\cf4 \}\};\
System.
\f5\i \cf11 out
\f1\i0 \cf4 .println(marks1[\cf12 0\cf4 ][\cf12 1\cf4 ]);\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf4 \
\
\cf6 \cb7 13. Type casting, it is of two types, in which implicit refers to when java automatically catch up to type casting one data type into another; while in explicit casting, we have to manually say java to change one data type into another.\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf2 \cb3 // implicit casting\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf14 double \cf4 marks = \cf12 100.00\cf4 ;\
\cf14 double \cf4 fullmark = marks + \cf12 18\cf4 ;\
System.
\f5\i \cf11 out
\f1\i0 \cf4 .println(fullmark);\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf2 // explicit casting\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf14 int \cf4 m = \cf12 34\cf4 ;\
\cf14 int \cf4 fm = m + (\cf14 int\cf4 )\cf12 4.3\cf4 ;\
System.
\f5\i \cf11 out
\f1\i0 \cf4 .println(fm);\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf4 \
\
\cf6 \cb7 14. Constant -> isme humme btana h java ko yeh variable ki final value hain\'85 isko change nahi kr skte. And humesha oss variable ko hum CAPS mein dikhayenge.\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf14 \cb3 final float \cf4 p = \cf12 2.34f\cf4 ;\
System.
\f5\i \cf11 out
\f1\i0 \cf4 .println(p);\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf6 \cb7 \
15. Operators -> agr \
Numb = 1\
++numb.  \'97> isme phele hi increment operator se increment hojayega variable mein.\
\
Numb = 1\
numb++  \'97> isme phele jo value assign hain wo, then increment hoga.\
\
\pard\pardeftab720\sa360\partightenfactor0

\f2\fs30 \cf0 \cb8 \expnd0\expndtw0\kerning0
Java divides the operators into the following groups:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls2\ilvl0\cf0 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Arithmetic operators. \'97> +,-,*,/,%,++,\'97\cb1 \
\ls2\ilvl0\cb8 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Assignment operators \'97> =, +=, -=, >>=,<<=, etc.\cb1 \
\ls2\ilvl0\cb8 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Comparison operators \'97> ==, !=, >=,<=, etc.\cb1 \
\ls2\ilvl0\cb8 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Logical operators \'97> &&,||,!\cb1 \
\ls2\ilvl0\cb8 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Bitwise operators\cb1 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\fs26 \cf6 \cb7 \kerning1\expnd0\expndtw0  \
16. \cf2 \cb3 // Math class\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf4 System.
\f5\i \cf11 out
\f1\i0 \cf4 .println((\cf14 int\cf4 )(Math.
\f5\i random
\f1\i0 ()*\cf12 100\cf4 ));\
System.
\f5\i \cf11 out
\f1\i0 \cf4 .println(Math.
\f5\i max
\f1\i0 (\cf12 5\cf4 ,\cf12 6\cf4 ));\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf6 \cb13 17. \cf2 \cb3 // Input in JAVA\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf4 Scanner sc = \cf14 new \cf4 Scanner(System.
\f5\i \cf11 in
\f1\i0 \cf4 );\
System.
\f5\i \cf11 out
\f1\i0 \cf4 .println(\cf5 "Input Your Age : "\cf4 );\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf14 float \cf4 num = sc.nextFloat();\
System.
\f5\i \cf11 out
\f1\i0 \cf4 .println(num);\
IN this, scanner is a class, sc is used to initialise that class \'97 and nextFloat() is used to read the value given by user; this will be read by JAVA.\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf6 \cb13 \
18. For string \'97> In this, if we use \'93next()\'94; then it will read just single word in a sentence; but if we use \'93nextLine()\'94; then it will read full sentence.\cf4 \cb3 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf2 // Input in JAVA\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf4 Scanner sc = \cf14 new \cf4 Scanner(System.
\f5\i \cf11 in
\f1\i0 \cf4 );\
System.
\f5\i \cf11 out
\f1\i0 \cf4 .println(\cf5 "Input Your Name : "\cf4 );\
String name = sc.next();\
System.
\f5\i \cf11 out
\f1\i0 \cf4 .println(name);\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf4 \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf4 Scanner sc = \cf14 new \cf4 Scanner(System.
\f5\i \cf11 in
\f1\i0 \cf4 );\
System.
\f5\i \cf11 out
\f1\i0 \cf4 .println(\cf5 "Input Your Name : "\cf4 );\
String name = sc.nextLine();\
System.
\f5\i \cf11 out
\f1\i0 \cf4 .println(name);\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf4 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf6 \cb13 19. \cf2 \cb3 // if/else\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf14 int \cf4 age = \cf12 30\cf4 ;\
\cf14 if \cf4 (age >= \cf12 18\cf4 )\
    System.
\f5\i \cf11 out
\f1\i0 \cf4 .println(\cf5 "can vote"\cf4 );\
\cf14 else\
    \cf4 System.
\f5\i \cf11 out
\f1\i0 \cf4 .println(\cf5 "can't vote"\cf4 );\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf15 \cb13  \'97> If/else statement\
\
20. \cf2 \cb3 //switch\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf14 int \cf4 day = \cf12 7\cf4 ;\
\cf14 switch \cf4 (day)\{\
    \cf14 case \cf12 1\cf4 :\
        System.
\f5\i \cf11 out
\f1\i0 \cf4 .println(\cf5 "Mon"\cf4 );\
        \cf14 break\cf4 ;\
    \cf14 case \cf12 2\cf4 :\
        System.
\f5\i \cf11 out
\f1\i0 \cf4 .println(\cf5 "tues"\cf4 );\
        \cf14 break\cf4 ;\
    \cf14 default \cf4 :\
        System.
\f5\i \cf11 out
\f1\i0 \cf4 .println(\cf5 "all"\cf4 );\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf15 \cb13 Switch statement\
\
21. For loop \'97> \cf2 \cb3 //for loop\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf14 for\cf4 (\cf14 int \cf4 i = \cf12 100\cf4 ; i >= \cf12 1\cf4 ; i--)\{\
    System.
\f5\i \cf11 out
\f1\i0 \cf4 .println(i);\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf15 \cb13 22. While loop -> \cf2 \cb3 //While loop\
    \cf14 int \cf4 i = \cf12 100\cf4 ;\
    \cf14 while\cf4 (i>=\cf12 1\cf4 )\{\
        System.
\f5\i \cf11 out
\f1\i0 \cf4 .println(i);\
        i--;\
    \}\
\}\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf6 \cb7 23. Do - while loop -> \cf2 \cb3 //Do - While loop -- yeh do loop mein jo h usko ek baar execute krta h, jab tah while condition true h.\
    \cf14 int \cf4 i = \cf12 100\cf4 ;\
    \cf14 do \cf4 \{\
        System.
\f5\i \cf11 out
\f1\i0 \cf4 .println(i);\
        i--;\
    \} \cf14 while\cf4 (i>=\cf12 1\cf4 );\
\}\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf15 \cb7 24. Use break and continue in do-while loop.\
\
25. Try - catch \'97> \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \cb3 //Try-catch (this is used to handle exception; if exception is coming then handle it and catch it, then continue with other line of code\
    \cf14 int\cf4 [] marks = \{\cf12 43\cf4 , \cf12 43\cf4 , \cf12 45\cf4 \};\
    \cf14 try\cf4 \{\
        System.
\f5\i \cf11 out
\f1\i0 \cf4 .println(marks[\cf12 5\cf4 ]);\
    \} \cf14 catch \cf4 (Exception exception)\{\
        System.
\f5\i \cf11 out
\f1\i0 \cf4 .println(\cf5 "There is an Exception"\cf4 );\
    \}\
    System.
\f5\i \cf11 out
\f1\i0 \cf4 .println(\cf5 "hello"\cf4 );\
\
\}\
There is a difference b/w error and exception; exception can be handles by this, but error can\'92t.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf6 \cb13 \
26. Example \'97> TV Remote is class and each buttons in it is function/methods, which perform specific task assigned to it. Basically we use function/methods if we have to perform repetitive task. Function ke aage () parentheses aata h.\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf14 \cb3 public class \cf4 Main \{\cf2 //Function/methods\
    \cf14 public static void \cf16 printJava\cf4 ()\{\
        System.
\f5\i \cf11 out
\f1\i0 \cf4 .println(\cf5 "hello"\cf4 );\
    \}\
    \cf14 public static void \cf16 main\cf4 (String[] args)\{\
        
\f5\i printJava
\f1\i0 ();\
        
\f5\i printJava
\f1\i0 ();\
        
\f5\i printJava
\f1\i0 ();\
    \}\
\}\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf6 \cb13 \
\'97> public static void printSum(int a, int b) \{\}. \'97> In this, void refers to the output of this function will give; and int a,b is the input given to the function, which we call \'93parameters\'94.\
When we will call this function and give numbers in ( 4, 3) this we call \'93arguments\'94.\
\
Ex -> \cf14 \cb3 public class \cf4 Main \{\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf4     \cf14 public static void \cf16 printSum\cf4 (\cf14 float \cf4 a, \cf14 float \cf4 b)\{\
        \cf14 float \cf4 sum = a + b;\
        System.
\f5\i \cf11 out
\f1\i0 \cf4 .println(sum);\
    \}\
    \cf14 public static void \cf16 main\cf4 (String[] args)\{\
        
\f5\i printSum
\f1\i0 (\cf12 4.3f\cf4 , \cf12 2.2f\cf4 );\
    \}\
\}\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf6 \cb13 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf6 \cb7 27. 
\f2\fs30 \cf0 \cb8 \expnd0\expndtw0\kerning0
The\'a0
\f3\fs31\fsmilli15750 \cf9 \cb10 void
\f2\fs30 \cf0 \cb8 \'a0keyword, used in the examples above, indicates that the method should not return a value. If you want the method to return a value, you can use a primitive data type (such as\'a0
\f3\fs31\fsmilli15750 \cf9 \cb10 int
\f2\fs30 \cf0 \cb8 ,\'a0
\f3\fs31\fsmilli15750 \cf9 \cb10 char
\f2\fs30 \cf0 \cb8 , etc.) instead of\'a0
\f3\fs31\fsmilli15750 \cf9 \cb10 void
\f2\fs30 \cf0 \cb8 , and use the\'a0
\f3\fs31\fsmilli15750 \cf9 \cb10 return
\f2\fs30 \cf0 \cb8 \'a0keyword inside the method:\
\pard\pardeftab720\sa200\partightenfactor0

\f6\fs48 \cf0 \cb17 Example\cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs30 \cf18 \cb8 public\cf0  \cf18 class\cf0  \cf19 Main\cf0  \cf20 \{\cf0 \
  \cf18 static\cf0  
\f7\b \cf18 int
\f3\b0 \cf0  \cf19 myMethod\cf20 (\cf18 int\cf0  x\cf20 )\cf0  \cf20 \{\cf0 \
    
\f7\b \cf18 return
\f3\b0 \cf0  \cf21 5\cf0  \cf22 +\cf0  x\cf20 ;\cf0 \
  \cf20 \}\cf0 \
\
  \cf18 public\cf0  \cf18 static\cf0  \cf18 void\cf0  \cf19 main\cf20 (\cf19 String\cf20 []\cf0  args\cf20 )\cf0  \cf20 \{\cf0 \
    \cf19 System\cf20 .\cf0 out\cf20 .\cf19 println\cf20 (\cf19 myMethod\cf20 (\cf21 3\cf20 ));\cf0 \
  \cf20 \}\cf0 \
\cf20 \}\cf0 \
\cf23 // Outputs 8 (5 + 3)\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\fs26 \cf6 \cb13 \kerning1\expnd0\expndtw0 \

\
JAVA OOPS ->>\
\
28. Class -> blueprint of any object/method. (Always start with capital letter)\
    Functions/method -> It gives the functions performed by that object (always start with small letter)\
    Objects -> To assign functions and properties of classes to any entity/thing. ((always start with small letter)\
\
Pen pen1 = new pen() \'97> here pen() is a constructor; In java there is by default destructor, which stores it in a garbage value.\
\
\pard\pardeftab720\partightenfactor0

\f3\fs24 \cf24 \cb25 \expnd0\expndtw0\kerning0
public\cf26  \cf27 void\cf26  \cf28 color\cf26 ()\{\cb1 \
\cb25         \cf27 System\cf26 .\cf29 out\cf26 .\cf28 println\cf26 (\cf24 this\cf26 .\cf30 color\cf26 );\
\cf6 \cb7 Here, \'91this\'92 is used for assigning object.\
\
Attribute of a class -> public class main\{ int x = 5 \}, here is x is an attribute of a class.\
\
\pard\pardeftab720\partightenfactor0

\f8\b\fs30 \cf6 \cb31 a\'a0
\f7\fs31\fsmilli15750 static
\f8\fs30 \'a0method, which means that it can be accessed without creating an object of the class, unlike\'a0
\f7\fs31\fsmilli15750 public
\f8\fs30 , which can only be accessed by objects\
\
\cb13 \'97>>Constructor will have name same with its class name.\
Public Classname \{\
	\
	ConstructorName<same as ClassName>()\{\
\}\
\} 
\f7\fs24 \cb31 \
\pard\pardeftab720\partightenfactor0

\f3\b0 \cf6 \cb7 \
\pard\pardeftab720\partightenfactor0
\cf6 \cb1 1. Polymorphism -> In this, methods/function have same name but different functionalities. It has two type, methods/function overloading (compile time polymorphism) and method/function overriding (run time polymorphism). \cf26 \
\pard\pardeftab720\partightenfactor0
\cf32 \cb25 // Polymorphism -->> Same method/function, but used different times. It refers to many forms, also can be used in Inheritance, usinf function of same class to its sub-class. Same method will be differentiiated either by parameters or return type defined.\cf26 \cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf26 \cb25 @\cf27 SuppressWarnings\cf26 (\cf33 "unused"\cf26 )\cb1 \
\cf24 \cb25 class\cf26  \cf27 Student\cf26 \{\cb1 \
\cb25     \cf27 String\cf26  \cf30 name\cf26 ;\cb1 \
\cb25     \cf27 int\cf26  \cf30 age\cf26 ;\cb1 \
\
\cb25     \cf24 public\cf26  \cf27 void\cf26  \cf28 printInfo\cf26 (\cf27 String\cf26  \cf30 name\cf26 )\{\cb1 \
\cb25         \cf27 System\cf26 .\cf29 out\cf26 .\cf28 println\cf26 (\cf33 "Name is : "\cf34 +\cf30 name\cf26 );\cb1 \
\cb25     \}\cb1 \
\cb25     \cf24 public\cf26  \cf27 void\cf26  \cf28 printInfo\cf26 (\cf27 int\cf26  \cf30 age\cf26 )\{\cb1 \
\cb25         \cf27 System\cf26 .\cf29 out\cf26 .\cf28 println\cf26 (\cf33 "Age is : "\cf34 +\cf30 age\cf26 );\cb1 \
\cb25     \}\cb1 \
\cb25     \cf24 public\cf26  \cf27 void\cf26  \cf28 printInfo\cf26 (\cf27 String\cf26  \cf30 name\cf26  , \cf27 int\cf26  \cf30 age\cf26 )\{\cb1 \
\cb25         \cf27 System\cf26 .\cf29 err\cf26 .\cf28 println\cf26 (\cf30 name\cf26  \cf34 +\cf26  \cf33 " "\cf26  \cf34 +\cf26  \cf30 age\cf26 );\cb1 \
\cb25     \}\cb1 \
\cb25 \}\cb1 \
\
\cf24 \cb25 public\cf26  \cf24 class\cf26  \cf27 Polymorphism\cf26 \{\cb1 \
\cb25     \cf24 public\cf26  \cf24 static\cf26  \cf27 void\cf26  \cf28 main\cf26 (\cf27 String\cf26 [] \cf30 args\cf26 ) \{\cb1 \
\cb25         \cf27 Student\cf26  \cf30 obj\cf26  \cf34 =\cf26  \cf35 new\cf26  \cf28 Student\cf26 ();\cb1 \
\cb25         \cf32 // obj.name="John";\cf26 \cb1 \
\cb25         \cf32 // obj.age=25;\cf26 \cb1 \
\cb25         \cf30 obj\cf26 .\cf28 printInfo\cf26 (\cf36 34\cf26 );\cb1 \
\cb25         \cf30 obj\cf26 .\cf28 printInfo\cf26 (\cf33 "John"\cf26 );\cb1 \
\cb25         \cf30 obj\cf26 .\cf28 printInfo\cf26 (\cf33 "Alex"\cf26 , \cf36 35\cf26 );\cb1 \
\cb25     \}\cb1 \
\cb25 \}\cb1 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\fs26 \cf6 \cb13 \kerning1\expnd0\expndtw0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf6 \cb7 2. Inheritance -> 
\f2\fs30 \cf37 \cb38 \expnd0\expndtw0\kerning0
it is possible to inherit attributes and methods from one class to another.\'a0To inherit from a class, use the\'a0
\f3\fs31\fsmilli15750 \cf39 \cb40 extends
\f2\fs30 \cf37 \cb38 \'a0keyword.\cf0 \cb41 \'a0It is useful for code reusability: reuse attributes and methods of an existing class when you create a new class.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 \cb13 It is of 4 types : 1: Single Level Inheritance(base->Derived)\
                        2: Multiple Level Inheritance(base->Derived->Derived)\
                        3: Hierarchical Level Inheritance (base -> Different Derived)\
                        4: Hybrid Inheritance (base -> Single/Multiple/Hierarchical)\cf37 \cb38 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\fs26 \cf6 \cb13 \kerning1\expnd0\expndtw0 \
\pard\pardeftab720\partightenfactor0

\f3\fs24 \cf26 \cb25 \expnd0\expndtw0\kerning0
@\cf27 SuppressWarnings\cf26 (\cf33 "unused"\cf26 )\cb1 \
\cf24 \cb25 class\cf26  \cf27 Car\cf26 \{\cb1 \
\cb25     \cf24 protected\cf26  \cf27 String\cf26  \cf30 carName\cf26  \cf34 =\cf26  \cf33 "Ford"\cf26 ;\cb1 \
\cb25     \cf24 public\cf26  \cf27 void\cf26  \cf28 honk\cf26 ()\{\cb1 \
\cb25         \cf27 System\cf26 .\cf29 out\cf26 .\cf28 println\cf26 (\cf33 "Honk"\cf26 );\cb1 \
\cb25     \}\cb1 \
\cb25 \}\cb1 \
\
\cf24 \cb25 class\cf26  \cf27 Modelname\cf26  \cf24 extends\cf26  \cf27 Car\cf26 \{\cb1 \
\cb25     \cf24 private\cf26  \cf27 String\cf26  \cf30 modelName\cf26  \cf34 =\cf26  \cf33 "Mustang"\cf26 ;\cb1 \
\cb25     \cf24 public\cf26  \cf24 static\cf26  \cf27 void\cf26  \cf28 main\cf26 (\cf27 String\cf26 [] \cf30 args\cf26 ) \{\cb1 \
\cb25         \cf27 Modelname\cf26  \cf30 car\cf26  \cf34 =\cf26  \cf35 new\cf26  \cf28 Modelname\cf26 ();\cb1 \
\cb25         \cf30 car\cf26 .\cf28 honk\cf26 ();\cb1 \
\
\cb25         \cf27 System\cf26 .\cf29 out\cf26 .\cf28 println\cf26 (\cf30 car\cf26 .\cf30 carName\cf26  \cf34 +\cf26  \cf33 " "\cf26  \cf34 +\cf26  \cf30 car\cf26 .\cf30 modelName\cf26 );\cb1 \
\cb25     \} \cb1 \
\cb25 \}\cb1 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\fs26 \cf6 \cb13 \kerning1\expnd0\expndtw0 \
///. Access modifiers -> 1. Public (koi bhi package and class access kr skit h)\
                       2. Default (agr hum define nahi de, toh yeh default krdeta h, but yeh sirf ussi package pr call ho skta h)\
                       3. Protected (sirf ussi package pr call hoga and agr dusre package pr sirf sub-class use kr skta h)\
                       4. Private (yeh sir ussi class mein call hoga ya sirf ussi ya alag package mein hoga) \'97 This can be called on another class or package via \{getters ans setters\}\
\pard\pardeftab720\partightenfactor0

\f3\fs24 \cf32 \cb25 \expnd0\expndtw0\kerning0
// Getters and setters for calling private access modifier in another class\cf26 \cb1 \
\cf32 \cb25 // @SuppressWarnings("unused")\cf26 \cb1 \
\cf32 \cb25 // class first\{\cf26 \cb1 \
\cf32 \cb25 //     private String password;\cf26 \cb1 \
\
\cf32 \cb25 //     public void setPassword(String password)\{\cf26 \cb1 \
\cf32 \cb25 //         this.password = password;\cf26 \cb1 \
\cf32 \cb25 //     \}\cf26 \cb1 \
\
\cf32 \cb25 //     public String getPassword()\{\cf26 \cb1 \
\cf32 \cb25 //         return this.password;\cf26 \cb1 \
\cf32 \cb25 //     \}\cf26 \cb1 \
\cf32 \cb25 // \}\cf26 \cb1 \
\
\cf32 \cb25 // public class Password\{\cf26 \cb1 \
\cf32 \cb25 //     public static void main(String[] args) \{\cf26 \cb1 \
\cf32 \cb25 //         first obj = new first();\cf26 \cb1 \
\
\cf32 \cb25 //         obj.setPassword("P@ssw0rd");\cf26 \cb1 \
\cf32 \cb25 //         obj.getPassword();\cf26 \cb1 \
\cf32 \cb25 //         System.out.println(obj.getPassword());\cf26 \cb1 \
\cf32 \cb25 //     \}\cf26 \cb1 \
\cf32 \cb25 // \}\cf26 \cb1 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\fs26 \cf6 \cb13 \kerning1\expnd0\expndtw0 3. Encapsulation -> 
\f2\fs30 \cf37 \cb38 \expnd0\expndtw0\kerning0
The meaning of\'a0
\f8\b Encapsulation
\f2\b0 , is to make sure that "sensitive" data is hidden from users. To achieve this, you must:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls3\ilvl0\cf37 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
declare class variables/attributes as\'a0
\f3\fs31\fsmilli15750 \cf39 \cb40 private
\f2\fs30 \cf37 \cb1 \
\ls3\ilvl0\cb38 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
provide public\'a0
\f8\b get
\f2\b0 \'a0and\'a0
\f8\b set
\f2\b0 \'a0methods to access and update the value of a\'a0
\f3\fs31\fsmilli15750 \cf39 \cb40 private
\f2\fs30 \cf37 \cb38 \'a0variable\cb1 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\fs26 \cf6 \cb13 \kerning1\expnd0\expndtw0 Example above ||\
\
4. Abstraction \'97-> 
\f2\fs30 \cf37 \cb38 \expnd0\expndtw0\kerning0
Data\'a0
\f8\b abstraction
\f2\b0 \'a0is the process of hiding certain details and showing only essential information to the user.\cb1 \uc0\u8232 \cb38 Abstraction can be achieved with either\'a0
\f8\b abstract classes
\f2\b0 \'a0or\'a0{\field{\*\fldinst{HYPERLINK "https://www.w3schools.com/java/java_interface.asp"}}{\fldrslt 
\f8\b \ul \ulc37 interfaces}}\'a0(which you will learn more about in the next chapter).\
\pard\pardeftab720\sa360\partightenfactor0
\cf37 The\'a0
\f3\fs31\fsmilli15750 \cf39 \cb40 abstract
\f2\fs30 \cf37 \cb38 \'a0keyword is a non-access modifier, used for classes and methods:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls4\ilvl0
\f8\b \cf37 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Abstract class:
\f2\b0 \'a0is a restricted class that cannot be used to create objects (to access it, it must be inherited from another class).\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls4\ilvl0\cf37 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls4\ilvl0
\f8\b \cf37 \cb38 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Abstract method:
\f2\b0 \'a0can only be used in an abstract class, and it does not have a body. The body is provided by the subclass (inherited from).\cb1 \
\pard\pardeftab720\sa360\partightenfactor0
\cf37 \cb38 An abstract class can have both abstract and regular methods:\
\pard\pardeftab720\partightenfactor0
\cf6 \cb7 Example -> (abstract Classes)\
\pard\pardeftab720\partightenfactor0

\f3\fs24 \cf26 \cb25 @\cf27 SuppressWarnings\cf26 (\cf33 "unused"\cf26 )\cb1 \
\cf24 \cb25 abstract\cf26  \cf24 class\cf26  \cf27 Animal\cf26 \{\cb1 \
\cb25     \cf24 abstract\cf26  \cf27 void\cf26  \cf28 honk\cf26 ();\cb1 \
\cb25     \cf24 public\cf26  \cf27 void\cf26  \cf28 eat\cf26 ()\{\cb1 \
\cb25         \cf27 System\cf26 .\cf29 out\cf26 .\cf28 println\cf26 (\cf33 "Eats"\cf26 );\cb1 \
\cb25     \}\cb1 \
\cb25 \}\cb1 \
\cf24 \cb25 class\cf26  \cf27 Horse\cf26  \cf24 extends\cf26  \cf27 Animal\cf26 \{\cb1 \
\cb25     \cf24 public\cf26  \cf27 void\cf26  \cf28 honk\cf26 ()\{\cb1 \
\cb25         \cf27 System\cf26 .\cf29 out\cf26 .\cf28 println\cf26 (\cf33 "Horese honks"\cf26 );\cb1 \
\cb25     \}\cb1 \
\cb25 \}\cb1 \
\cf24 \cb25 class\cf26  \cf27 Chicken\cf26  \cf24 extends\cf26  \cf27 Animal\cf26 \{\cb1 \
\cb25     \cf24 public\cf26  \cf27 void\cf26  \cf28 honk\cf26 ()\{\cb1 \
\cb25         \cf27 System\cf26 .\cf29 out\cf26 .\cf28 println\cf26 (\cf33 "Chicken honks"\cf26 );\cb1 \
\cb25     \}\cb1 \
\cb25 \}\cb1 \
\
\
\cf24 \cb25 public\cf26  \cf24 class\cf26  \cf27 OOPS\cf26  \{\cb1 \
\cb25     \cf24 public\cf26  \cf24 static\cf26  \cf27 void\cf26  \cf28 main\cf26 (\cf27 String\cf26 [] \cf30 args\cf26 ) \{\cb1 \
\cb25         \cf27 Horse\cf26  \cf30 horse\cf26  \cf34 =\cf26  \cf35 new\cf26  \cf28 Horse\cf26 ();\cb1 \
\cb25         \cf27 Chicken\cf26  \cf30 chicken\cf26  \cf34 =\cf26  \cf35 new\cf26  \cf28 Chicken\cf26 ();\cb1 \
\cb25         \cf30 horse\cf26 .\cf28 honk\cf26 ();\cb1 \
\cb25         \cf30 chicken\cf26 .\cf28 honk\cf26 ();\cb1 \
\cb25         \cf30 horse\cf26 .\cf28 eat\cf26 ();\cb1 \
\cb25         \cf30 chicken\cf26 .\cf28 eat\cf26 ();\cb1 \
\cb25     \}\cb1 \
\cb25 \}\cb1 \
\pard\pardeftab720\partightenfactor0

\f1\fs26 \cf6 \cb13 \kerning1\expnd0\expndtw0 \
\
(Interface) -> It is pure abstract class. In this, multiple Inheritance concept can also be used, in which there is two base classes, and we have one derived class. In this, we use implements, instead of extends.\
\
\pard\pardeftab720\partightenfactor0

\f3\fs24 \cf24 \cb25 \expnd0\expndtw0\kerning0
interface\cf26  \cf27 Animal\cf26 \{\cb1 \
\cb25     \cf27 void\cf26  \cf28 eat\cf26 ();\cb1 \
\cb25     \cf27 void\cf26  \cf28 walk\cf26 ();\cb1 \
\cb25 \}\cb1 \
\
\cf24 \cb25 interface\cf26  \cf27 Herbivore\cf26 \{\cb1 \
\
\cb25 \}\cb1 \
\
\cf24 \cb25 class\cf26  \cf27 Horse\cf26  \cf24 implements\cf26  \cf27 Animal\cf26 , \cf27 Herbivore\cf26 \{  \cf32 // Multiple Inheritance\cf26 \cb1 \
\cb25     \cf24 public\cf26  \cf27 void\cf26  \cf28 eat\cf26 ()\{\cb1 \
\cb25         \cf27 System\cf26 .\cf29 out\cf26 .\cf28 println\cf26 (\cf33 "horse eats"\cf26 );\cb1 \
\cb25     \}\cb1 \
\cb25     \cf24 public\cf26  \cf27 void\cf26  \cf28 walk\cf26 ()\{\cb1 \
\cb25         \cf27 System\cf26 .\cf29 out\cf26 .\cf28 println\cf26 (\cf33 "horse walks"\cf26 );\cb1 \
\cb25     \}\cb1 \
\cb25 \}\cb1 \
\
\cf24 \cb25 public\cf26  \cf24 class\cf26  \cf27 OOPS\cf26 \{\cb1 \
\cb25     \cf24 public\cf26  \cf24 static\cf26  \cf27 void\cf26  \cf28 main\cf26 (\cf27 String\cf26 [] \cf30 args\cf26 ) \{\cb1 \
\cb25         \cf27 Horse\cf26  \cf30 horse\cf26  \cf34 =\cf26  \cf35 new\cf26  \cf28 Horse\cf26 ();\cb1 \
\cb25         \cf30 horse\cf26 .\cf28 eat\cf26 ();\cb1 \
\cb25         \cf30 horse\cf26 .\cf28 walk\cf26 ();\cb1 \
\cb25     \}\cb1 \
\cb25 \} \cb1 \
\pard\pardeftab720\partightenfactor0

\f1\fs26 \cf6 \cb13 \kerning1\expnd0\expndtw0 \
\
Static -> It is used for use its methods/function for once, and update it once, not to define any object for it.\
\
\
\pard\pardeftab720\partightenfactor0

\f4\fs24 \cf0 \cb1 \expnd0\expndtw0\kerning0
In summary, encapsulation is about data protection and controlled access within a class, while abstraction is about simplifying the complexity of a system by focusing on the essential aspects and hiding the details
\f1\fs26 \cf6 \cb13 \kerning1\expnd0\expndtw0 .\
\

\
31. System.outt.printf() \'97>
\f4\fs24 \cf0 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec15 The 
\f1\fs26 printf
\f4\fs24  method allows you to specify a format string and a list of arguments. The format string can contain text and format specifiers that dictate how the arguments should be formatted and displayed.\
\pard\pardeftab720\partightenfactor0
\cf0 \strokec15 System.out.printf("String: %s\\n", myString); \
System.out.printf("Double: %.2f\\n", myDouble); \
System.out.printf("Int: %d\\n", myInt);
\f1\fs26 \cf6 \cb13 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls5\ilvl0\cf0 \cb1 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec15 %s
\f4\fs24  is a format specifier for a string.\
\ls5\ilvl0
\f1\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec15 %d
\f4\fs24  is a format specifier for a decimal (integer) number.\
\ls5\ilvl0
\f1\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec15 %.2f
\f4\fs24  is a format specifier for a floating-point number with 2 digits after the decimal point.\
\pard\pardeftab720\sa280\partightenfactor0

\f9\b\fs28 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\b0\fs26 \cf6 \cb13 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\
\
}