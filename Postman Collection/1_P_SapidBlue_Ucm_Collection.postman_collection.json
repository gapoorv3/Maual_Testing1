{
	"info": {
		"_postman_id": "31fa5d12-3150-4943-9f07-f503f5c73542",
		"name": "1_P_SapidBlue_Ucm_Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24222642",
		"_collection_link": "https://cloudy-escape-95096.postman.co/workspace/Team-Workspace~b8f5b68b-5195-47f5-8713-287e00b57660/collection/24222642-31fa5d12-3150-4943-9f07-f503f5c73542?action=share&source=collection_link&creator=24222642"
	},
	"item": [
		{
			"name": "Comm",
			"item": [
				{
					"name": "get/token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"pm.environment.set(\"BoToken\", jsonData.data.authToken);",
									"pm.environment.set(\"BoUserId\", jsonData.data.userId);",
									"",
									"",
									"",
									"",
									"//      pm.environment.set(\"BoUserId\", jsonData.responseData.userId)",
									"",
									"// let swicthCaseIteration = +pm.environment.get(\"swicthCaseIteration\");",
									"// if (jsonData.responseData.statusCode === 0 && swicthCaseIteration === 0) {",
									"//      pm.test(\"-------------------------1.Positive scenario Of get/token api With valid key Data.--------------------------------\");",
									"//      eval(pm.environment.get(\"IfTestCase\"))();",
									"     ",
									"//      pm.test(\"Message I am getting from Api is= \" + jsonData.responseData.message, function () { pm.expect(jsonData.responseData.message).to.eql(\"Success\") })",
									"// pm.test(\"Message I am getting from Api is= \" + jsonData.responseData.message, function () { pm.expect(jsonData.responseData.message).to.eql(\"Success\") })",
									"// pm.test(\"Status Code I am getting from Api is= \" + jsonData.responseData.statusCode, function () { pm.expect(+jsonData.responseData.statusCode).to.eql(0) })",
									"//      pm.test(\"authToken I am getting from Api is= \" + jsonData.responseData.authToken, function () { pm.expect(+jsonData.responseData.authToken).to.eql(+jsonData.responseData.authToken) })",
									"//      pm.test(\"timestamp I am getting from Api is= \" + jsonData.responseData.timestamp, function () { pm.expect(+jsonData.responseData.timestamp).to.eql(+jsonData.responseData.timestamp) })",
									"//      pm.test(\"expiryTime I am getting from Api is= \" + jsonData.responseData.expiryTime, function () { pm.expect(+jsonData.responseData.expiryTime).to.eql(+jsonData.responseData.expiryTime) })",
									"//      pm.test(\"issueAt I am getting from Api = \" + jsonData.responseData.issueAt, function () { pm.expect(+jsonData.responseData.issueAt).to.eql(+jsonData.responseData.issueAt) })",
									"//      pm.test(\"Login superBo User Id Is=\" + jsonData.responseData.userId);",
									"//      pm.test(\"passwordExpired is= \" + jsonData.responseData.passwordExpired, function () { pm.expect(jsonData.responseData.passwordExpired).to.eql(false) })",
									"//      pm.environment.set(\"swicthCaseIteration\", swicthCaseIteration + 1);",
									"//      postman.setNextRequest(\"SUPER_BO_LOGIN\");",
									"// }",
									"// else if (jsonData.responseData.statusCode > 0 && swicthCaseIteration === 1 || swicthCaseIteration === 2) {",
									"//      pm.test(\"-------------------------2.Negative scenario Of get/token api with invalid userName and Password.--------------------------------\");",
									"//      eval(pm.environment.get(\"IfTestCase\"))();",
									"//      pm.test(\"Message I am getting from Api is= \" + jsonData.responseData.message, function () { pm.expect(+jsonData.responseData.message) === (\"Incorrect UserName Or Password/PIN, Please Try Again\") })",
									"//      pm.test(\"Status Code I am getting from Api is= \" + jsonData.responseData.statusCode, function () { pm.expect(+jsonData.responseData.statusCode).to.eql(303) });",
									"//      pm.environment.set(\"swicthCaseIteration\", swicthCaseIteration + 1);",
									"//      postman.setNextRequest(\"SUPER_BO_LOGIN\")",
									"// }",
									"// else if (jsonData.responseData.statusCode > 0 && swicthCaseIteration === 3) {",
									"//      pm.test(\"-------------------------3.Negative scenario Of get/token api with invalid clientId.--------------------------------\");",
									"//      { eval(pm.environment.get(\"IfTestCase\"))(); }",
									"//      pm.environment.set(\"swicthCaseIteration\", swicthCaseIteration + 1);",
									"//      postman.setNextRequest(\"SUPER_BO_LOGIN\")",
									"// }",
									"// else if (jsonData.responseData.statusCode > 0 && swicthCaseIteration === 4) {",
									"//      pm.test(\"-------------------------4.Negative scenario Of get/token api with invalid clientSecret.--------------------------------\");",
									"//      { eval(pm.environment.get(\"IfTestCase\"))(); }",
									"//      pm.environment.set(\"swicthCaseIteration\", 0);",
									"//      postman.setNextRequest(\"validateUser\")",
									"// }",
									"// else {",
									"//      { eval(pm.environment.get(\"ElseTestCase\"))(); }",
									"//      pm.environment.set(\"swicthCaseIteration\", 0);",
									"// }"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// let swicthCaseIteration= +pm.environment.get(\"swicthCaseIteration\");\r",
									"// function sameLines()  {\r",
									"// pm.variables.set(\"userName\", \"skilrock\");\r",
									"// pm.variables.set(\"password\", 12345678);\r",
									"// pm.variables.set(\"clientId\", \"PAM\");\r",
									"// pm.variables.set(\"clientSecret\", \"ph2Nj5knd4IjWBVLc4mhmYHo1hQDEdS3FlIC2KskHpeHFhsqxD\");  }\r",
									"// switch(swicthCaseIteration) {\r",
									"//  case 0:\r",
									"// \tsameLines();  break;\r",
									"//  case 1:\r",
									"// \tsameLines();\r",
									"// \tpm.variables.set(\"userName\", null);  break;\r",
									"//  case 2:\r",
									"// \tsameLines();\r",
									"// \tpm.variables.set(\"password\", null);  break;\r",
									"//  case 3:\r",
									"// \tsameLines();\r",
									"// \tpm.variables.set(\"clientId\", null);  break;\r",
									"//  case 4:\r",
									"// \tsameLines();\r",
									"// \tpm.variables.set(\"clientSecret\", null);  break;  }\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"//VMFYq5Pz344-H8kuUUk1EedCUEPzeJAp2kl6Kddb2jE"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "userName",
								"value": "apoorv",
								"type": "text"
							},
							{
								"key": "password",
								"value": "12345678",
								"type": "text"
							},
							{
								"key": "clientId",
								"value": "UCM",
								"type": "text"
							},
							{
								"key": "clientSecret",
								"value": "ph2Nj5knd4IjWBVLc4mhmYHo1hQDEdS3FlIC2KskHpeHFhsqxD",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://ucm-backend.sapidblue.in/get/token",
							"protocol": "https",
							"host": [
								"ucm-backend",
								"sapidblue",
								"in"
							],
							"path": [
								"get",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "playerLogin PC BROWSER Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									" var jsonData = JSON.parse(responseBody);\r",
									"pm.environment.set(\"consumerToken\", jsonData.data.consumerToken);\r",
									"pm.environment.set(\"consumerId\",jsonData.data.consumerLoginInfo.consumerId);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var loginToken = \"Rishabh\";\r",
									"var password_Ecyrpt = pm.environment.get(\"password_Ecyrpt\")\r",
									"var password = CryptoJS.MD5(password_Ecyrpt+loginToken).toString();\r",
									"pm.variables.set('loginToken', loginToken);\r",
									"pm.environment.set('password', password);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "clientCode",
								"value": "CAM",
								"description": "(Required) Merchant Code"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"aliasName\": \"{{paypr}}\",\n    \"device\": \"PC\",\n    \"loginToken\": \"{{loginToken}}\",\n    \"password\": \"{{password}}\",\n    \"requestIp\":  \"127.0.0.1\",\n    \"userAgent\": null,\n    \"userName\": \"{{mobileNo}}\",\n    \"mobileCode\":\"+1868\",\n    \"ussd\": false\n}\n\n"
						},
						"url": {
							"raw": "{{CamUrl}}/preLogin/consumerLogin",
							"host": [
								"{{CamUrl}}"
							],
							"path": [
								"preLogin",
								"consumerLogin"
							]
						}
					},
					"response": []
				},
				{
					"name": "client/businessRegistration",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "clientCode",
								"value": "UCM"
							},
							{
								"key": "clientPwd",
								"value": "ph2Nj5knd4IjWBVLc4mhmYHo1hQDEdS3FlIC2KskHpeHFhsqxD"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"addressOne\": \"addressOne\",\n    \"addressTwo\": \"addressTwo\",\n    \"businessCode\": \"ORG20010112TEST\",\n    \"businessName\": \"Paypr\",\n    \"cityCode\": \"IN-HR-GU\",\n    \"configs\": [\n        {\n            \"configCode\": \"ALLOWED_CURRENCIES\",\n            \"configStatus\": \"ACTIVE\",\n            \"configValue\": \"TTD\"\n        }\n\n    ],\n    \"contactPerson\": \"Rishabh\",\n    \"countryCode\": \"IN\",\n    \"emailId\": \"paypr@gmail.com\",\n    \"mobileCode\": \"+1868\",\n    \"mobileNumber\": \"8989789878\",\n    \"phoneCode\": \"+1868\",\n    \"phoneNumber\": \"8989789878\",\n    \"stateCode\": \"IN-HR\",\n    \"ucmBusinessId\": 1,\n    \"zipCode\": \"122333\"\n}"
						},
						"url": {
							"raw": "{{CommUrl}}/client/businessRegistration",
							"host": [
								"{{CommUrl}}"
							],
							"path": [
								"client",
								"businessRegistration"
							]
						}
					},
					"response": []
				},
				{
					"name": "client/channelRegistration",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "clientCode",
								"value": "UCM"
							},
							{
								"key": "clientPwd",
								"value": "ph2Nj5knd4IjWBVLc4mhmYHo1hQDEdS3FlIC2KskHpeHFhsqxD"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"channelType\": \"B2B\",\n    \"configs\": [\n        {\n            \"configCode\": \"ZIPCODE_REGEX\",\n            \"configStatus\": \"ACTIVE\",\n            \"configValue\": \"^[0-9]{5}$\"\n        }\n    ],\n    \"currencyCode\": \"TTD\",\n    \"ucmBusinessId\": 35,\n    \"ucmChannelId\": 21,\n    \"ucmChannelName\": \"Channelname\"\n}"
						},
						"url": {
							"raw": "{{CommUrl}}/client/channelRegistration",
							"host": [
								"{{CommUrl}}"
							],
							"path": [
								"client",
								"channelRegistration"
							]
						}
					},
					"response": []
				},
				{
					"name": "client/updateChannel",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "clientCode",
								"value": "UCM"
							},
							{
								"key": "clientPwd",
								"value": "ph2Nj5knd4IjWBVLc4mhmYHo1hQDEdS3FlIC2KskHpeHFhsqxD"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"configs\": [\n        null\n    ],\n    \"status\": \"INACTIVE\",\n    \"ucmBusinessId\": 0,\n    \"ucmChannelId\": 0\n}"
						},
						"url": {
							"raw": "{{CommUrl}}/client/updateChannel",
							"host": [
								"{{CommUrl}}"
							],
							"path": [
								"client",
								"updateChannel"
							]
						}
					},
					"response": []
				},
				{
					"name": "getUserMenus",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{BoToken}}"
							}
						],
						"url": {
							"raw": "{{CommUrl}}/v1.0/getUserMenus?appType=Web_Panel&engineCode=COMM&languageCode=en&userId={{BoUserId}}&userRequired=NO",
							"host": [
								"{{CommUrl}}"
							],
							"path": [
								"v1.0",
								"getUserMenus"
							],
							"query": [
								{
									"key": "appType",
									"value": "Web_Panel"
								},
								{
									"key": "engineCode",
									"value": "COMM"
								},
								{
									"key": "languageCode",
									"value": "en"
								},
								{
									"key": "userId",
									"value": "{{BoUserId}}"
								},
								{
									"key": "userRequired",
									"value": "NO"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getCountryList",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{BoToken}}"
							}
						],
						"url": {
							"raw": "{{CommUrl}}/v1.0/getCountryList",
							"host": [
								"{{CommUrl}}"
							],
							"path": [
								"v1.0",
								"getCountryList"
							]
						}
					},
					"response": []
				},
				{
					"name": "getStateList",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{BoToken}}"
							}
						],
						"url": {
							"raw": "{{CommUrl}}/v1.0/getStateList?countryCode=TT",
							"host": [
								"{{CommUrl}}"
							],
							"path": [
								"v1.0",
								"getStateList"
							],
							"query": [
								{
									"key": "countryCode",
									"value": "TT"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getCityList",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{BoToken}}"
							}
						],
						"url": {
							"raw": "{{CommUrl}}/v1.0/getCityList?stateCode=TT-SG",
							"host": [
								"{{CommUrl}}"
							],
							"path": [
								"v1.0",
								"getCityList"
							],
							"query": [
								{
									"key": "stateCode",
									"value": "TT-SG"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getChannelList",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{BoToken}}"
							}
						],
						"url": {
							"raw": "{{CommUrl}}/v1.0/getChannelList?businessId=2",
							"host": [
								"{{CommUrl}}"
							],
							"path": [
								"v1.0",
								"getChannelList"
							],
							"query": [
								{
									"key": "businessId",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getChannelAlias",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{BoToken}}"
							}
						],
						"url": {
							"raw": "{{CommUrl}}/v1.0/getChannelAlias?businessId=1&channelId=1",
							"host": [
								"{{CommUrl}}"
							],
							"path": [
								"v1.0",
								"getChannelAlias"
							],
							"query": [
								{
									"key": "businessId",
									"value": "1"
								},
								{
									"key": "channelId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "validateUser",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{BoToken}}"
							}
						],
						"url": {
							"raw": "{{CommUrl}}/v1.0/validateUser?userId=10",
							"host": [
								"{{CommUrl}}"
							],
							"path": [
								"v1.0",
								"validateUser"
							],
							"query": [
								{
									"key": "userId",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getBusinessList",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{BoToken}}"
							}
						],
						"url": {
							"raw": "{{CommUrl}}/v1.0/getBusinessList",
							"host": [
								"{{CommUrl}}"
							],
							"path": [
								"v1.0",
								"getBusinessList"
							]
						}
					},
					"response": []
				},
				{
					"name": "getChannelPreference",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{BoToken}}"
							}
						],
						"url": {
							"raw": "{{CommUrl}}/v1.0/getChannelPreference?businessId=2&channelId=2&userType=CONSUMER",
							"host": [
								"{{CommUrl}}"
							],
							"path": [
								"v1.0",
								"getChannelPreference"
							],
							"query": [
								{
									"key": "businessId",
									"value": "2"
								},
								{
									"key": "channelId",
									"value": "2"
								},
								{
									"key": "eventType",
									"value": "ACCOUNT_CLOSED",
									"disabled": true
								},
								{
									"key": "userType",
									"value": "CONSUMER"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "updateChannelPreference",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{BoToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"businessId\": 2,\n    \"channelId\": 2,\n    \"currencyCharges\": [\n        {\n            \"charges\": {\n                \"SMS\": 0,\n                \"EMAIL\": 0,\n                \"ANDROID\": 0,\n                \"IOS\":0.00004,\n                \"INBOX\":0\n            },\n            \"currencyCode\": \"TTD\"\n        }\n    ],\n    \"events\": [\n        {\n            \"android\": {\n                \"chargeToUser\": \"NO\",\n                \"communication\": \"N\",\n                \"userOption\": \"NO\"\n            },\n            \"email\": {\n                \"chargeToUser\": \"NO\",\n                \"communication\": \"N\",\n                \"userOption\": \"NO\"\n            },\n            \"inbox\": {\n                \"chargeToUser\": \"NO\",\n                \"communication\": \"N\",\n                \"userOption\": \"NO\"\n            },\n            \"ios\": {\n                \"chargeToUser\": \"NO\",\n                \"communication\": \"N\",\n                \"userOption\": \"NO\"\n            },\n            \"preferenceId\": 214,\n            \"sms\": {\n                \"chargeToUser\": \"NO\",\n                \"communication\": \"N\",\n                \"userOption\": \"NO\"\n            }\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://comm-backend.sapidblue.in/v1.0/updateChannelPreference",
							"protocol": "https",
							"host": [
								"comm-backend",
								"sapidblue",
								"in"
							],
							"path": [
								"v1.0",
								"updateChannelPreference"
							]
						}
					},
					"response": []
				},
				{
					"name": "getMsgChannel",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{BoToken}}"
							}
						],
						"url": {
							"raw": "{{CommUrl}}/v1.0/getMsgChannel?businessId=2&channelId=2&msgChannelId=1",
							"host": [
								"{{CommUrl}}"
							],
							"path": [
								"v1.0",
								"getMsgChannel"
							],
							"query": [
								{
									"key": "businessId",
									"value": "2"
								},
								{
									"key": "channelId",
									"value": "2"
								},
								{
									"key": "msgChannelId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getLanguage",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"pm.environment.set(\"englanguageId\", jsonData.responseData.data[0].languageId);",
									"pm.environment.set(\"englanguageCode\", jsonData.responseData.data[0].languageCode);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{BoToken}}"
							}
						],
						"url": {
							"raw": "{{CommUrl}}/v1.0/getLanguage?businessId=2&channelId=2",
							"host": [
								"{{CommUrl}}"
							],
							"path": [
								"v1.0",
								"getLanguage"
							],
							"query": [
								{
									"key": "businessId",
									"value": "2"
								},
								{
									"key": "channelId",
									"value": "2"
								},
								{
									"key": "languageCode",
									"value": "en",
									"disabled": true
								},
								{
									"key": "languageId",
									"value": "1",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getEventType",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{BoToken}}"
							}
						],
						"url": {
							"raw": "{{CommUrl}}/v1.0/getEventType?businessId=1&channelId=1&name={{aliasName}}&userType=CONSUMER",
							"host": [
								"{{CommUrl}}"
							],
							"path": [
								"v1.0",
								"getEventType"
							],
							"query": [
								{
									"key": "businessId",
									"value": "1"
								},
								{
									"key": "channelId",
									"value": "1"
								},
								{
									"key": "name",
									"value": "{{aliasName}}"
								},
								{
									"key": "templateId",
									"value": "1",
									"disabled": true
								},
								{
									"key": "userType",
									"value": "CONSUMER"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getConfigurations",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{BoToken}}"
							}
						],
						"url": {
							"raw": "{{CommUrl}}/v1.0/getConfigurations?businessId=2&channelId=2&configType=BACKOFFICE",
							"host": [
								"{{CommUrl}}"
							],
							"path": [
								"v1.0",
								"getConfigurations"
							],
							"query": [
								{
									"key": "businessId",
									"value": "2"
								},
								{
									"key": "channelId",
									"value": "2"
								},
								{
									"key": "configType",
									"value": "BACKOFFICE"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getLoginData",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{BoToken}}"
							}
						],
						"url": {
							"raw": "{{CommUrl}}/v1.0/getLoginData",
							"host": [
								"{{CommUrl}}"
							],
							"path": [
								"v1.0",
								"getLoginData"
							]
						}
					},
					"response": []
				},
				{
					"name": "getEventType",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{BoToken}}"
							}
						],
						"url": {
							"raw": "{{CommUrl}}/v1.0/getEventType?aliasName={{paypr}}&businessId=2&channelId=2&userType=CONSUMER",
							"host": [
								"{{CommUrl}}"
							],
							"path": [
								"v1.0",
								"getEventType"
							],
							"query": [
								{
									"key": "aliasName",
									"value": "{{paypr}}"
								},
								{
									"key": "businessId",
									"value": "2"
								},
								{
									"key": "channelId",
									"value": "2"
								},
								{
									"key": "templateId",
									"value": "",
									"disabled": true
								},
								{
									"key": "userType",
									"value": "CONSUMER"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getTemplate",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{BoToken}}"
							}
						],
						"url": {
							"raw": "{{CommUrl}}/v1.0/getTemplate?aliasId=2&businessId=2&channelId=2&eventType=REGISTRATION",
							"host": [
								"{{CommUrl}}"
							],
							"path": [
								"v1.0",
								"getTemplate"
							],
							"query": [
								{
									"key": "aliasId",
									"value": "2"
								},
								{
									"key": "businessId",
									"value": "2"
								},
								{
									"key": "channelId",
									"value": "2"
								},
								{
									"key": "eventType",
									"value": "REGISTRATION"
								},
								{
									"key": "templateId",
									"value": "4264",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getTemplateDetail",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{BoToken}}"
							}
						],
						"url": {
							"raw": "{{CommUrl}}/v1.0/getTemplateDetail?businessId=2&channelId=2&eventType=REGISTRATION&languageId=1&parentTemplateId=4237",
							"host": [
								"{{CommUrl}}"
							],
							"path": [
								"v1.0",
								"getTemplateDetail"
							],
							"query": [
								{
									"key": "businessId",
									"value": "2"
								},
								{
									"key": "channelId",
									"value": "2"
								},
								{
									"key": "eventType",
									"value": "REGISTRATION"
								},
								{
									"key": "languageId",
									"value": "1"
								},
								{
									"key": "parentTemplateId",
									"value": "4237"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "fetchDeepLinks",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{BoToken}}"
							}
						],
						"url": {
							"raw": "https://comm-backend.sapidblue.in/v1.0/fetchDeepLinks?aliasName={{paypr}}&appType=ANDROID_APP",
							"protocol": "https",
							"host": [
								"comm-backend",
								"sapidblue",
								"in"
							],
							"path": [
								"v1.0",
								"fetchDeepLinks"
							],
							"query": [
								{
									"key": "aliasName",
									"value": "{{paypr}}"
								},
								{
									"key": "appType",
									"value": "ANDROID_APP"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getUserType",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{BoToken}}"
							}
						],
						"url": {
							"raw": "{{CommUrl}}/v1.0/getUserType?businessId=2",
							"host": [
								"{{CommUrl}}"
							],
							"path": [
								"v1.0",
								"getUserType"
							],
							"query": [
								{
									"key": "businessId",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "userSearch",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{BoToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"aliasId\": 2,\n    \"businessId\": 2,\n    \"channelId\": 2,\n    \"userType\": \"CONSUMER\",\n    \"city\": \"Prothrapur\",\n    \"country\": \"string\",\n    \"state\": \"\"\n}"
						},
						"url": {
							"raw": "{{CommUrl}}/v1.0/userSearch",
							"host": [
								"{{CommUrl}}"
							],
							"path": [
								"v1.0",
								"userSearch"
							]
						}
					},
					"response": []
				},
				{
					"name": "Clone_userSearch",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{BoToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"aliasId\": 2,\n    \"businessId\": 2,\n    \"channelId\": 2,\n    \"city\": null,\n    \"country\": null,\n    \"createdAt\": null,\n    \"email\": null,\n    \"firstName\": null,\n    \"groupName\": null,\n    \"lastName\": null,\n    \"limit\": 100,\n    \"middleName\": null,\n    \"mobileCode\": null,\n    \"mobileNo\": null,\n    \"offset\": 0,\n    \"state\": null,\n    \"status\": null,\n    \"userId\": null,\n    \"userIdList\": [\n        null\n    ],\n    \"userName\": null,\n    \"userType\": \"CONSUMER\"\n}"
						},
						"url": {
							"raw": "{{CommUrl}}/v1.0/userSearch",
							"host": [
								"{{CommUrl}}"
							],
							"path": [
								"v1.0",
								"userSearch"
							]
						}
					},
					"response": []
				},
				{
					"name": "createSearchQuery",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{BoToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"aliasId\": 2,\n    \"businessId\": 2,\n    \"channelId\": 2,\n    \"groupName\": \"CreateSearchQueryTest1\",\n    \"status\": \"ACTIVE\",\n    \"userType\": \"CONSUMER\"\n}"
						},
						"url": {
							"raw": "https://comm-backend.sapidblue.in/v1.0/createSearchQuery",
							"protocol": "https",
							"host": [
								"comm-backend",
								"sapidblue",
								"in"
							],
							"path": [
								"v1.0",
								"createSearchQuery"
							]
						}
					},
					"response": []
				},
				{
					"name": "Clone_createSearchQuery",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{BoToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"aliasId\": 2,\n    \"businessId\": 2,\n    \"channelId\": 2,\n    \"city\": null,\n    \"country\": null,\n    \"createdAt\": null,\n    \"email\": null,\n    \"firstName\": null,\n    \"groupName\": \"CreateSearchQueryTest\",\n    \"lastName\": null,\n    \"limit\": null,\n    \"middleName\": null,\n    \"mobileCode\": null,\n    \"mobileNo\": null,\n    \"offset\": null,\n    \"state\": null,\n    \"status\": \"ACTIVE\",\n    \"userId\": null,\n    \"userIdList\": [\n        null\n    ],\n    \"userName\": null,\n    \"userType\": \"CONSUMER\"\n}"
						},
						"url": {
							"raw": "{{CommUrl}}/v1.0/createSearchQuery",
							"host": [
								"{{CommUrl}}"
							],
							"path": [
								"v1.0",
								"createSearchQuery"
							]
						}
					},
					"response": []
				},
				{
					"name": "createUserGroup",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{BoToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"businessId\": 2,\n    \"channelId\": 2,\n    \"groupName\": \"TestGroupRd1\",\n    \"userIds\": [\n        28\n    ],\n    \"userType\": \"CONSUMER\"\n}"
						},
						"url": {
							"raw": "{{CommUrl}}/v1.0/createUserGroup",
							"host": [
								"{{CommUrl}}"
							],
							"path": [
								"v1.0",
								"createUserGroup"
							]
						}
					},
					"response": []
				},
				{
					"name": "getUserGroupAndSearchQuery",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{BoToken}}"
							}
						],
						"url": {
							"raw": "{{CommUrl}}/v1.0/getUserGroupAndSearchQuery?businessId=2&channelId=2&groupType=SEARCH_QUERY&type=GROUP_MANAGEMENT&userType=CONSUMER",
							"host": [
								"{{CommUrl}}"
							],
							"path": [
								"v1.0",
								"getUserGroupAndSearchQuery"
							],
							"query": [
								{
									"key": "businessId",
									"value": "2"
								},
								{
									"key": "channelId",
									"value": "2"
								},
								{
									"key": "groupType",
									"value": "SEARCH_QUERY"
								},
								{
									"key": "type",
									"value": "GROUP_MANAGEMENT",
									"description": "GROUP_TYPE, GROUP_MANAGEMENT"
								},
								{
									"key": "userType",
									"value": "CONSUMER"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "updateUserGroup",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{BoToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"groupId\": 4,\n    \"newUser\": [\n        21\n    ],\n    \"removedUser\": [\n        22,23\n    ],\n    \"status\": \"ACTIVE\"\n}"
						},
						"url": {
							"raw": "{{CommUrl}}/v1.0/updateUserGroup",
							"host": [
								"{{CommUrl}}"
							],
							"path": [
								"v1.0",
								"updateUserGroup"
							]
						}
					},
					"response": []
				},
				{
					"name": "getUserCount",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{BoToken}}"
							}
						],
						"url": {
							"raw": "{{CommUrl}}/v1.0/getUserCount?groupId=4",
							"host": [
								"{{CommUrl}}"
							],
							"path": [
								"v1.0",
								"getUserCount"
							],
							"query": [
								{
									"key": "groupId",
									"value": "4"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "duplicateUserGroup",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{BoToken}}"
							}
						],
						"url": {
							"raw": "{{CommUrl}}/v1.0/duplicateUserGroup?groupId=4&groupName=TestGroupRd5",
							"host": [
								"{{CommUrl}}"
							],
							"path": [
								"v1.0",
								"duplicateUserGroup"
							],
							"query": [
								{
									"key": "groupId",
									"value": "4"
								},
								{
									"key": "groupName",
									"value": "TestGroupRd5"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getUserGroupDetail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// error msg is not correct.",
									"",
									"// {",
									"//     \"responseCode\": 0,",
									"//     \"responseMessage\": \"Success\",",
									"//     \"responseData\": {",
									"//         \"message\": \"Please Provide Valid Group Type.\",",
									"//         \"statusCode\": 20219,",
									"//         \"errors\": null",
									"//     }",
									"// }",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{BoToken}}"
							}
						],
						"url": {
							"raw": "{{CommUrl}}/v1.0/getUserGroupDetail?groupId=4&groupUser=false",
							"host": [
								"{{CommUrl}}"
							],
							"path": [
								"v1.0",
								"getUserGroupDetail"
							],
							"query": [
								{
									"key": "groupId",
									"value": "4"
								},
								{
									"key": "groupUser",
									"value": "false"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getUserPreference",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{BoToken}}"
							}
						],
						"url": {
							"raw": "{{CommUrl}}/v1.0/getUserPreference?businessId=2&channelId=2&eventType=REGISTRATION&userId=21&userType=CONSUMER",
							"host": [
								"{{CommUrl}}"
							],
							"path": [
								"v1.0",
								"getUserPreference"
							],
							"query": [
								{
									"key": "businessId",
									"value": "2"
								},
								{
									"key": "channelId",
									"value": "2"
								},
								{
									"key": "eventType",
									"value": "REGISTRATION"
								},
								{
									"key": "userId",
									"value": "21"
								},
								{
									"key": "userType",
									"value": "CONSUMER"
								},
								{
									"key": "username",
									"value": "2",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getInboxList",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "userId",
								"value": "{{consumerId}}"
							},
							{
								"key": "userToken",
								"value": "{{consumerToken}}"
							}
						],
						"url": {
							"raw": "{{CommUrl}}/postLogin/getInboxList?aliasName={{paypr}}&limit=100&offset=0&userType=CONSUMER",
							"host": [
								"{{CommUrl}}"
							],
							"path": [
								"postLogin",
								"getInboxList"
							],
							"query": [
								{
									"key": "aliasName",
									"value": "{{paypr}}"
								},
								{
									"key": "limit",
									"value": "100"
								},
								{
									"key": "offset",
									"value": "0"
								},
								{
									"key": "userType",
									"value": "CONSUMER"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "updateInbox",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "userId",
								"value": "{{consumerId}}"
							},
							{
								"key": "userToken",
								"value": "{{consumerToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"aliasName\": \"{{paypr}}\",\n    \"inboxId\": 0,\n    \"status\": \"ACTIVE\",\n    \"userType\": \"CONSUMER\"\n}"
						},
						"url": {
							"raw": "https://comm-backend.sapidblue.in/postLogin/updateInbox",
							"protocol": "https",
							"host": [
								"comm-backend",
								"sapidblue",
								"in"
							],
							"path": [
								"postLogin",
								"updateInbox"
							]
						}
					},
					"response": []
				},
				{
					"name": "getContentList",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "userId",
								"value": "{{consumerId}}"
							},
							{
								"key": "userToken",
								"value": "{{consumerToken}}"
							}
						],
						"url": {
							"raw": "{{CommUrl}}/postLogin/getContentList?aliasName={{paypr}}&category=1",
							"host": [
								"{{CommUrl}}"
							],
							"path": [
								"postLogin",
								"getContentList"
							],
							"query": [
								{
									"key": "aliasName",
									"value": "{{paypr}}"
								},
								{
									"key": "category",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "client/uploadMultipartImage Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "clientCode",
								"value": "COMM"
							},
							{
								"key": "clientPwd",
								"value": "ph2Nj5knd4IjWBVLc4mhmYHo1hQDEdS3FlIC2KskHpeHFhsqxD"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "businessId",
									"value": "2",
									"type": "text"
								},
								{
									"key": "image",
									"type": "file",
									"src": "/home/stpl/Desktop/Test.jpg"
								},
								{
									"key": "channelId",
									"value": "2",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{CommUrl}}/client/uploadMultipartImage",
							"host": [
								"{{CommUrl}}"
							],
							"path": [
								"client",
								"uploadMultipartImage"
							]
						}
					},
					"response": []
				},
				{
					"name": "reportUserProblems",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "userId",
								"value": "{{consumerId}}"
							},
							{
								"key": "userToken",
								"value": "{{consumerToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"aliasName\": \"{{paypr}}\",\n    \"problemDescription\": \"problem\",\n    \"problemProofPath\": \"https://d2630mfamks0ao.cloudfront.net/CommUploads/templateImages/Test.jpg\",\n    \"userType\": \"CONSUMER\"\n}"
						},
						"url": {
							"raw": "{{CommUrl}}/postLogin/reportUserProblems",
							"host": [
								"{{CommUrl}}"
							],
							"path": [
								"postLogin",
								"reportUserProblems"
							]
						}
					},
					"response": []
				},
				{
					"name": "getUserTickets",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"var length =jsonData.responseData.data.length\r",
									"pm.test(length);\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"// var jsonData = JSON.parse(responseBody);\r",
									"// pm.environment.set(\"Verification_requestId\", +jsonData.responseData.data[(jsonData.responseData.data.length)-1].requestId);\r",
									"// pm.environment.set(\"orgId\", +jsonData.responseData.data[(jsonData.responseData.data.length)-1].orgId);\r",
									"\r",
									"// var length =jsonData.responseData.data.length\r",
									"//  pm.test(length);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{BoToken}}"
							},
							{
								"key": "merchantId",
								"value": "1",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{CommUrl}}/v1.0/getUserTickets?businessId=2&endDate=2022-10-14&startDate=2022-10-10&statusList=SUBMITTED&isReport=true&channelId=2&aliasId=2",
							"host": [
								"{{CommUrl}}"
							],
							"path": [
								"v1.0",
								"getUserTickets"
							],
							"query": [
								{
									"key": "businessId",
									"value": "2"
								},
								{
									"key": "endDate",
									"value": "2022-10-14"
								},
								{
									"key": "startDate",
									"value": "2022-10-10"
								},
								{
									"key": "statusList",
									"value": "SUBMITTED"
								},
								{
									"key": "actionType",
									"value": "ALL",
									"disabled": true
								},
								{
									"key": "isReport",
									"value": "true"
								},
								{
									"key": "channelId",
									"value": "2"
								},
								{
									"key": "aliasId",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "assignUserTicket",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{BoToken}}"
							},
							{
								"key": "merchantId",
								"value": "1",
								"disabled": true
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"businessId\": 2,\r\n    \"channelId\":2,\r\n    \"ticketId\": 1\r\n}"
						},
						"url": {
							"raw": "{{CommUrl}}/v1.0/assignUserTicket",
							"host": [
								"{{CommUrl}}"
							],
							"path": [
								"v1.0",
								"assignUserTicket"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateUserTicketStatus",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{BoToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"businessId\":null,\r\n    \"channelId\":2,\r\n    \"remarks\": \"This error occured Due to country code will email you shortly with the solution\",\r\n    \"ticketId\":1,\r\n    \"ticketStatus\": \"CLOSED\"\r\n}"
						},
						"url": {
							"raw": "{{CommUrl}}/v1.0/updateUserTicketStatus",
							"host": [
								"{{CommUrl}}"
							],
							"path": [
								"v1.0",
								"updateUserTicketStatus"
							]
						}
					},
					"response": []
				},
				{
					"name": "uploadMultipartImage",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									" var jsonData = JSON.parse(responseBody);\r",
									"pm.environment.set(\"imagePath\", jsonData.responseData.data);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{BoToken}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "businessId",
									"value": "2",
									"type": "text"
								},
								{
									"key": "image",
									"type": "file",
									"src": "/home/stpl/Documents/Doc.jpeg"
								},
								{
									"key": "channelId",
									"value": "2",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{CommUrl}}/v1.0/uploadMultipartImage",
							"host": [
								"{{CommUrl}}"
							],
							"path": [
								"v1.0",
								"uploadMultipartImage"
							]
						}
					},
					"response": []
				},
				{
					"name": "addPromoMessage",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{BoToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"aliasId\": 2,\n    \"businessId\": 2,\n    \"channelId\": 2,\n    \"promoMessages\": [\n        {\n            \"expiryTime\": \"2022-10-20 09:13:00\",\n            \"languageId\": \"{{englanguageId}}\",\n            \"msgChannelType\": \"SMS\",\n            \"promoContent\": \"Rishabh Test Promo Content\",\n            \"promoFromEmail\": \"rishabh.kumar@sapidblue.in\",\n            \"promoFromName\": \"Rishabh\",\n            \"promoSubject\": \"Rishabh Test Subject\"\n        }\n    ],\n    \"promoName\": \"RishabhtestPromo1\",\n    \"scheduledTime\": \"2022-10-13 10:45:00\",\n    \"userGroupId\": 4\n}"
						},
						"url": {
							"raw": "{{CommUrl}}/v1.0/addPromoMessage",
							"host": [
								"{{CommUrl}}"
							],
							"path": [
								"v1.0",
								"addPromoMessage"
							]
						}
					},
					"response": []
				},
				{
					"name": "getPromoMessage",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{BoToken}}"
							}
						],
						"url": {
							"raw": "https://comm-backend.sapidblue.in/v1.0/getPromoMessage?aliasId=2&businessId=2&channelId=2&endCreatedAt=2022-10-20 23:59:00&endScheduledDate=2022-10-20 23:59:00&groupId=12&startCreatedAt=2022-10-13 00:00:00&startScheduledDate=2022-10-13 00:00:00",
							"protocol": "https",
							"host": [
								"comm-backend",
								"sapidblue",
								"in"
							],
							"path": [
								"v1.0",
								"getPromoMessage"
							],
							"query": [
								{
									"key": "aliasId",
									"value": "2"
								},
								{
									"key": "businessId",
									"value": "2"
								},
								{
									"key": "channelId",
									"value": "2"
								},
								{
									"key": "endCreatedAt",
									"value": "2022-10-20 23:59:00"
								},
								{
									"key": "endScheduledDate",
									"value": "2022-10-20 23:59:00"
								},
								{
									"key": "groupId",
									"value": "12"
								},
								{
									"key": "promoId",
									"value": "1",
									"disabled": true
								},
								{
									"key": "startCreatedAt",
									"value": "2022-10-13 00:00:00"
								},
								{
									"key": "startScheduledDate",
									"value": "2022-10-13 00:00:00"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getPromoMessageDetail",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{BoToken}}"
							}
						],
						"url": {
							"raw": "https://comm-backend.sapidblue.in/v1.0/getPromoMessageDetail?aliasId=2&businessId=2&channelId=2&languageId=1&promoId=1",
							"protocol": "https",
							"host": [
								"comm-backend",
								"sapidblue",
								"in"
							],
							"path": [
								"v1.0",
								"getPromoMessageDetail"
							],
							"query": [
								{
									"key": "aliasId",
									"value": "2"
								},
								{
									"key": "businessId",
									"value": "2"
								},
								{
									"key": "channelId",
									"value": "2"
								},
								{
									"key": "languageId",
									"value": "1"
								},
								{
									"key": "promoId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getPromoCommDetailReport",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{BoToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"aliasName\": \"{{paypr}}\",\n    \"refId\": 1,\n    \"type\": null\n}"
						},
						"url": {
							"raw": "{{CommUrl}}/v1.0/getPromoCommDetailReport",
							"host": [
								"{{CommUrl}}"
							],
							"path": [
								"v1.0",
								"getPromoCommDetailReport"
							]
						}
					},
					"response": []
				},
				{
					"name": "getPromoCommReport",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{BoToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"aliasName\": \"{{paypr}}\",\n    \"fromDate\": \"2022-10-13 00:00:00\",\n    \"offset\": 0,\n    \"sortBy\": null,\n    \"sortType\": null,\n    \"toDate\": \"2022-10-17 00:00:00\",\n    \"toExport\": null,\n    \"type\": \"BULK\"\n}"
						},
						"url": {
							"raw": "{{CommUrl}}/v1.0/getPromoCommReport",
							"host": [
								"{{CommUrl}}"
							],
							"path": [
								"v1.0",
								"getPromoCommReport"
							]
						}
					},
					"response": []
				},
				{
					"name": "updatePromoMessage",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{BoToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"category\": \"string\",\n    \"expiryTime\": \"string\",\n    \"groupId\": 4,\n    \"languageId\": 1,\n    \"messages\": [\n        {\n            \"msgChannelType\":\"SMS\",\n            \"status\": \"INACTIVE\"\n        }\n    ],\n    \"promoId\": 1,\n    \"scheduledTime\": null\n}"
						},
						"url": {
							"raw": "{{CommUrl}}/v1.0/updatePromoMessage",
							"host": [
								"{{CommUrl}}"
							],
							"path": [
								"v1.0",
								"updatePromoMessage"
							]
						}
					},
					"response": []
				},
				{
					"name": "updatePromoMessage Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Authorization",
								"value": "Bearer XXXX"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"category\": \"string\",\n    \"expiryTime\": \"string\",\n    \"groupId\": 0,\n    \"languageId\": 0,\n    \"messages\": [\n        {\n            \"androidDeepLinkId\": 0,\n            \"expiryTime\": \"string\",\n            \"iosDeepLinkId\": 0,\n            \"msgChannelType\": \"string\",\n            \"promoContent\": \"string\",\n            \"promoFromEmail\": \"string\",\n            \"promoFromName\": \"string\",\n            \"promoSubject\": \"string\",\n            \"status\": \"ACTIVE\"\n        }\n    ],\n    \"promoId\": 0,\n    \"scheduledTime\": \"string\"\n}"
						},
						"url": {
							"raw": "{{CommUrl}}/v1.0/updatePromoMessage",
							"host": [
								"{{CommUrl}}"
							],
							"path": [
								"v1.0",
								"updatePromoMessage"
							]
						}
					},
					"response": []
				},
				{
					"name": "createMarquee",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{BoToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"businessId\": 2,\n    \"channelId\": 2,\n    \"content\": \"First test Marquee Content\",\n    \"speed\": 5\n}"
						},
						"url": {
							"raw": "{{CommUrl}}/v1.0/createMarquee",
							"host": [
								"{{CommUrl}}"
							],
							"path": [
								"v1.0",
								"createMarquee"
							]
						}
					},
					"response": []
				},
				{
					"name": "getMarquee",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{BoToken}}"
							}
						],
						"url": {
							"raw": "{{CommUrl}}/v1.0/getMarquee?businessId=2&channelId=2",
							"host": [
								"{{CommUrl}}"
							],
							"path": [
								"v1.0",
								"getMarquee"
							],
							"query": [
								{
									"key": "businessId",
									"value": "2"
								},
								{
									"key": "channelId",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "removePromoMessages",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{BoToken}}"
							}
						],
						"url": {
							"raw": "https://comm-backend.sapidblue.in/v1.0/removePromoMessages?promoChildId=1",
							"protocol": "https",
							"host": [
								"comm-backend",
								"sapidblue",
								"in"
							],
							"path": [
								"v1.0",
								"removePromoMessages"
							],
							"query": [
								{
									"key": "promoChildId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "SendEventComm",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "clientCode",
								"value": "UCM"
							},
							{
								"key": "clientPwd",
								"value": "ph2Nj5knd4IjWBVLc4mhmYHo1hQDEdS3FlIC2KskHpeHFhsqxD"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"businessId\": 7,\n    \"currencyCode\": \"TWD\",\n    \"eventType\": \"BO_FORGOT_PASSWORD\",\n    \"languageCode\": \"en\",\n    \"params\": {\n        \"firstName\": \"saket\",\n        \"lastName\": \"sharma\"\n    },\n    \"userCommDetails\": {\n        \"emailId\": \"satyendra.jain@sapidblue.com\",\n        \"mobileNo\": \"+886898989898\"\n    },\n    \"userType\": \"BO\"\n}"
						},
						"url": {
							"raw": "https://comm-backend.sapidblue.in/client/sendEventComm",
							"protocol": "https",
							"host": [
								"comm-backend",
								"sapidblue",
								"in"
							],
							"path": [
								"client",
								"sendEventComm"
							]
						}
					},
					"response": []
				},
				{
					"name": "retLogin/updateInbox",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "aliasName",
								"value": "https://www.paypr-retail.com"
							},
							{
								"key": "userToken",
								"value": "yuD66fNZljK93oz7B1DBr2t5M8JP8Yn619xMU3eW8As"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"inboxId\": 0,\r\n    \"status\": \"string\",\r\n    \"userType\": \"RET\"\r\n}"
						},
						"url": {
							"raw": "https://comm-backend.sapidblue.in/retLogin/updateInbox",
							"protocol": "https",
							"host": [
								"comm-backend",
								"sapidblue",
								"in"
							],
							"path": [
								"retLogin",
								"updateInbox"
							]
						}
					},
					"response": []
				},
				{
					"name": "Merchant_User_Login Copy",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// let swicthCaseIteration= +pm.environment.get(\"swicthCaseIteration\");\r",
									"// function sameLines()  {\r",
									"// pm.variables.set(\"userName\", \"skilrock\");\r",
									"// pm.variables.set(\"password\", 12345678);\r",
									"// pm.variables.set(\"clientId\", \"RMS\");\r",
									"// pm.variables.set(\"clientSecret\", \"ph2Nj5knd4IjWBVLc4mhmYHo1hQDEdS3FlIC2KskHpeHFhsqxD\");  }\r",
									"// switch(swicthCaseIteration) {\r",
									"//  case 0:\r",
									"// \tsameLines();  break;\r",
									"//  case 1:\r",
									"// \tsameLines();\r",
									"// \tpm.variables.set(\"userName\", null);  break;\r",
									"//  case 2:\r",
									"// \tsameLines();\r",
									"// \tpm.variables.set(\"password\", null);  break;\r",
									"//  case 3:\r",
									"// \tsameLines();\r",
									"// \tpm.variables.set(\"clientId\", null);  break;\r",
									"//  case 4:\r",
									"// \tsameLines();\r",
									"// \tpm.variables.set(\"clientSecret\", null);  break;  }"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"pm.environment.set(\"MerchantToken\", jsonData.responseData.authToken);",
									"pm.environment.set(\"MerchantUserId\", jsonData.responseData.userId)",
									" ",
									"// let swicthCaseIteration = +pm.environment.get(\"swicthCaseIteration\");",
									"// if (jsonData.responseData.statusCode === 0 && swicthCaseIteration === 0) {",
									"//      pm.test(\"-------------------------1.Positive scenario Of get/token api With valid key Data.--------------------------------\");",
									"//      eval(pm.environment.get(\"IfTestCase\"))();",
									" ",
									"//      pm.test(\"Message I am getting from Api is= \" + jsonData.responseData.message, function () { pm.expect(jsonData.responseData.message).to.eql(\"Success\") })",
									"// pm.test(\"Message I am getting from Api is= \" + jsonData.responseData.message, function () { pm.expect(jsonData.responseData.message).to.eql(\"Success\") })",
									"// pm.test(\"Status Code I am getting from Api is= \" + jsonData.responseData.statusCode, function () { pm.expect(+jsonData.responseData.statusCode).to.eql(0) })",
									"//      pm.test(\"authToken I am getting from Api is= \" + jsonData.responseData.authToken, function () { pm.expect(+jsonData.responseData.authToken).to.eql(+jsonData.responseData.authToken) })",
									"//      pm.test(\"timestamp I am getting from Api is= \" + jsonData.responseData.timestamp, function () { pm.expect(+jsonData.responseData.timestamp).to.eql(+jsonData.responseData.timestamp) })",
									"//      pm.test(\"expiryTime I am getting from Api is= \" + jsonData.responseData.expiryTime, function () { pm.expect(+jsonData.responseData.expiryTime).to.eql(+jsonData.responseData.expiryTime) })",
									"//      pm.test(\"issueAt I am getting from Api = \" + jsonData.responseData.issueAt, function () { pm.expect(+jsonData.responseData.issueAt).to.eql(+jsonData.responseData.issueAt) })",
									"//      pm.test(\"Login superBo User Id Is=\" + jsonData.responseData.userId);",
									"//      pm.test(\"passwordExpired is= \" + jsonData.responseData.passwordExpired, function () { pm.expect(jsonData.responseData.passwordExpired).to.eql(false) })",
									"//      pm.environment.set(\"swicthCaseIteration\", swicthCaseIteration + 1);",
									"//      postman.setNextRequest(\"SUPER_BO_LOGIN\");",
									"// }",
									"// else if (jsonData.responseData.statusCode > 0 && swicthCaseIteration === 1 || swicthCaseIteration === 2) {",
									"//      pm.test(\"-------------------------2.Negative scenario Of get/token api with invalid userName and Password.--------------------------------\");",
									"//      eval(pm.environment.get(\"IfTestCase\"))();",
									"//      pm.test(\"Message I am getting from Api is= \" + jsonData.responseData.message, function () { pm.expect(+jsonData.responseData.message) === (\"Incorrect UserName Or Password/PIN, Please Try Again\") })",
									"//      pm.test(\"Status Code I am getting from Api is= \" + jsonData.responseData.statusCode, function () { pm.expect(+jsonData.responseData.statusCode).to.eql(303) });",
									"//      pm.environment.set(\"swicthCaseIteration\", swicthCaseIteration + 1);",
									"//      postman.setNextRequest(\"SUPER_BO_LOGIN\")",
									"// }",
									"// else if (jsonData.responseData.statusCode > 0 && swicthCaseIteration === 3) {",
									"//      pm.test(\"-------------------------3.Negative scenario Of get/token api with invalid clientId.--------------------------------\");",
									"//      { eval(pm.environment.get(\"IfTestCase\"))(); }",
									"//      pm.environment.set(\"swicthCaseIteration\", swicthCaseIteration + 1);",
									"//      postman.setNextRequest(\"SUPER_BO_LOGIN\")",
									"// }",
									"// else if (jsonData.responseData.statusCode > 0 && swicthCaseIteration === 4) {",
									"//      pm.test(\"-------------------------4.Negative scenario Of get/token api with invalid clientSecret.--------------------------------\");",
									"//      { eval(pm.environment.get(\"IfTestCase\"))(); }",
									"//      pm.environment.set(\"swicthCaseIteration\", 0);",
									"//      postman.setNextRequest(\"validateUser\")",
									"// }",
									"// else {",
									"//      { eval(pm.environment.get(\"ElseTestCase\"))(); }",
									"//      pm.environment.set(\"swicthCaseIteration\", 0);",
									"// }"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "userName",
								"value": "1000000000",
								"type": "text"
							},
							{
								"key": "password",
								"value": "12345678",
								"type": "text"
							},
							{
								"key": "clientId",
								"value": "MOBILE_APP",
								"type": "text"
							},
							{
								"key": "clientSecret",
								"value": "Bearer {{oauth_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "loginWith",
								"value": "MOBILE",
								"description": "EMAIL,MOBILE",
								"type": "text"
							},
							{
								"key": "mobileCode",
								"value": "+91",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{MerchUrl}}/get/token",
							"host": [
								"{{MerchUrl}}"
							],
							"path": [
								"get",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "retLogin/getInboxList",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "aliasName",
								"value": "alias"
							},
							{
								"key": "userToken",
								"value": "XXXX"
							}
						],
						"url": {
							"raw": "https://comm-backend.sapidblue.in/retLogin/getInboxList?limit=100&offset=0&userType=uiu",
							"protocol": "https",
							"host": [
								"comm-backend",
								"sapidblue",
								"in"
							],
							"path": [
								"retLogin",
								"getInboxList"
							],
							"query": [
								{
									"key": "limit",
									"value": "100"
								},
								{
									"key": "offset",
									"value": "0"
								},
								{
									"key": "userType",
									"value": "uiu"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "UCM",
			"item": [
				{
					"name": "Bo_Token",
					"item": [
						{
							"name": "get/token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"pm.environment.set(\"BoToken\", jsonData.data.authToken);",
											"pm.environment.set(\"BoUserId\", jsonData.data.userId);",
											"",
											"",
											"",
											"",
											"//      pm.environment.set(\"BoUserId\", jsonData.responseData.userId)",
											"",
											"// let swicthCaseIteration = +pm.environment.get(\"swicthCaseIteration\");",
											"// if (jsonData.responseData.statusCode === 0 && swicthCaseIteration === 0) {",
											"//      pm.test(\"-------------------------1.Positive scenario Of get/token api With valid key Data.--------------------------------\");",
											"//      eval(pm.environment.get(\"IfTestCase\"))();",
											"     ",
											"//      pm.test(\"Message I am getting from Api is= \" + jsonData.responseData.message, function () { pm.expect(jsonData.responseData.message).to.eql(\"Success\") })",
											"// pm.test(\"Message I am getting from Api is= \" + jsonData.responseData.message, function () { pm.expect(jsonData.responseData.message).to.eql(\"Success\") })",
											"// pm.test(\"Status Code I am getting from Api is= \" + jsonData.responseData.statusCode, function () { pm.expect(+jsonData.responseData.statusCode).to.eql(0) })",
											"//      pm.test(\"authToken I am getting from Api is= \" + jsonData.responseData.authToken, function () { pm.expect(+jsonData.responseData.authToken).to.eql(+jsonData.responseData.authToken) })",
											"//      pm.test(\"timestamp I am getting from Api is= \" + jsonData.responseData.timestamp, function () { pm.expect(+jsonData.responseData.timestamp).to.eql(+jsonData.responseData.timestamp) })",
											"//      pm.test(\"expiryTime I am getting from Api is= \" + jsonData.responseData.expiryTime, function () { pm.expect(+jsonData.responseData.expiryTime).to.eql(+jsonData.responseData.expiryTime) })",
											"//      pm.test(\"issueAt I am getting from Api = \" + jsonData.responseData.issueAt, function () { pm.expect(+jsonData.responseData.issueAt).to.eql(+jsonData.responseData.issueAt) })",
											"//      pm.test(\"Login superBo User Id Is=\" + jsonData.responseData.userId);",
											"//      pm.test(\"passwordExpired is= \" + jsonData.responseData.passwordExpired, function () { pm.expect(jsonData.responseData.passwordExpired).to.eql(false) })",
											"//      pm.environment.set(\"swicthCaseIteration\", swicthCaseIteration + 1);",
											"//      postman.setNextRequest(\"SUPER_BO_LOGIN\");",
											"// }",
											"// else if (jsonData.responseData.statusCode > 0 && swicthCaseIteration === 1 || swicthCaseIteration === 2) {",
											"//      pm.test(\"-------------------------2.Negative scenario Of get/token api with invalid userName and Password.--------------------------------\");",
											"//      eval(pm.environment.get(\"IfTestCase\"))();",
											"//      pm.test(\"Message I am getting from Api is= \" + jsonData.responseData.message, function () { pm.expect(+jsonData.responseData.message) === (\"Incorrect UserName Or Password/PIN, Please Try Again\") })",
											"//      pm.test(\"Status Code I am getting from Api is= \" + jsonData.responseData.statusCode, function () { pm.expect(+jsonData.responseData.statusCode).to.eql(303) });",
											"//      pm.environment.set(\"swicthCaseIteration\", swicthCaseIteration + 1);",
											"//      postman.setNextRequest(\"SUPER_BO_LOGIN\")",
											"// }",
											"// else if (jsonData.responseData.statusCode > 0 && swicthCaseIteration === 3) {",
											"//      pm.test(\"-------------------------3.Negative scenario Of get/token api with invalid clientId.--------------------------------\");",
											"//      { eval(pm.environment.get(\"IfTestCase\"))(); }",
											"//      pm.environment.set(\"swicthCaseIteration\", swicthCaseIteration + 1);",
											"//      postman.setNextRequest(\"SUPER_BO_LOGIN\")",
											"// }",
											"// else if (jsonData.responseData.statusCode > 0 && swicthCaseIteration === 4) {",
											"//      pm.test(\"-------------------------4.Negative scenario Of get/token api with invalid clientSecret.--------------------------------\");",
											"//      { eval(pm.environment.get(\"IfTestCase\"))(); }",
											"//      pm.environment.set(\"swicthCaseIteration\", 0);",
											"//      postman.setNextRequest(\"validateUser\")",
											"// }",
											"// else {",
											"//      { eval(pm.environment.get(\"ElseTestCase\"))(); }",
											"//      pm.environment.set(\"swicthCaseIteration\", 0);",
											"// }"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// let swicthCaseIteration= +pm.environment.get(\"swicthCaseIteration\");\r",
											"// function sameLines()  {\r",
											"// pm.variables.set(\"userName\", \"skilrock\");\r",
											"// pm.variables.set(\"password\", 12345678);\r",
											"// pm.variables.set(\"clientId\", \"PAM\");\r",
											"// pm.variables.set(\"clientSecret\", \"ph2Nj5knd4IjWBVLc4mhmYHo1hQDEdS3FlIC2KskHpeHFhsqxD\");  }\r",
											"// switch(swicthCaseIteration) {\r",
											"//  case 0:\r",
											"// \tsameLines();  break;\r",
											"//  case 1:\r",
											"// \tsameLines();\r",
											"// \tpm.variables.set(\"userName\", null);  break;\r",
											"//  case 2:\r",
											"// \tsameLines();\r",
											"// \tpm.variables.set(\"password\", null);  break;\r",
											"//  case 3:\r",
											"// \tsameLines();\r",
											"// \tpm.variables.set(\"clientId\", null);  break;\r",
											"//  case 4:\r",
											"// \tsameLines();\r",
											"// \tpm.variables.set(\"clientSecret\", null);  break;  }\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"//VMFYq5Pz344-H8kuUUk1EedCUEPzeJAp2kl6Kddb2jE"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "userName",
										"value": "apoorv",
										"type": "text"
									},
									{
										"key": "password",
										"value": "12345678",
										"type": "text"
									},
									{
										"key": "clientId",
										"value": "UCM",
										"type": "text"
									},
									{
										"key": "clientSecret",
										"value": "ph2Nj5knd4IjWBVLc4mhmYHo1hQDEdS3FlIC2KskHpeHFhsqxD",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{UcmUrl}}/get/token",
									"host": [
										"{{UcmUrl}}"
									],
									"path": [
										"get",
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "logOut",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{BoToken}}"
									}
								],
								"url": {
									"raw": "https://ucm-backend.sapidblue.in/v1.0/logOut",
									"protocol": "https",
									"host": [
										"ucm-backend",
										"sapidblue",
										"in"
									],
									"path": [
										"v1.0",
										"logOut"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get_Config",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{UcmUrl}}/getConfigValues",
									"host": [
										"{{UcmUrl}}"
									],
									"path": [
										"getConfigValues"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "BusinessManagement",
					"item": [
						{
							"name": "doBusinessRegistration",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"//  pm.environment.set(\"emailId\", \"businessCode.\" +pm.environment.get(\"Iteration\"));\r",
											"//  pm.environment.set(\"mobileNo\", +pm.environment.get(\"mobileNo\")+1);\r",
											"//  pm.environment.set(\"Iteration\", +pm.environment.get(\"Iteration\")+1);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{BoToken}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"addressOne\": \"address Line 1\",\n    \"addressTwo\": \"address Line 2\",\n    \"businessName\": \"Python Testing\",\n    \"cityCode\": \"IN-HR-GU\",\n    \"configs\": [\n        {\n            \"configCode\": \"LANGUAGE_CODE\",\n            \"configValue\": \"en\"\n        },\n        {\n           \"configCode\":\"MOBILE_REGEX\",\n           \"configValue\":\"^(((\\+){1}91)|((\\+){1}1868)){1}[0-9]{1}[0-9]{6,10}$\" \n        },\n        {\n            \"configCode\":\"ZIPCODE_REGEX\",\n            \"configValue\":\"^[0-9]{6}$\"\n        },\n        {\n            \"configCode\":\"PHONE_REGEX\",\n            \"configValue\":\"^(((\\+){1}91)|((\\+){1}1868)|((\\+){1}886)){1}[0-9]{1}[0-9]{6,10}$\"\n        },\n        {\n            \"configCode\":\"COUNTRY_CODES\",\n            \"configValue\":\"+91,+1868\"\n        },\n        {\n            \"configCode\": \"PASSWORD_POLICY_ID\", \n            \"configValue\": 1\n        },\n        {\n            \"configCode\": \"NO_OF_HISTORICAL_PASSWORD\", \n            \"configValue\": 3\n        },\n        {\n            \"configCode\":\"FCM_ANDROID_TOPIC\", \n            \"configValue\": \"android_beta\"\n        },\n        {\n            \"configCode\": \"FCM_IOS_TOPIC\", \n            \"configValue\": \"ios_beta\"\n        },\n        {\n            \"configCode\": \"AMOUNT_FORMATING_REQUIRED\",\n            \"configValue\": \"YES\"\n        },\n        {\n            \"configCode\": \"ATM_BATCH_CAPACITY\", \n            \"configValue\": \"25\"\n        }\n    ],\n    \"contactPerson\": \"PT\",\n    \"countryCode\": \"IN\",\n    \"emailId\": \"pt@sapidblue.com\",\n    \"firstName\": \"Python\",\n    \"lastName\": \"Testing\",\n    \"middleName\": null,\n    \"mobileCode\": \"+91\",\n    \"mobileNumber\": \"6587857857\",\n    \"stateCode\": \"IN-HR\",\n    \"userName\": \"PT\",\n    \"zipCode\": \"123456\"\n}"
								},
								"url": {
									"raw": "{{UcmUrl}}/v1.0/doBusinessRegistration",
									"host": [
										"{{UcmUrl}}"
									],
									"path": [
										"v1.0",
										"doBusinessRegistration"
									]
								}
							},
							"response": []
						},
						{
							"name": "updateBusinessDetails",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{BoToken}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"addressOne\": \"sector 31\",\n    \"addressTwo\": \"haryana\",\n    \"businessId\": 6,\n    \"businessName\": \"Sdet Business\",\n    \"emailId\":\"sdet.rishabh@sapidblue.com\",\n    \"firstName\": \"Rishabh\",\n    \"lastName\": \"Kumar\",\n    \"contactPerson\": \"Saket Sharma\",\n    \"status\": \"ACTIVE\",\n    \"mobileNumber\":\"8851310876\",\n    \"mobileCode\":\"+91\"\n\n\n\n}"
								},
								"url": {
									"raw": "{{UcmUrl}}/v1.0/updateBusinessDetails",
									"host": [
										"{{UcmUrl}}"
									],
									"path": [
										"v1.0",
										"updateBusinessDetails"
									]
								}
							},
							"response": []
						},
						{
							"name": "updateBusinessDetails Copy",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{BoToken}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"addressOne\": \"sector 31\",\n    \"addressTwo\": \"haryana\",\n    \"businessId\": 0,\n    \"businessName\": \"string\",\n    \"cityCode\": \"string\",\n    \"contactPerson\": \"string\",\n    \"countryCode\": \"string\",\n    \"emailId\": \"string\",\n    \"firstName\": \"string\",\n    \"lastName\": \"string\",\n    \"middleName\": \"string\",\n    \"mobileCode\": \"string\",\n    \"mobileNumber\": \"string\",\n    \"phoneCode\": \"string\",\n    \"phoneNumber\": \"string\",\n    \"stateCode\": \"string\",\n    \"status\": \"string\",\n    \"zipCode\": \"string\"\n}"
								},
								"url": {
									"raw": "{{UcmUrl}}/updateBusinessDetail",
									"host": [
										"{{UcmUrl}}"
									],
									"path": [
										"updateBusinessDetail"
									]
								}
							},
							"response": []
						},
						{
							"name": "getBusinessList",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{BoToken}}"
									}
								],
								"url": {
									"raw": "{{UcmUrl}}/v1.0/getBusinessList",
									"host": [
										"{{UcmUrl}}"
									],
									"path": [
										"v1.0",
										"getBusinessList"
									]
								}
							},
							"response": []
						},
						{
							"name": "getBusinessDetails",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{BoToken}}"
									}
								],
								"url": {
									"raw": "{{UcmUrl}}/v1.0/getBusinessDetails?businessId=6",
									"host": [
										"{{UcmUrl}}"
									],
									"path": [
										"v1.0",
										"getBusinessDetails"
									],
									"query": [
										{
											"key": "businessId",
											"value": "6"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "doBusinessSearch",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{BoToken}}"
									}
								],
								"url": {
									"raw": "{{UcmUrl}}/v1.0/doBusinessSearch?businessId=6",
									"host": [
										"{{UcmUrl}}"
									],
									"path": [
										"v1.0",
										"doBusinessSearch"
									],
									"query": [
										{
											"key": "businessId",
											"value": "6"
										},
										{
											"key": "businessName",
											"value": "2",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getRoleList",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{BoToken}}"
									}
								],
								"url": {
									"raw": "{{UcmUrl}}/v1.0/getRoleList?editAllowed=YES",
									"host": [
										"{{UcmUrl}}"
									],
									"path": [
										"v1.0",
										"getRoleList"
									],
									"query": [
										{
											"key": "editAllowed",
											"value": "YES"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "ChannelManagement",
					"item": [
						{
							"name": "doChannelRegistration",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{BoToken}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"businessId\": 6,\n    \"channelName\": \"www.sdet-4.com\",\n    \"channelType\": \"B2C\",\n    \"configuration\": [\n        {\n            \"configCode\": \"LANGUAGE_CODE\",\n            \"configValue\": \"fn\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{UcmUrl}}/v1.0/doChannelRegistration",
									"host": [
										"{{UcmUrl}}"
									],
									"path": [
										"v1.0",
										"doChannelRegistration"
									]
								}
							},
							"response": []
						},
						{
							"name": "doChannelSearch",
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{BoToken}}"
									}
								],
								"url": {
									"raw": "{{UcmUrl}}/v1.0/doChannelSearch?businessId=1",
									"host": [
										"{{UcmUrl}}"
									],
									"path": [
										"v1.0",
										"doChannelSearch"
									],
									"query": [
										{
											"key": "businessId",
											"value": "1"
										},
										{
											"key": "channelId",
											"value": "",
											"disabled": true
										},
										{
											"key": "channelName",
											"value": "TestChannelNameb_B2C39",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getChannelDetails",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// {",
											"//     \"errorMessage\": \"Unknown Error Occurred, Please Try Again.\",",
											"//     \"errorCode\": 1",
											"// }",
											"",
											"// 12:43:53 ERROR com.sb.ucm.utils.AppLogger - null",
											"// java.lang.NumberFormatException: null",
											"// \tat java.lang.Integer.parseInt(Integer.java:542)",
											"// \tat java.lang.Integer.parseInt(Integer.java:615)",
											"// \tat com.sb.ucm.channel.service.ChannelMasterService.getChannelDetail(ChannelMasterService.java:342)",
											"// \tat com.sb.ucm.channel.service.ChannelMasterService$$FastClassBySpringCGLIB$$83736d35.invoke(<generated>)",
											"// \tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)",
											"// \tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)",
											"// \tat com.sb.ucm.channel.service.ChannelMasterService$$EnhancerBySpringCGLIB$$13cea9a1.getChannelDetail(<generated>)",
											"// \tat com.sb.ucm.channel.controller.ChannelMasterController.getChannelDetail(ChannelMasterController.java:74)",
											"// \tat com.sb.ucm.channel.controller.ChannelMasterController$$FastClassBySpringCGLIB$$afa8db1b.invoke(<generated>)",
											"// \tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)",
											"// \tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)",
											"// \tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)",
											"// \tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)",
											"// \tat org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)",
											"// \tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)",
											"// \tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)",
											"// \tat org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)",
											"// \tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)",
											"// \tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)",
											"// \tat org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)",
											"// \tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)",
											"// \tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)",
											"// \tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)",
											"// \tat com.sb.ucm.channel.controller.ChannelMasterController$$EnhancerBySpringCGLIB$$ea4845a2.getChannelDetail(<generated>)",
											"// \tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
											"// \tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
											"// \tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
											"// \tat java.lang.reflect.Method.invoke(Method.java:498)",
											"// \tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)",
											"// \tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)",
											"// \tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)",
											"// \tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)",
											"// \tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)",
											"// \tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)",
											"// \tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)",
											"// \tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)",
											"// \tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)",
											"// \tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)",
											"// \tat javax.servlet.http.HttpServlet.service(HttpServlet.java:634)",
											"// \tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)",
											"// \tat javax.servlet.http.HttpServlet.service(HttpServlet.java:741)",
											"// \tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)",
											"// \tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)",
											"// \tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)",
											"// \tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)",
											"// \tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)",
											"// \tat com.sb.ucm.security.filter.CustomUserFilter.doFilter(CustomUserFilter.java:128)",
											"// \tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)",
											"// \tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)",
											"// \tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)",
											"// \tat org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)",
											"// \tat org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)",
											"// \tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)",
											"// \tat org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)",
											"// \tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)",
											"// \tat org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)",
											"// \tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)",
											"// \tat org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)",
											"// \tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)",
											"// \tat org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)",
											"// \tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)",
											"// \tat org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)",
											"// \tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)",
											"// \tat com.sb.ucm.security.filter.CustomUserFilter.doFilter(CustomUserFilter.java:128)",
											"// \tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)",
											"// \tat org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)",
											"// \tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)",
											"// \tat org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)",
											"// \tat org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)",
											"// \tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)",
											"// \tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)",
											"// \tat org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)",
											"// \tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)",
											"// \tat org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)",
											"// \tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)",
											"// \tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)",
											"// \tat org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)",
											"// \tat org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)",
											"// \tat org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)",
											"// \tat org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)",
											"// \tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)",
											"// \tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)",
											"// \tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:109)",
											"// \tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)",
											"// \tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)",
											"// \tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)",
											"// \tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)",
											"// \tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)",
											"// \tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)",
											"// \tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)",
											"// \tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)",
											"// \tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)",
											"// \tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)",
											"// \tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)",
											"// \tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)",
											"// \tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)",
											"// \tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)",
											"// \tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)",
											"// \tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)",
											"// \tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)",
											"// \tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)",
											"// \tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)",
											"// \tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
											"// \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
											"// \tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)",
											"// \tat java.lang.Thread.run(Thread.java:748)",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{BoToken}}"
									}
								],
								"url": {
									"raw": "{{UcmUrl}}/v1.0/getChannelDetails?businessId=2&channelId=2",
									"host": [
										"{{UcmUrl}}"
									],
									"path": [
										"v1.0",
										"getChannelDetails"
									],
									"query": [
										{
											"key": "businessId",
											"value": "2"
										},
										{
											"key": "channelId",
											"value": "2"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getChannelList",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{BoToken}}"
									}
								],
								"url": {
									"raw": "{{UcmUrl}}/v1.0/getChannelList?businessId=7&channelId=ALL",
									"host": [
										"{{UcmUrl}}"
									],
									"path": [
										"v1.0",
										"getChannelList"
									],
									"query": [
										{
											"key": "businessId",
											"value": "7"
										},
										{
											"key": "channelId",
											"value": "ALL"
										},
										{
											"key": "configType",
											"value": "B2",
											"disabled": true
										},
										{
											"key": "isConfig",
											"value": "YES",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "updateChannelDetails",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{BoToken}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"businessId\": 6,\n  \"channelId\": 26,\n  \"channelName\": \"www.sdet.com\",\n  \"status\": \"ACTIVE\"\n}"
								},
								"url": {
									"raw": "{{UcmUrl}}/v1.0/updateChannelDetails",
									"host": [
										"{{UcmUrl}}"
									],
									"path": [
										"v1.0",
										"updateChannelDetails"
									]
								}
							},
							"response": []
						},
						{
							"name": "setConversionRates",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{BoToken}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"businessId\": 2,\n    \"channelId\": 2,\n    \"conversions\": [\n        {\n            \"currency\": \"TTD\",\n            \"exchangeCharges\": 1,\n            \"exchangeCurrency\": \"TTD\",\n            \"exchangeRate\": 1\n        }\n    ],\n    \"exchangeType\": \"DEPOSIT\",\n    \"sourceCurrency\": \"TTD\"\n}"
								},
								"url": {
									"raw": "{{UcmUrl}}/v1.0/setConversionRates",
									"host": [
										"{{UcmUrl}}"
									],
									"path": [
										"v1.0",
										"setConversionRates"
									]
								}
							},
							"response": []
						},
						{
							"name": "getConversionRates",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{BoToken}}"
									}
								],
								"url": {
									"raw": "{{UcmUrl}}/v1.0/getConversionRates?businessId=2&channelId=2&sourceCurrency=TTD",
									"host": [
										"{{UcmUrl}}"
									],
									"path": [
										"v1.0",
										"getConversionRates"
									],
									"query": [
										{
											"key": "businessId",
											"value": "2"
										},
										{
											"key": "channelId",
											"value": "2"
										},
										{
											"key": "sourceCurrency",
											"value": "TTD"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "AliasManagement",
					"item": [
						{
							"name": "createAlias",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{BoToken}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"aliasId\": 3,\n    \"aliasName\": \"www.26.in\",\n    \"businessId\": 6,\n    \"channelId\": 26,\n    \"status\": \"ACTIVE\"\n}"
								},
								"url": {
									"raw": "https://ucm-backend.sapidblue.in/v1.0/createAlias",
									"protocol": "https",
									"host": [
										"ucm-backend",
										"sapidblue",
										"in"
									],
									"path": [
										"v1.0",
										"createAlias"
									]
								}
							},
							"response": []
						},
						{
							"name": "getAlias",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{BoToken}}"
									}
								],
								"url": {
									"raw": "{{UcmUrl}}/v1.0/getAlias?businessId=38&channelId=6",
									"host": [
										"{{UcmUrl}}"
									],
									"path": [
										"v1.0",
										"getAlias"
									],
									"query": [
										{
											"key": "aliasName",
											"value": "https://www.pay-pr.com",
											"disabled": true
										},
										{
											"key": "businessId",
											"value": "38"
										},
										{
											"key": "channelId",
											"value": "6"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "updateAlias",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{BoToken}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"aliasId\": 33,\n    \"aliasName\": \"www.sdet-6.com\",\n    \"businessId\": 6,\n    \"channelId\": 30,\n    \"status\": \"ACTIVE\"\n}"
								},
								"url": {
									"raw": "{{UcmUrl}}/v1.0/updateAlias",
									"host": [
										"{{UcmUrl}}"
									],
									"path": [
										"v1.0",
										"updateAlias"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "ConfigurationManagement",
					"item": [
						{
							"name": "getConfigurations",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{BoToken}}"
									}
								],
								"url": {
									"raw": "{{UcmUrl}}/v1.0/getConfigurations?businessId=1&channelApplicable=true&channelId=0&configType=B2C&engineApplicable=true&fetchCache=false",
									"host": [
										"{{UcmUrl}}"
									],
									"path": [
										"v1.0",
										"getConfigurations"
									],
									"query": [
										{
											"key": "businessId",
											"value": "1"
										},
										{
											"key": "channelApplicable",
											"value": "true"
										},
										{
											"key": "channelId",
											"value": "0"
										},
										{
											"key": "configType",
											"value": "B2C"
										},
										{
											"key": "engineApplicable",
											"value": "true"
										},
										{
											"key": "fetchCache",
											"value": "false"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "updateConfigurations",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{BoToken}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"businessId\": 7,\n    \"channelId\": 29,\n    \"configType\": \"BACKOFFICE\",\n    \"configuration\": [\n        {\n            \"configCode\": \"LANGUAGE_CODE\",\n            \"configValue\": \"en\"\n        },\n        {\n            \"configCode\": \"COUNTRY\",\n            \"configValue\": \"TT\"\n        },\n         {\n            \"configCode\": \"CURRENCY_ID\",\n            \"configValue\": \"25\"\n        },\n          {\n            \"configCode\": \"NATIVE_CURRENCY\",\n            \"configValue\": \"25\"\n        },\n          {\n            \"configCode\": \"ALLOWED_CURRENCIES\",\n            \"configValue\": \"TWD\"\n        },\n          {\n            \"configCode\": \"CURRENCY_CODE\",\n            \"configValue\": \"TWD\"\n        }\n        ,\n          {\n            \"configCode\": \"NATIVE_CURRENCY_CODE\",\n            \"configValue\": \"TWD\"\n        },\n          {\n            \"configCode\": \"AVAILABLE_CURRENCIES\",\n            \"configValue\": \"TWD\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{UcmUrl}}/v1.0/updateConfigurations",
									"host": [
										"{{UcmUrl}}"
									],
									"path": [
										"v1.0",
										"updateConfigurations"
									]
								}
							},
							"response": []
						},
						{
							"name": "updateConfigurations",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 1.- Remove System_id in request"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{BoToken}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"businessId\": 2,\n    \"channelId\": 2,\n    \"configuration\": [\n        {\n            \"configCode\": \"ZIPCODE_REGEX\",\n            \"configValue\": \"TT\"\n        }\n    ],\n   \"configType\":\"B2C\"\n}"
								},
								"url": {
									"raw": "{{UcmUrl}}/v1.0/updateConfigurations",
									"host": [
										"{{UcmUrl}}"
									],
									"path": [
										"v1.0",
										"updateConfigurations"
									]
								}
							},
							"response": []
						},
						{
							"name": "updateConfigurations",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{BoToken}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"businessId\": 1,\n    \"channelId\": 1,\n    \"configType\": \"B2B\",\n    \"configuration\": [\n        {\n            \"configCode\": \"COUNTRY\",\n            \"configValue\": \"TT\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "http://10.102.0.214:8080/v1.0/updateConfigurations",
									"protocol": "http",
									"host": [
										"10",
										"102",
										"0",
										"214"
									],
									"port": "8080",
									"path": [
										"v1.0",
										"updateConfigurations"
									]
								}
							},
							"response": []
						},
						{
							"name": "getDataFromConfigType",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{BoToken}}"
									}
								],
								"url": {
									"raw": "{{UcmUrl}}/v1.0/getDataFromConfigType?configType=B2C",
									"host": [
										"{{UcmUrl}}"
									],
									"path": [
										"v1.0",
										"getDataFromConfigType"
									],
									"query": [
										{
											"key": "configType",
											"value": "B2C"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "UserManagement",
					"item": [
						{
							"name": "doUserRegistration",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//   1. \"errorMessage\": \"Unknown Error Occurred, Please Try Again.\",",
											"",
											"",
											"// 12:08:19 ERROR com.sb.ucm.utils.AppLogger - could not extract ResultSet; SQL [n/a]; nested exception is org.hibernate.exception.SQLGrammarException: could not extract ResultSet",
											"// org.springframework.dao.InvalidDataAccessResourceUsageException: could not extract ResultSet; SQL [n/a]; nested exception is org.hibernate.exception.SQLGrammarException: could not extract ResultSet",
											"// \tat org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:281)",
											"// \tat org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:255)",
											"// \tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:528)",
											"// \tat org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)",
											"// \tat org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)",
											"// \tat org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:153)",
											"// \tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)",
											"// \tat org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:149)",
											"// \tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)",
											"// \tat org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)",
											"// \tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)",
											"// \tat org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)",
											"// \tat com.sun.proxy.$Proxy193.findByChannelIdsAndBusiness(Unknown Source)",
											"// \tat com.sb.ucm.user.service.UserMasterService.registerUser(UserMasterService.java:306)",
											"// \tat com.sb.ucm.user.service.UserMasterService$$FastClassBySpringCGLIB$$2801dded.invoke(<generated>)",
											"// \tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)",
											"// \tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)",
											"// \tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)",
											"// \tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)",
											"// \tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)",
											"// \tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:99)",
											"// \tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)",
											"// \tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)",
											"// \tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)",
											"// \tat com.sb.ucm.user.service.UserMasterService$$EnhancerBySpringCGLIB$$6dca2ec9.registerUser(<generated>)",
											"// \tat com.sb.ucm.user.controller.UserController.registerUser(UserController.java:66)",
											"// \tat com.sb.ucm.user.controller.UserController$$FastClassBySpringCGLIB$$9612ef97.invoke(<generated>)",
											"// \tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)",
											"// \tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)",
											"// \tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)",
											"// \tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)",
											"// \tat org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)",
											"// \tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)",
											"// \tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)",
											"// \tat org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)",
											"// \tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)",
											"// \tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)",
											"// \tat org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)",
											"// \tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)",
											"// \tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)",
											"// \tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)",
											"// \tat com.sb.ucm.user.controller.UserController$$EnhancerBySpringCGLIB$$95c93096.registerUser(<generated>)",
											"// \tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
											"// \tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
											"// \tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
											"// \tat java.lang.reflect.Method.invoke(Method.java:498)",
											"// \tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)",
											"// \tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)",
											"// \tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)",
											"// \tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)",
											"// \tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)",
											"// \tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)",
											"// \tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)",
											"// \tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)",
											"// \tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)",
											"// \tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)",
											"// \tat javax.servlet.http.HttpServlet.service(HttpServlet.java:660)",
											"// \tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)",
											"// \tat javax.servlet.http.HttpServlet.service(HttpServlet.java:741)",
											"// \tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)",
											"// \tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)",
											"// \tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)",
											"// \tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)",
											"// \tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)",
											"// \tat com.sb.ucm.security.filter.CustomUserFilter.doFilter(CustomUserFilter.java:128)",
											"// \tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)",
											"// \tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)",
											"// \tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)",
											"// \tat org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)",
											"// \tat org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)",
											"// \tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)",
											"// \tat org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)",
											"// \tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)",
											"// \tat org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)",
											"// \tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)",
											"// \tat org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)",
											"// \tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)",
											"// \tat org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)",
											"// \tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)",
											"// \tat org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)",
											"// \tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)",
											"// \tat com.sb.ucm.security.filter.CustomUserFilter.doFilter(CustomUserFilter.java:128)",
											"// \tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)",
											"// \tat org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)",
											"// \tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)",
											"// \tat org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)",
											"// \tat org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)",
											"// \tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)",
											"// \tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)",
											"// \tat org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)",
											"// \tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)",
											"// \tat org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)",
											"// \tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)",
											"// \tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)",
											"// \tat org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)",
											"// \tat org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)",
											"// \tat org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)",
											"// \tat org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)",
											"// \tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)",
											"// \tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)",
											"// \tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:109)",
											"// \tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)",
											"// \tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)",
											"// \tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)",
											"// \tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)",
											"// \tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)",
											"// \tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)",
											"// \tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)",
											"// \tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)",
											"// \tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)",
											"// \tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)",
											"// \tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)",
											"// \tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)",
											"// \tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)",
											"// \tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)",
											"// \tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)",
											"// \tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)",
											"// \tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)",
											"// \tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)",
											"// \tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)",
											"// \tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
											"// \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
											"// \tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)",
											"// \tat java.lang.Thread.run(Thread.java:748)",
											"// Caused by: org.hibernate.exception.SQLGrammarException: could not extract ResultSet",
											"// \tat org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:63)",
											"// \tat org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:42)",
											"// \tat org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113)",
											"// \tat org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99)",
											"// \tat org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:67)",
											"// \tat org.hibernate.loader.Loader.getResultSet(Loader.java:2292)",
											"// \tat org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2050)",
											"// \tat org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2012)",
											"// \tat org.hibernate.loader.Loader.doQuery(Loader.java:953)",
											"// \tat org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:354)",
											"// \tat org.hibernate.loader.Loader.doList(Loader.java:2838)",
											"// \tat org.hibernate.loader.Loader.doList(Loader.java:2820)",
											"// \tat org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2652)",
											"// \tat org.hibernate.loader.Loader.list(Loader.java:2647)",
											"// \tat org.hibernate.loader.custom.CustomLoader.list(CustomLoader.java:338)",
											"// \tat org.hibernate.internal.SessionImpl.listCustomQuery(SessionImpl.java:2131)",
											"// \tat org.hibernate.internal.AbstractSharedSessionContract.list(AbstractSharedSessionContract.java:1163)",
											"// \tat org.hibernate.query.internal.NativeQueryImpl.doList(NativeQueryImpl.java:173)",
											"// \tat org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1530)",
											"// \tat org.hibernate.query.Query.getResultList(Query.java:165)",
											"// \tat org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:126)",
											"// \tat org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:88)",
											"// \tat org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:154)",
											"// \tat org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:142)",
											"// \tat org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:618)",
											"// \tat org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:605)",
											"// \tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)",
											"// \tat org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)",
											"// \tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)",
											"// \tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)",
											"// \tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:99)",
											"// \tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)",
											"// \tat org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)",
											"// \t... 118 more",
											"// Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ans status='ACTIVE'' at line 1",
											"// \tat com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)",
											"// \tat com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)",
											"// \tat com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)",
											"// \tat com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)",
											"// \tat com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:1003)",
											"// \tat com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)",
											"// \tat com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java)",
											"// \tat org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:57)",
											"// \t... 146 more",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{BoToken}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"addressOne\": \"addressOne\",\n    \"addressTwo\": \"addressTwo\",\n    \"altMobileCode\": null,\n    \"altMobileNumber\": null,\n    \"businessId\": 7,\n    \"channelIds\": [\n        29\n    ],\n    \"cityCode\": \"IN-HR-GU\",\n    \"countryCode\": \"IN\",\n    \"emailId\": \"rishabh_bloximthbo@sapidblue.com\",\n    \"firstName\": \"Rishabh\",\n    \"lastName\": \"Kumar\",\n    \"middleName\": null,\n    \"mobileCode\": \"+91\",\n    \"mobileNumber\": \"8859381125\",\n    \"roleId\": 4,\n    \"stateCode\": \"IN-HR\",\n    \"userName\": \"rishabh_bloxmith_Bo\",\n    \"zipCode\": \"123\"\n}"
								},
								"url": {
									"raw": "{{UcmUrl}}/v1.0/doUserRegistration",
									"host": [
										"{{UcmUrl}}"
									],
									"path": [
										"v1.0",
										"doUserRegistration"
									]
								}
							},
							"response": []
						},
						{
							"name": "doUserSearch",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 1. not able to fetch user"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer 3434redd"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"businessId\": 2,\n    \"channelId\":2,\n    \"status\": \"ACTIVE\"\n}\n"
								},
								"url": {
									"raw": "{{UcmUrl}}/v1.0/doUserSearch",
									"host": [
										"{{UcmUrl}}"
									],
									"path": [
										"v1.0",
										"doUserSearch"
									]
								}
							},
							"response": []
						},
						{
							"name": "updateUserDetails",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{BoToken}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"addressOne\": \"add one\",\n    \"addressTwo\": \"add two\",\n     \"mobileCode\": \"+91\",\n    \"mobileNumber\": \"8885139121\",\n    \"userId\": 15\n}"
								},
								"url": {
									"raw": "{{UcmUrl}}/v1.0/updateUserDetails",
									"host": [
										"{{UcmUrl}}"
									],
									"path": [
										"v1.0",
										"updateUserDetails"
									]
								}
							},
							"response": []
						},
						{
							"name": "updateUserDetails Copy",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{BoToken}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"addressOne\": \"hsqgdvuehvheqsvuer\",\n    \"addressTwo\": \"iqwdgiuewhfjwe\",\n    \"altMobileCode\": null,\n    \"altMobileNumber\": null,\n    \"blockDate\": null,\n    \"blockStatus\": null,\n    \"cityCode\": null,\n    \"contactPerson\": null,\n    \"countryCode\": \"IN\",\n    \"emailId\": null,\n    \"failedLoginAttempt\": null,\n    \"firstName\": null,\n    \"lastName\": null,\n    \"middleName\": null,\n    \"mobileCode\": null,\n    \"mobileNumber\": \"8885130121\",\n    \"password\": null,\n    \"stateCode\": null,\n    \"status\": null,\n    \"userId\": 16,\n    \"username\": null,\n    \"zipCode\": null\n}"
								},
								"url": {
									"raw": "{{UcmUrl}}/v1.0/updateUserDetails",
									"host": [
										"{{UcmUrl}}"
									],
									"path": [
										"v1.0",
										"updateUserDetails"
									]
								}
							},
							"response": []
						},
						{
							"name": "checkLoginName",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{BoToken}}"
									}
								],
								"url": {
									"raw": "{{UcmUrl}}/v1.0/checkLoginName?userName=Hrishabhbo",
									"host": [
										"{{UcmUrl}}"
									],
									"path": [
										"v1.0",
										"checkLoginName"
									],
									"query": [
										{
											"key": "userName",
											"value": "Hrishabhbo"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getLoginData",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 1. Unknown Error Occurred, Please Try Again occured.",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{BoToken}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{UcmUrl}}/v1.0/getLoginData?loginType=BO",
									"host": [
										"{{UcmUrl}}"
									],
									"path": [
										"v1.0",
										"getLoginData"
									],
									"query": [
										{
											"key": "loginType",
											"value": "BO"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getUserAccessDetails",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{BoToken}}"
									}
								],
								"url": {
									"raw": "https://ucm-backend.sapidblue.in/v1.0/getUserAccessDetails?userId=8",
									"protocol": "https",
									"host": [
										"ucm-backend",
										"sapidblue",
										"in"
									],
									"path": [
										"v1.0",
										"getUserAccessDetails"
									],
									"query": [
										{
											"key": "userId",
											"value": "8"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getUserDetails",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{BoToken}}"
									}
								],
								"url": {
									"raw": "{{UcmUrl}}/v1.0/getUserDetails?userId=",
									"host": [
										"{{UcmUrl}}"
									],
									"path": [
										"v1.0",
										"getUserDetails"
									],
									"query": [
										{
											"key": "userId",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getUsersByRole",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{BoToken}}"
									}
								],
								"url": {
									"raw": "{{UcmUrl}}/v1.0/getUsersByRole?businessId=2&roleId=1",
									"host": [
										"{{UcmUrl}}"
									],
									"path": [
										"v1.0",
										"getUsersByRole"
									],
									"query": [
										{
											"key": "businessId",
											"value": "2"
										},
										{
											"key": "roleId",
											"value": "1"
										},
										{
											"key": "roleName",
											"value": "1",
											"disabled": true
										},
										{
											"key": "businessId",
											"value": "38",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "updateUserAccessDetails",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{BoToken}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"friday\": \"00:00-23:59\",\n    \"monday\": \"00:00-23:59\",\n    \"saturday\": \"00:00-23:59\",\n    \"sunday\": \"NA\",\n    \"thursday\": \"00:00-23:59\",\n    \"tuesday\": \"00:00-23:59\",\n    \"userId\": 24,\n    \"wednesday\": \"00:00-23:59\"\n}"
								},
								"url": {
									"raw": "{{UcmUrl}}/v1.0/updateUserAccessDetails",
									"host": [
										"{{UcmUrl}}"
									],
									"path": [
										"v1.0",
										"updateUserAccessDetails"
									]
								}
							},
							"response": []
						},
						{
							"name": "validateUser",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{BoToken}}"
									}
								],
								"url": {
									"raw": "{{UcmUrl}}/v1.0/validateUser?userId=10",
									"host": [
										"{{UcmUrl}}"
									],
									"path": [
										"v1.0",
										"validateUser"
									],
									"query": [
										{
											"key": "userId",
											"value": "10"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "validateUserMenuMapping",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{BoToken}}"
									}
								],
								"url": {
									"raw": "{{UcmUrl}}/v1.0/validateUserMenuMapping?menuCode=CREATE_ROLE",
									"host": [
										"{{UcmUrl}}"
									],
									"path": [
										"v1.0",
										"validateUserMenuMapping"
									],
									"query": [
										{
											"key": "menuCode",
											"value": "CREATE_ROLE"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "MasterDataManagement",
					"item": [
						{
							"name": "getCountryList",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{BoToken}}"
									}
								],
								"url": {
									"raw": "{{UcmUrl}}/v1.0/getCountryList",
									"host": [
										"{{UcmUrl}}"
									],
									"path": [
										"v1.0",
										"getCountryList"
									]
								}
							},
							"response": []
						},
						{
							"name": "getCountryISDCodes",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{BoToken}}"
									}
								],
								"url": {
									"raw": "{{UcmUrl}}/v1.0/getCountryISDCodes",
									"host": [
										"{{UcmUrl}}"
									],
									"path": [
										"v1.0",
										"getCountryISDCodes"
									]
								}
							},
							"response": []
						},
						{
							"name": "getStateList",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{BoToken}}"
									}
								],
								"url": {
									"raw": "{{UcmUrl}}/v1.0/getStateList?countryCode=TW",
									"host": [
										"{{UcmUrl}}"
									],
									"path": [
										"v1.0",
										"getStateList"
									],
									"query": [
										{
											"key": "countryCode",
											"value": "TW"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getCityList",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{BoToken}}"
									}
								],
								"url": {
									"raw": "{{UcmUrl}}/v1.0/getCityList?stateCode=TW-TI",
									"host": [
										"{{UcmUrl}}"
									],
									"path": [
										"v1.0",
										"getCityList"
									],
									"query": [
										{
											"key": "stateCode",
											"value": "TW-TI"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getCurrencyCodes",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{BoToken}}"
									}
								],
								"url": {
									"raw": "{{UcmUrl}}/v1.0/getCurrencyCodes",
									"host": [
										"{{UcmUrl}}"
									],
									"path": [
										"v1.0",
										"getCurrencyCodes"
									]
								}
							},
							"response": []
						},
						{
							"name": "getLanguages",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{BoToken}}"
									}
								],
								"url": {
									"raw": "{{UcmUrl}}/v1.0/getLanguages?appType=Web_Panel",
									"host": [
										"{{UcmUrl}}"
									],
									"path": [
										"v1.0",
										"getLanguages"
									],
									"query": [
										{
											"key": "appType",
											"value": "Web_Panel"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getModuleList",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{BoToken}}"
									}
								],
								"url": {
									"raw": "{{UcmUrl}}/v1.0/getModuleList",
									"host": [
										"{{UcmUrl}}"
									],
									"path": [
										"v1.0",
										"getModuleList"
									]
								}
							},
							"response": []
						},
						{
							"name": "getRegionList",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{BoToken}}"
									}
								],
								"url": {
									"raw": "{{UcmUrl}}/v1.0/getRegionList",
									"host": [
										"{{UcmUrl}}"
									],
									"path": [
										"v1.0",
										"getRegionList"
									]
								}
							},
							"response": []
						},
						{
							"name": "getStateAndCityList",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{BoToken}}"
									}
								],
								"url": {
									"raw": "{{UcmUrl}}/v1.0/getStateAndCityList?countryCode=TT",
									"host": [
										"{{UcmUrl}}"
									],
									"path": [
										"v1.0",
										"getStateAndCityList"
									],
									"query": [
										{
											"key": "countryCode",
											"value": "TT"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getUserTypes",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 1. Unknown Error Occurred, Please Try Again.",
											"",
											"",
											"// 10:47:40 ERROR com.sb.ucm.utils.AppLogger - could not extract ResultSet; SQL [n/a]; nested exception is org.hibernate.exception.SQLGrammarException: could not extract ResultSet",
											"// org.springframework.dao.InvalidDataAccessResourceUsageException: could not extract ResultSet; SQL [n/a]; nested exception is org.hibernate.exception.SQLGrammarException: could not extract ResultSet",
											"// \tat org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:281)",
											"// \tat org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:255)",
											"// \tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:528)",
											"// \tat org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)",
											"// \tat org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)",
											"// \tat org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:153)",
											"// \tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)",
											"// \tat org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:149)",
											"// \tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)",
											"// \tat org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)",
											"// \tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)",
											"// \tat org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)",
											"// \tat com.sun.proxy.$Proxy211.findAllUserTypes(Unknown Source)",
											"// \tat com.sb.ucm.masterdata.service.MasterDataService.getUserTypes(MasterDataService.java:245)",
											"// \tat com.sb.ucm.masterdata.service.MasterDataService$$FastClassBySpringCGLIB$$ebb1e72f.invoke(<generated>)",
											"// \tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)",
											"// \tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)",
											"// \tat com.sb.ucm.masterdata.service.MasterDataService$$EnhancerBySpringCGLIB$$12922abc.getUserTypes(<generated>)",
											"// \tat com.sb.ucm.masterdata.controller.MasterDataController.getUserTypes(MasterDataController.java:96)",
											"// \tat com.sb.ucm.masterdata.controller.MasterDataController$$FastClassBySpringCGLIB$$ebf10439.invoke(<generated>)",
											"// \tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)",
											"// \tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)",
											"// \tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)",
											"// \tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)",
											"// \tat org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)",
											"// \tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)",
											"// \tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)",
											"// \tat org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)",
											"// \tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)",
											"// \tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)",
											"// \tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)",
											"// \tat com.sb.ucm.masterdata.controller.MasterDataController$$EnhancerBySpringCGLIB$$c13c63bc.getUserTypes(<generated>)",
											"// \tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
											"// \tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
											"// \tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
											"// \tat java.lang.reflect.Method.invoke(Method.java:498)",
											"// \tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)",
											"// \tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)",
											"// \tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)",
											"// \tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)",
											"// \tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)",
											"// \tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)",
											"// \tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)",
											"// \tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)",
											"// \tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)",
											"// \tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)",
											"// \tat javax.servlet.http.HttpServlet.service(HttpServlet.java:634)",
											"// \tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)",
											"// \tat javax.servlet.http.HttpServlet.service(HttpServlet.java:741)",
											"// \tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)",
											"// \tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)",
											"// \tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)",
											"// \tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)",
											"// \tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)",
											"// \tat com.sb.ucm.security.filter.CustomUserFilter.doFilter(CustomUserFilter.java:128)",
											"// \tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)",
											"// \tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)",
											"// \tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)",
											"// \tat org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)",
											"// \tat org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)",
											"// \tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)",
											"// \tat org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)",
											"// \tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)",
											"// \tat org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)",
											"// \tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)",
											"// \tat org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)",
											"// \tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)",
											"// \tat org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)",
											"// \tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)",
											"// \tat org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)",
											"// \tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)",
											"// \tat com.sb.ucm.security.filter.CustomUserFilter.doFilter(CustomUserFilter.java:128)",
											"// \tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)",
											"// \tat org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)",
											"// \tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)",
											"// \tat org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)",
											"// \tat org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)",
											"// \tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)",
											"// \tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)",
											"// \tat org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)",
											"// \tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)",
											"// \tat org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)",
											"// \tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)",
											"// \tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)",
											"// \tat org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)",
											"// \tat org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)",
											"// \tat org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)",
											"// \tat org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)",
											"// \tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)",
											"// \tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)",
											"// \tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:109)",
											"// \tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)",
											"// \tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)",
											"// \tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)",
											"// \tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)",
											"// \tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)",
											"// \tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)",
											"// \tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)",
											"// \tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)",
											"// \tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)",
											"// \tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)",
											"// \tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)",
											"// \tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)",
											"// \tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)",
											"// \tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)",
											"// \tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)",
											"// \tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)",
											"// \tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)",
											"// \tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)",
											"// \tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)",
											"// \tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
											"// \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
											"// \tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)",
											"// \tat java.lang.Thread.run(Thread.java:748)",
											"// Caused by: org.hibernate.exception.SQLGrammarException: could not extract ResultSet",
											"// \tat org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:63)",
											"// \tat org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:42)",
											"// \tat org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113)",
											"// \tat org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99)",
											"// \tat org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:67)",
											"// \tat org.hibernate.loader.Loader.getResultSet(Loader.java:2292)",
											"// \tat org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2050)",
											"// \tat org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2012)",
											"// \tat org.hibernate.loader.Loader.doQuery(Loader.java:953)",
											"// \tat org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:354)",
											"// \tat org.hibernate.loader.Loader.doList(Loader.java:2838)",
											"// \tat org.hibernate.loader.Loader.doList(Loader.java:2820)",
											"// \tat org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2652)",
											"// \tat org.hibernate.loader.Loader.list(Loader.java:2647)",
											"// \tat org.hibernate.loader.custom.CustomLoader.list(CustomLoader.java:338)",
											"// \tat org.hibernate.internal.SessionImpl.listCustomQuery(SessionImpl.java:2131)",
											"// \tat org.hibernate.internal.AbstractSharedSessionContract.list(AbstractSharedSessionContract.java:1163)",
											"// \tat org.hibernate.query.internal.NativeQueryImpl.doList(NativeQueryImpl.java:173)",
											"// \tat org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1530)",
											"// \tat org.hibernate.query.Query.getResultList(Query.java:165)",
											"// \tat sun.reflect.GeneratedMethodAccessor334.invoke(Unknown Source)",
											"// \tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
											"// \tat java.lang.reflect.Method.invoke(Method.java:498)",
											"// \tat org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:409)",
											"// \tat com.sun.proxy.$Proxy315.getResultList(Unknown Source)",
											"// \tat org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:126)",
											"// \tat org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:88)",
											"// \tat org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:154)",
											"// \tat org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:142)",
											"// \tat org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:618)",
											"// \tat org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:605)",
											"// \tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)",
											"// \tat org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)",
											"// \tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)",
											"// \tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)",
											"// \tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:99)",
											"// \tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)",
											"// \tat org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)",
											"// \t... 108 more",
											"// Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'user_type_display_name' in 'field list'",
											"// \tat com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)",
											"// \tat com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)",
											"// \tat com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)",
											"// \tat com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)",
											"// \tat com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:1003)",
											"// \tat com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)",
											"// \tat com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java)",
											"// \tat org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:57)",
											"// \t... 141 more",
											"// 10:47:40 kibana com.sb.ucm.utils.AppLogger - {\"exception\":\"could not extract ResultSet; SQL [n/a]; nested exception is org.hibernate.exception.SQLGrammarException: could not extract ResultSet\",\"hostName\":\"ip-10-102-0-214.ap-south-1.compute.internal\",\"level\":\"ERROR\",\"data4\":\"\",\"data3\":\"\",\"data2\":\"\",\"moduleName\":\"runtime\",\"data1\":\"line:281\",\"ipAddress\":\"10.102.0.214\",\"requestParams\":\"{}\",\"methodName\":\"convertHibernateAccessException\",\"className\":\"org.springframework.orm.jpa.vendor.HibernateJpaDialect\",\"message\":\"\",\"url\":\"/v1.0/getUserTypes\",\"logTime\":\"2022-08-24 10:47:40\",\"logName\":\"FatalErrors\",\"port\":\"8080\"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{BoToken}}"
									}
								],
								"url": {
									"raw": "{{UcmUrl}}/v1.0/getUserTypes",
									"host": [
										"{{UcmUrl}}"
									],
									"path": [
										"v1.0",
										"getUserTypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "getRegionList",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{BoToken}}"
									}
								],
								"url": {
									"raw": "{{UcmUrl}}/v1.0/getRegionList",
									"host": [
										"{{UcmUrl}}"
									],
									"path": [
										"v1.0",
										"getRegionList"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "MenuManagement",
					"item": [
						{
							"name": "client/getUserMenus",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{BoToken}}"
									}
								],
								"url": {
									"raw": "{{UcmUrl}}/v1.0/client/getUserMenus?engineCode=UCM&languageCode=en&userId=1&userRequired=NO",
									"host": [
										"{{UcmUrl}}"
									],
									"path": [
										"v1.0",
										"client",
										"getUserMenus"
									],
									"query": [
										{
											"key": "engineCode",
											"value": "UCM"
										},
										{
											"key": "languageCode",
											"value": "en"
										},
										{
											"key": "userId",
											"value": "1"
										},
										{
											"key": "userRequired",
											"value": "NO"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "user/getUserMenus",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{BoToken}}"
									}
								],
								"url": {
									"raw": "{{UcmUrl}}/v1.0/client/user/getUserMenus?engineCode=UCM&languageCode=en&userName=rishabh&userRequired=NO",
									"host": [
										"{{UcmUrl}}"
									],
									"path": [
										"v1.0",
										"client",
										"user",
										"getUserMenus"
									],
									"query": [
										{
											"key": "engineCode",
											"value": "UCM"
										},
										{
											"key": "languageCode",
											"value": "en"
										},
										{
											"key": "userName",
											"value": "rishabh"
										},
										{
											"key": "userRequired",
											"value": "NO"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getHeadRoleMenus",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 1.unknown error occured ",
											"// request-",
											"// headRoleId:2",
											"// userTypeCode:SUPER_BO"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{BoToken}}"
									}
								],
								"url": {
									"raw": "{{UcmUrl}}/v1.0/getHeadRoleMenus?headRoleId=2&userTypeCode=SUPER_BO",
									"host": [
										"{{UcmUrl}}"
									],
									"path": [
										"v1.0",
										"getHeadRoleMenus"
									],
									"query": [
										{
											"key": "headRoleId",
											"value": "2"
										},
										{
											"key": "userTypeCode",
											"value": "SUPER_BO"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getMenu",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{BoToken}}"
									}
								],
								"url": {
									"raw": "{{UcmUrl}}/v1.0/getMenu?moduleId=1&parentMenu=1",
									"host": [
										"{{UcmUrl}}"
									],
									"path": [
										"v1.0",
										"getMenu"
									],
									"query": [
										{
											"key": "moduleId",
											"value": "1"
										},
										{
											"key": "parentMenu",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getMenuDetail",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{BoToken}}"
									}
								],
								"url": {
									"raw": "{{UcmUrl}}/v1.0/getMenuDetail?menuId=12",
									"host": [
										"{{UcmUrl}}"
									],
									"path": [
										"v1.0",
										"getMenuDetail"
									],
									"query": [
										{
											"key": "menuId",
											"value": "12"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getModule",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{BoToken}}"
									}
								],
								"url": {
									"raw": "{{UcmUrl}}/v1.0/getModule",
									"host": [
										"{{UcmUrl}}"
									],
									"path": [
										"v1.0",
										"getModule"
									],
									"query": [
										{
											"key": "moduleCode",
											"value": "2345",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getPermission",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{BoToken}}"
									}
								],
								"url": {
									"raw": "{{UcmUrl}}/v1.0/getPermission",
									"host": [
										"{{UcmUrl}}"
									],
									"path": [
										"v1.0",
										"getPermission"
									],
									"query": [
										{
											"key": "appType",
											"value": "q",
											"disabled": true
										},
										{
											"key": "menuId",
											"value": "1",
											"disabled": true
										},
										{
											"key": "moduleId",
											"value": "1",
											"disabled": true
										},
										{
											"key": "permissionCode",
											"value": "a",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getPrivilegeReport",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{BoToken}}"
									}
								],
								"url": {
									"raw": "{{UcmUrl}}/v1.0/getPrivilegeReport?appType=Web_Panel&channelId=2&menuId=5&moduleId=3&userStatus=ASSIGNED&userTypeCode=BO",
									"host": [
										"{{UcmUrl}}"
									],
									"path": [
										"v1.0",
										"getPrivilegeReport"
									],
									"query": [
										{
											"key": "appType",
											"value": "Web_Panel"
										},
										{
											"key": "channelId",
											"value": "2"
										},
										{
											"key": "menuId",
											"value": "5"
										},
										{
											"key": "moduleId",
											"value": "3"
										},
										{
											"key": "permissionId",
											"value": "12",
											"disabled": true
										},
										{
											"key": "userStatus",
											"value": "ASSIGNED"
										},
										{
											"key": "userTypeCode",
											"value": "BO"
										},
										{
											"key": "businessId",
											"value": "2",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getUserMenus",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{BoToken}}"
									}
								],
								"url": {
									"raw": "{{UcmUrl}}/v1.0/getUserMenus?engineCode=UCM&languageCode=en&userId={{BoUserId}}&userRequired=YES&appType=Web_Panel",
									"host": [
										"{{UcmUrl}}"
									],
									"path": [
										"v1.0",
										"getUserMenus"
									],
									"query": [
										{
											"key": "engineCode",
											"value": "UCM"
										},
										{
											"key": "languageCode",
											"value": "en"
										},
										{
											"key": "userId",
											"value": "{{BoUserId}}"
										},
										{
											"key": "userRequired",
											"value": "YES"
										},
										{
											"key": "appType",
											"value": "Web_Panel"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getRoleMenus",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{BoToken}}"
									}
								],
								"url": {
									"raw": "{{UcmUrl}}/v1.0/getRoleMenus?roleId=2",
									"host": [
										"{{UcmUrl}}"
									],
									"path": [
										"v1.0",
										"getRoleMenus"
									],
									"query": [
										{
											"key": "roleId",
											"value": "2"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getUserMenusData",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 1. {",
											"//     \"errorMessage\": \"Unknown Error Occurred, Please Try Again.\",",
											"//     \"errorCode\": 1",
											"// }",
											"",
											"// 13:06:45 ERROR com.sb.ucm.utils.AppLogger - ",
											"// java.lang.NullPointerException",
											"// \tat com.sb.ucm.menu.model.ModuleMenuBeanList.<init>(ModuleMenuBeanList.java:29)",
											"// \tat com.sb.ucm.menu.service.MenuMgmtService.lambda$getUserMenusData$89(MenuMgmtService.java:1296)",
											"// \tat java.lang.Iterable.forEach(Iterable.java:75)",
											"// \tat com.sb.ucm.menu.service.MenuMgmtService.getUserMenusData(MenuMgmtService.java:1285)",
											"// \tat com.sb.ucm.menu.service.MenuMgmtService$$FastClassBySpringCGLIB$$d93b88ae.invoke(<generated>)",
											"// \tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)",
											"// \tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)",
											"// \tat com.sb.ucm.menu.service.MenuMgmtService$$EnhancerBySpringCGLIB$$9e136fac.getUserMenusData(<generated>)",
											"// \tat com.sb.ucm.menu.controller.MenuMgmtController.getUserMenusData(MenuMgmtController.java:63)",
											"// \tat com.sb.ucm.menu.controller.MenuMgmtController$$FastClassBySpringCGLIB$$235f3ae0.invoke(<generated>)",
											"// \tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)",
											"// \tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)",
											"// \tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)",
											"// \tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)",
											"// \tat org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)",
											"// \tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)",
											"// \tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)",
											"// \tat org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)",
											"// \tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)",
											"// \tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)",
											"// \tat org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)",
											"// \tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)",
											"// \tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)",
											"// \tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)",
											"// \tat com.sb.ucm.menu.controller.MenuMgmtController$$EnhancerBySpringCGLIB$$158ee811.getUserMenusData(<generated>)",
											"// \tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
											"// \tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
											"// \tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
											"// \tat java.lang.reflect.Method.invoke(Method.java:498)",
											"// \tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)",
											"// \tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)",
											"// \tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)",
											"// \tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)",
											"// \tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)",
											"// \tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)",
											"// \tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)",
											"// \tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)",
											"// \tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)",
											"// \tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)",
											"// \tat javax.servlet.http.HttpServlet.service(HttpServlet.java:634)",
											"// \tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)",
											"// \tat javax.servlet.http.HttpServlet.service(HttpServlet.java:741)",
											"// \tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)",
											"// \tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)",
											"// \tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)",
											"// \tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)",
											"// \tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)",
											"// \tat com.sb.ucm.security.filter.CustomUserFilter.doFilter(CustomUserFilter.java:128)",
											"// \tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)",
											"// \tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)",
											"// \tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)",
											"// \tat org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)",
											"// \tat org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)",
											"// \tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)",
											"// \tat org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)",
											"// \tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)",
											"// \tat org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)",
											"// \tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)",
											"// \tat org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)",
											"// \tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)",
											"// \tat org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)",
											"// \tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)",
											"// \tat org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)",
											"// \tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)",
											"// \tat com.sb.ucm.security.filter.CustomUserFilter.doFilter(CustomUserFilter.java:128)",
											"// \tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)",
											"// \tat org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)",
											"// \tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)",
											"// \tat org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)",
											"// \tat org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)",
											"// \tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)",
											"// \tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)",
											"// \tat org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)",
											"// \tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)",
											"// \tat org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)",
											"// \tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)",
											"// \tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)",
											"// \tat org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)",
											"// \tat org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)",
											"// \tat org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)",
											"// \tat org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)",
											"// \tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)",
											"// \tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)",
											"// \tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:109)",
											"// \tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)",
											"// \tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)",
											"// \tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)",
											"// \tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)",
											"// \tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)",
											"// \tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)",
											"// \tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)",
											"// \tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)",
											"// \tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)",
											"// \tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)",
											"// \tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)",
											"// \tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)",
											"// \tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)",
											"// \tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)",
											"// \tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)",
											"// \tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)",
											"// \tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)",
											"// \tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)",
											"// \tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)",
											"// \tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
											"// \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
											"// \tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)",
											"// \tat java.lang.Thread.run(Thread.java:748)",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{BoToken}}"
									}
								],
								"url": {
									"raw": "{{UcmUrl}}/v1.0/getUserMenusData?roleId=4&userId=15",
									"host": [
										"{{UcmUrl}}"
									],
									"path": [
										"v1.0",
										"getUserMenusData"
									],
									"query": [
										{
											"key": "roleId",
											"value": "4"
										},
										{
											"key": "userId",
											"value": "15"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "version",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{BoToken}}"
									}
								],
								"url": {
									"raw": "{{UcmUrl}}/v1.0/version",
									"host": [
										"{{UcmUrl}}"
									],
									"path": [
										"v1.0",
										"version"
									]
								}
							},
							"response": []
						},
						{
							"name": "getModuleList",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{BoToken}}"
									}
								],
								"url": {
									"raw": "{{UcmUrl}}/v1.0/getModuleList",
									"host": [
										"{{UcmUrl}}"
									],
									"path": [
										"v1.0",
										"getModuleList"
									]
								}
							},
							"response": []
						},
						{
							"name": "getRoleMenus",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{BoToken}}"
									}
								],
								"url": {
									"raw": "{{UcmUrl}}/v1.0/getRoleMenus?roleId=1",
									"host": [
										"{{UcmUrl}}"
									],
									"path": [
										"v1.0",
										"getRoleMenus"
									],
									"query": [
										{
											"key": "roleId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "PasswordManagement",
					"item": [
						{
							"name": "initiateForgotPassword",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "clinetCode",
										"value": "UCM"
									}
								],
								"url": {
									"raw": "{{UcmUrl}}/initiateForgotPassword?userName=dgdg&mobileNumber=7585846&type=MOBILE&mobileCode=%2B1868",
									"host": [
										"{{UcmUrl}}"
									],
									"path": [
										"initiateForgotPassword"
									],
									"query": [
										{
											"key": "userName",
											"value": "dgdg"
										},
										{
											"key": "emailId",
											"value": "dss@sapidblue.com",
											"disabled": true
										},
										{
											"key": "mobileNumber",
											"value": "7585846"
										},
										{
											"key": "type",
											"value": "MOBILE"
										},
										{
											"key": "mobileCode",
											"value": "%2B1868"
										},
										{
											"key": "type",
											"value": "MOBILE",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "resetPassword",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "clientCode",
										"value": "CAM"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userName\": \"dgdg\",\n    \"confirmNewPassword\": \"Owrt@410\",\n    \"mobileCode\": \"+1868\",\n    \"mobileNumber\": \"7585846\",\n    \"newPassword\": \"Owrt@410\",\n    \"otp\": \"403980\"\n}"
								},
								"url": {
									"raw": "{{UcmUrl}}/resetPassword",
									"host": [
										"{{UcmUrl}}"
									],
									"path": [
										"resetPassword"
									]
								}
							},
							"response": []
						},
						{
							"name": "sendOtpFor2FA",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// {",
											"//     \"errorMessage\": \"Success\",",
											"//     \"errorCode\": 0",
											"// }"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{UcmUrl}}/sendOtpFor2FA?userName=dgdg",
									"host": [
										"{{UcmUrl}}"
									],
									"path": [
										"sendOtpFor2FA"
									],
									"query": [
										{
											"key": "userName",
											"value": "dgdg"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "validateOtpFor2FA",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// {",
											"//     \"errorMessage\": \"Success\",",
											"//     \"errorCode\": 0,",
											"//     \"data\": \"OTP Validated Successfully.\"",
											"// }"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{UcmUrl}}/validateOtpFor2FA?otp=403980&userName=dgdg",
									"host": [
										"{{UcmUrl}}"
									],
									"path": [
										"validateOtpFor2FA"
									],
									"query": [
										{
											"key": "otp",
											"value": "403980"
										},
										{
											"key": "userName",
											"value": "dgdg"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "validateUserFor2FA",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Create new otp even if re send otp Maximum Limit Reached For Otp.Please Try After Some Time."
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"userName\": \"dgdg\",\n\"password\": 12345678\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{UcmUrl}}/validateUserFor2FA",
									"host": [
										"{{UcmUrl}}"
									],
									"path": [
										"validateUserFor2FA"
									]
								}
							},
							"response": []
						},
						{
							"name": "getPasswordPolicy",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{BoToken}}"
									}
								],
								"url": {
									"raw": "{{UcmUrl}}/v1.0/getPasswordPolicy",
									"host": [
										"{{UcmUrl}}"
									],
									"path": [
										"v1.0",
										"getPasswordPolicy"
									]
								}
							},
							"response": []
						},
						{
							"name": "getPasswordDescription",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{BoToken}}"
									}
								],
								"url": {
									"raw": "{{UcmUrl}}/v1.0/getPasswordDescription?policyId=1",
									"host": [
										"{{UcmUrl}}"
									],
									"path": [
										"v1.0",
										"getPasswordDescription"
									],
									"query": [
										{
											"key": "policyId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "ReportManagement",
					"item": [
						{
							"name": "fetchEmailChangeReport",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{BoToken}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"aliasId\": 2,\n    \"businessId\": 2,\n    \"changedBy\": null,\n    \"channelId\": 2,\n    \"endDate\": \"2022-11-03\",\n    \"fileType\": null,\n    \"firstName\": null,\n    \"lastName\": null,\n    \"newEmailId\": null,\n    \"oldEmailId\": null,\n    \"rsaId\": null,\n    \"startDate\": \"2022-09-03\",\n    \"ucmAliasId\": null,\n    \"changeByUserType\":\"BO\",\n    \"ucmChannelId\": null\n}"
								},
								"url": {
									"raw": "{{UcmUrl}}/v1.0/fetchEmailChangeReport",
									"host": [
										"{{UcmUrl}}"
									],
									"path": [
										"v1.0",
										"fetchEmailChangeReport"
									]
								}
							},
							"response": []
						},
						{
							"name": "canFetchUserUpdateReport",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{BoToken}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"businessId\":2,\n    \"endDate\": \"2022-11-03\",\n    \"startDate\": \"2022-09-03\",\n    \"userName\": null\n}"
								},
								"url": {
									"raw": "{{UcmUrl}}/v1.0/canFetchUserUpdateReport",
									"host": [
										"{{UcmUrl}}"
									],
									"path": [
										"v1.0",
										"canFetchUserUpdateReport"
									]
								}
							},
							"response": []
						},
						{
							"name": "fetchMobileNumberChangeReport",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{BoToken}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"aliasId\": 2,\n    \"businessId\": 2,\n    \"changedBy\": null,\n    \"channelId\": 2,\n    \"endDate\": \"2022-12-03\",\n    \"fileType\": null,\n    \"firstName\": null,\n    \"lastName\": null,\n    \"newMobileNo\": null,\n    \"oldMobileNo\": null,\n    \"rsaId\": null,\n    \"startDate\": \"2022-11-03\",\n    \"ucmAliasId\": null,\n    \"ucmChannelId\": null\n}"
								},
								"url": {
									"raw": "{{UcmUrl}}/v1.0/fetchMobileNumberChangeReport",
									"host": [
										"{{UcmUrl}}"
									],
									"path": [
										"v1.0",
										"fetchMobileNumberChangeReport"
									]
								}
							},
							"response": []
						},
						{
							"name": "fetchRsaIdChangeReport",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{BoToken}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"aliasId\": 2,\n    \"businessId\": 2,\n    \"changedBy\": null,\n    \"channelId\": 2,\n    \"endDate\": \"2022-11-03\",\n    \"fileType\": null,\n    \"firstName\": null,\n    \"lastName\": null,\n    \"newRsaId\": null,\n    \"oldRsaId\": null,\n    \"rsaId\": null,\n    \"startDate\": \"2022-09-03\",\n    \"ucmAliasId\": null,\n    \"ucmChannelId\": null\n}"
								},
								"url": {
									"raw": "{{UcmUrl}}v1.0/fetchRsaIdChangeReport",
									"host": [
										"{{UcmUrl}}v1",
										"0"
									],
									"path": [
										"fetchRsaIdChangeReport"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "SchedulerWrapper",
					"item": [
						{
							"name": "currencyRateSyncTask",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{BoToken}}"
									}
								],
								"url": {
									"raw": "https://ucm-backend.sapidblue.in/v1.0/updateCurrencyRates/currencyRateSyncTask",
									"protocol": "https",
									"host": [
										"ucm-backend",
										"sapidblue",
										"in"
									],
									"path": [
										"v1.0",
										"updateCurrencyRates",
										"currencyRateSyncTask"
									]
								}
							},
							"response": []
						},
						{
							"name": "userBlockDateScheduler/rescheduleTask",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer XXXX"
									}
								],
								"url": {
									"raw": "https://ucm-backend.sapidblue.in/v1.0/userBlockDateScheduler/rescheduleTask",
									"protocol": "https",
									"host": [
										"ucm-backend",
										"sapidblue",
										"in"
									],
									"path": [
										"v1.0",
										"userBlockDateScheduler",
										"rescheduleTask"
									]
								}
							},
							"response": []
						},
						{
							"name": "userInactiveScheduler/rescheduleTask",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer XXXX"
									}
								],
								"url": {
									"raw": "https://ucm-backend.sapidblue.in/v1.0/userInactiveScheduler/rescheduleTask",
									"protocol": "https",
									"host": [
										"ucm-backend",
										"sapidblue",
										"in"
									],
									"path": [
										"v1.0",
										"userInactiveScheduler",
										"rescheduleTask"
									]
								}
							},
							"response": []
						},
						{
							"name": "userTerminateScheduler",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer XXXX"
									}
								],
								"url": {
									"raw": "https://ucm-backend.sapidblue.in/v1.0/userTerminateScheduler/rescheduleTask",
									"protocol": "https",
									"host": [
										"ucm-backend",
										"sapidblue",
										"in"
									],
									"path": [
										"v1.0",
										"userTerminateScheduler",
										"rescheduleTask"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "CAM",
			"item": [
				{
					"name": "Consumer_Resources",
					"item": [
						{
							"name": "SME",
							"item": [
								{
									"name": "SME_Consumer_Registration",
									"item": [
										{
											"name": "sendRegOtp",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"\t  pm.environment.set(\"mobileNo\", +pm.environment.get(\"mobileNo\")+1);",
															"      pm.environment.set(\"Iteration\", +pm.environment.get(\"Iteration\")+1); ",
															"    pm.environment.set(\"emailId\", \"rishabh123.\" +pm.environment.get(\"Iteration\")+\"@sapidblue.com\");",
															"",
															"",
															"     "
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															" var jsonData = JSON.parse(responseBody);",
															"  pm.environment.set(\"mobVerificationCode\", jsonData.data.mobVerificationCode);",
															"  pm.environment.set(\"emailVerificationCode\", jsonData.data.emailVerificationCode);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "clientCode",
														"value": "UCM"
													}
												],
												"url": {
													"raw": "{{CamUrl}}/preLogin/sendRegOtp?aliasName={{aliasName}}&mobileNo=6567576505&type=MOBILE&mobileCode=%2B91&emailId={{emailId}}",
													"host": [
														"{{CamUrl}}"
													],
													"path": [
														"preLogin",
														"sendRegOtp"
													],
													"query": [
														{
															"key": "aliasName",
															"value": "{{aliasName}}"
														},
														{
															"key": "mobileNo",
															"value": "6567576505"
														},
														{
															"key": "type",
															"value": "MOBILE"
														},
														{
															"key": "mobileCode",
															"value": "%2B91"
														},
														{
															"key": "emailId",
															"value": "{{emailId}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "registerConsumerWithOtp Copy",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															" var jsonData = JSON.parse(responseBody);",
															"  pm.environment.set(\"consumerToken\", jsonData.data.consumerToken);",
															"  pm.environment.set(\"consumerId\", jsonData.data.consumerLoginInfo.consumerId);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "*/*"
													},
													{
														"key": "clientCode",
														"value": "UCM"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"countryCode\": \"TT\",\n    \"aliasName\": \"{{aliasName}}\",\n    \"device\": \"PC_BROWSER\",\n    \"mobileNo\": \"6567576505\",\n    \"mobileCode\": \"+91\",\n    \"otp\" : \"{{mobVerificationCode}}\",\n    \"requestIp\": \"192.3.1.6\",\n    \"userAgent\": \"string\",\n    \"type\": \"MOBILE\" ,\n    \"emailId\":\"sdffs@sapidblue.com\"\n}"
												},
												"url": {
													"raw": "{{CamUrl}}/preLogin/registerConsumerWithOtp",
													"host": [
														"{{CamUrl}}"
													],
													"path": [
														"preLogin",
														"registerConsumerWithOtp"
													]
												}
											},
											"response": []
										},
										{
											"name": "registerConsumer",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "clientCode",
														"value": "CAM"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Cookie",
														"value": "SESSION=NTcwYzZjOWYtMjYwZS00NjQwLThkMTAtYTVjODI0MTQ4NGYx; SESSION=Y2YxYTRkYTctYmQyZC00N2I5LThhOTctYmMyNzU3ZmYxNDRj; SESSION=NjU3YmU1OTctOTQ5Ny00MmRhLTkyYjgtN2ZhMzBiNTYzNzll; SESSION=MDM4OWQxMDAtM2UzMy00ODk3LThiZmMtZTMyOGQwMGMxNTQy"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"addressOne\": \"addressOne\",\r\n    \"addressTwo\": null,\r\n    \"cityCode\": \"TT-WO-01\",\r\n    \"stateCode\":\"TT-WO\",\r\n    \"countryCode\": \"TT\",\r\n    \"currencyCode\": \"TTD\",\r\n    \"deviceType\": \"PC\",\r\n    \"aliasName\": \"{{aliasName}}\",\r\n    \"town\": \"string\",\r\n    \"emailId\": \"rishabhjitu16.19@sapidblue.com\",                                                   \r\n    \"eventTypes\": [\r\n        \"ALL\"\r\n    ],\r\n    \"firstName\": \"FirstName\",\r\n    \"isEmailService\": \"Y\",\r\n    \"isSmsService\": \"Y\",\r\n    \"lastName\": \"LastName\",\r\n    \"loginDevice\": \"PC_BROWSER\",\r\n    \"mobileNo\": \"6567576503\",\r\n    \"mobileCode\":\"+91\",\r\n    \"password\": \"12345\",\r\n    \"otp\": \"{{mobVerificationCode}}\",\r\n    \"referSource\": \"SMS\",\r\n    \"registrationType\": \"FULL\",\r\n    \"requestIp\": \"123.87.9798.25.187.189\",\r\n    \"rsaId\": null,\r\n    \"state\": \"TT-CH\",\r\n    \"userAgent\":\"NA\",\r\n    \"userName\": \"916567576503\",\r\n    \"ussd\": false,\r\n    \"zipCode\": \"12345\"\r\n\r\n}"
												},
												"url": {
													"raw": "{{CamUrl}}/preLogin/registerConsumer",
													"host": [
														"{{CamUrl}}"
													],
													"path": [
														"preLogin",
														"registerConsumer"
													]
												}
											},
											"response": []
										},
										{
											"name": "doConsumerSearch",
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {
													"content-type": true
												}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "*/*"
													},
													{
														"key": "userId",
														"value": "{{consumerId}}"
													},
													{
														"key": "userToken",
														"value": "{{consumerToken}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "aliasName",
														"value": "{{paypr}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"offset\":0,\n    \"limit\":1000,\n    \"userType\":\"CONSUMER\"\n}"
												},
												"url": {
													"raw": "{{CamUrl}}/postLogin/doConsumerSearch",
													"host": [
														"{{CamUrl}}"
													],
													"path": [
														"postLogin",
														"doConsumerSearch"
													]
												}
											},
											"response": []
										},
										{
											"name": "clone",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															" var jsonData = JSON.parse(responseBody);",
															"  pm.environment.set(\"consumerToken\", jsonData.data.consumerToken);",
															"  pm.environment.set(\"consumerId\", jsonData.data.consumerLoginInfo.consumerId);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "*/*"
													},
													{
														"key": "clientCode",
														"value": "UCM"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"countryCode\": \"TT\",\n    \"currencyCode\": \"TTD\",\n    \"device\": \"PC\",\n    \"aliasName\": \"www.sapidblue.com\",\n    \"loginDevice\": \"PC_BROWSER\",\n    \"mobileNo\": \"{{mobileNo}}\",\n    \"mobileCode\":\"+91\",\n    \"otp\": \"{{mobVerificationCode}}\",\n    \"referCode\": \"AXC1B\",\n    \"referSource\": \"REFER_FRIEND\",\n    \"requestIp\": \"3.6.229.168\",\n    \"userAgent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.131 Safari/537.36\"\n}"
												},
												"url": {
													"raw": "{{CamUrl}}/preLogin/registerConsumerWithOtp",
													"host": [
														"{{CamUrl}}"
													],
													"path": [
														"preLogin",
														"registerConsumerWithOtp"
													]
												}
											},
											"response": []
										},
										{
											"name": "overallUpdateConsumerProfile",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															" var jsonData = JSON.parse(responseBody);",
															"  pm.environment.set(\"emailId\", jsonData.data.consumerMaster.emailId);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "clientCode",
														"value": "CAM"
													},
													{
														"key": "userId",
														"value": "{{consumerId}}"
													},
													{
														"key": "userToken",
														"value": "{{consumerToken}}"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "aliasName",
															"value": "www.sapidblue.com",
															"type": "text"
														},
														{
															"key": "accountNumber",
															"value": "98989898989",
															"type": "text"
														},
														{
															"key": "accountType",
															"value": "SAVINGS",
															"type": "text"
														},
														{
															"key": "addressLine1",
															"value": "Address1",
															"type": "text"
														},
														{
															"key": "addressLine2",
															"value": "Address2",
															"type": "text"
														},
														{
															"key": "bankName",
															"value": "Citi Bank Of India",
															"type": "text"
														},
														{
															"key": "beneficiaryName",
															"value": "Rishabh Test",
															"type": "text"
														},
														{
															"key": "cityCode",
															"value": "IN-AN-PO",
															"type": "text"
														},
														{
															"key": "countryCode",
															"value": "IN",
															"type": "text"
														},
														{
															"key": "emailId",
															"value": "rishabhk12@sapidblue.com",
															"type": "text",
															"disabled": true
														},
														{
															"key": "firstName",
															"value": "Rishabh",
															"type": "text"
														},
														{
															"key": "lastName",
															"value": "Kumar",
															"type": "text"
														},
														{
															"key": "gender",
															"value": "M",
															"type": "text"
														},
														{
															"key": "dob",
															"value": "undefined",
															"type": "text",
															"disabled": true
														},
														{
															"key": "ifscCode",
															"value": "623221781",
															"type": "text"
														},
														{
															"key": "systemConsumerId",
															"value": "{{consumerId}}",
															"type": "text"
														},
														{
															"key": "stateCode",
															"value": "IN-AN",
															"type": "text"
														},
														{
															"key": "organizationName",
															"value": "infotech",
															"type": "text"
														},
														{
															"key": "industry",
															"value": "IT",
															"type": "text"
														},
														{
															"key": "buyData",
															"value": "CLOTHES,GARMENTS",
															"type": "text"
														},
														{
															"key": "sellData",
															"value": "CLOTHES,GARMENTS",
															"type": "text"
														},
														{
															"key": "documents[0].docType",
															"value": "ADDRESS_PROOF",
															"type": "text",
															"disabled": true
														},
														{
															"key": "documents[0].image",
															"type": "file",
															"src": [],
															"disabled": true
														},
														{
															"key": "documents[1].docType",
															"value": "TAX_ID",
															"type": "text",
															"disabled": true
														},
														{
															"key": "documents[1].image",
															"type": "file",
															"src": [],
															"disabled": true
														},
														{
															"key": "documents[2].docType",
															"value": "REGISTRATION_CERTIFICATE",
															"type": "text",
															"disabled": true
														},
														{
															"key": "documents[2].image",
															"type": "file",
															"src": [],
															"disabled": true
														},
														{
															"key": "documents[3].docType",
															"value": "ID_PROOF",
															"type": "text",
															"disabled": true
														},
														{
															"key": "documents[3].image",
															"type": "file",
															"src": [],
															"disabled": true
														},
														{
															"key": "organizationRegistrationDate",
															"value": "2022-01-01",
															"type": "text"
														},
														{
															"key": "organizationSize",
															"value": "150",
															"type": "text",
															"disabled": true
														},
														{
															"key": "middleName",
															"value": "kumar",
															"type": "text",
															"disabled": true
														},
														{
															"key": "nationality",
															"value": "INDIAN",
															"type": "text",
															"disabled": true
														},
														{
															"key": "emailId",
															"value": "rishabh1.29547@sapidblue.com",
															"type": "text",
															"disabled": true
														},
														{
															"key": "mobileNo",
															"value": "8877866669",
															"type": "text",
															"disabled": true
														},
														{
															"key": "mobileCode",
															"value": "+91",
															"type": "text",
															"disabled": true
														},
														{
															"key": "languageCode",
															"value": "fr",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{local}}/postLogin/overallUpdateConsumerProfile",
													"host": [
														"{{local}}"
													],
													"path": [
														"postLogin",
														"overallUpdateConsumerProfile"
													]
												}
											},
											"response": []
										},
										{
											"name": "getDocumentTypeList",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "accept",
														"value": "*/*"
													},
													{
														"key": "userId",
														"value": "{{consumerId}}"
													},
													{
														"key": "userToken",
														"value": "{{consumerToken}}"
													}
												],
												"url": {
													"raw": "https://cam-backend.sapidblue.in/postLogin/getDocumentTypeList?aliasName=www.sapidblue.com",
													"protocol": "https",
													"host": [
														"cam-backend",
														"sapidblue",
														"in"
													],
													"path": [
														"postLogin",
														"getDocumentTypeList"
													],
													"query": [
														{
															"key": "aliasName",
															"value": "www.sapidblue.com"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Client-getConsumerDetails",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "accept",
														"value": "*/*"
													},
													{
														"key": "clientCode",
														"value": "CAM"
													},
													{
														"key": "clientPwd",
														"value": "ph2Nj5knd4IjWBVLc4mhmYHo1hQDEdS3FlIC2KskHpeHFhsqxD"
													}
												],
												"url": {
													"raw": "https://cam-backend.sapidblue.in/client/getConsumerDetails?businessId=1&channelId=1&systemConsumerId=1",
													"protocol": "https",
													"host": [
														"cam-backend",
														"sapidblue",
														"in"
													],
													"path": [
														"client",
														"getConsumerDetails"
													],
													"query": [
														{
															"key": "businessId",
															"value": "1"
														},
														{
															"key": "channelId",
															"value": "1"
														},
														{
															"key": "mobileCode",
															"value": "%2B91",
															"disabled": true
														},
														{
															"key": "mobileNumber",
															"value": "{{mobileNo}}",
															"disabled": true
														},
														{
															"key": "systemConsumerId",
															"value": "1"
														},
														{
															"key": "userName",
															"value": "",
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "getProfileStatus",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "accept",
														"value": "*/*"
													},
													{
														"key": "userId",
														"value": "{{consumerId}}"
													},
													{
														"key": "userToken",
														"value": "{{consumerToken}}"
													}
												],
												"url": {
													"raw": "https://cam-backend.sapidblue.in/postLogin/getProfileStatus?aliasName=www.sapidblue.com",
													"protocol": "https",
													"host": [
														"cam-backend",
														"sapidblue",
														"in"
													],
													"path": [
														"postLogin",
														"getProfileStatus"
													],
													"query": [
														{
															"key": "aliasName",
															"value": "www.sapidblue.com"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "SME_BACKOFFICE_KYC_CONSUMER",
									"item": [
										{
											"name": "KYC_&_Consumer_Profile",
											"item": [
												{
													"name": "getLoginData",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "accept",
																"value": "*/*"
															},
															{
																"key": "Authorization",
																"value": "Bearer {{BoToken}}"
															}
														],
														"url": {
															"raw": "{{CamUrl}}/v1.0/getLoginData",
															"host": [
																"{{CamUrl}}"
															],
															"path": [
																"v1.0",
																"getLoginData"
															]
														}
													},
													"response": []
												},
												{
													"name": "validateUser",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "accept",
																"value": "*/*"
															},
															{
																"key": "Authorization",
																"value": "Bearer {{BoToken}}"
															}
														],
														"url": {
															"raw": "https://cam-backend.sapidblue.in/v1.0/validateUser?userId={{BoUserId}}",
															"protocol": "https",
															"host": [
																"cam-backend",
																"sapidblue",
																"in"
															],
															"path": [
																"v1.0",
																"validateUser"
															],
															"query": [
																{
																	"key": "userId",
																	"value": "{{BoUserId}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "getUserMenus",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "accept",
																"value": "*/*"
															},
															{
																"key": "Authorization",
																"value": "Bearer {{BoToken}}"
															}
														],
														"url": {
															"raw": "{{CamUrl}}/v1.0/getUserMenus?appType=Web_Panel&engineCode=CAM&languageCode=en&userId={{BoUserId}}&userRequired=NO",
															"host": [
																"{{CamUrl}}"
															],
															"path": [
																"v1.0",
																"getUserMenus"
															],
															"query": [
																{
																	"key": "appType",
																	"value": "Web_Panel"
																},
																{
																	"key": "engineCode",
																	"value": "CAM"
																},
																{
																	"key": "languageCode",
																	"value": "en"
																},
																{
																	"key": "userId",
																	"value": "{{BoUserId}}"
																},
																{
																	"key": "userRequired",
																	"value": "NO"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "getBusinessList",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "accept",
																"value": "*/*"
															},
															{
																"key": "Authorization",
																"value": "Bearer {{BoToken}}"
															}
														],
														"url": {
															"raw": "{{CamUrl}}/v1.0/getBusinessList",
															"host": [
																"{{CamUrl}}"
															],
															"path": [
																"v1.0",
																"getBusinessList"
															]
														}
													},
													"response": []
												},
												{
													"name": "getChannelList",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"var jsonData = JSON.parse(responseBody);",
																	"pm.environment.set(\"channelId\", jsonData.data.channelId);",
																	"pm.environment.set(\"businessId\", jsonData.data.businessId);",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "accept",
																"value": "*/*"
															},
															{
																"key": "Authorization",
																"value": "Bearer {{BoToken}}"
															}
														],
														"url": {
															"raw": "https://cam-backend.sapidblue.in/v1.0/getChannelList?businessId=2",
															"protocol": "https",
															"host": [
																"cam-backend",
																"sapidblue",
																"in"
															],
															"path": [
																"v1.0",
																"getChannelList"
															],
															"query": [
																{
																	"key": "businessId",
																	"value": "2"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "getChannelAlias",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "accept",
																"value": "*/*"
															},
															{
																"key": "Authorization",
																"value": "Bearer {{BoToken}}"
															}
														],
														"url": {
															"raw": "https://cam-backend.sapidblue.in/v1.0/getChannelAlias?businessId={{businessId}}&channelId={{channelId}}",
															"protocol": "https",
															"host": [
																"cam-backend",
																"sapidblue",
																"in"
															],
															"path": [
																"v1.0",
																"getChannelAlias"
															],
															"query": [
																{
																	"key": "businessId",
																	"value": "{{businessId}}"
																},
																{
																	"key": "channelId",
																	"value": "{{channelId}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "getConfigurations",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "accept",
																"value": "*/*"
															},
															{
																"key": "Authorization",
																"value": "Bearer {{BoToken}}"
															}
														],
														"url": {
															"raw": "https://cam-backend.sapidblue.in/v1.0/getConfigurations?businessId={{businessId}}&channelId={{channelId}}&configType=No",
															"protocol": "https",
															"host": [
																"cam-backend",
																"sapidblue",
																"in"
															],
															"path": [
																"v1.0",
																"getConfigurations"
															],
															"query": [
																{
																	"key": "businessId",
																	"value": "{{businessId}}"
																},
																{
																	"key": "channelId",
																	"value": "{{channelId}}"
																},
																{
																	"key": "configType",
																	"value": "No"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "doConsumerSearch",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "accept",
																"value": "*/*"
															},
															{
																"key": "Authorization",
																"value": "Bearer {{BoToken}}"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"aliasId\": 2,\n    \"aliasName\": \"{{paypr}}\",\n    \"businessId\": {{businessId}},\n    \"channelId\": {{channelId}},\n    \"offset\": 0,\n    \"limit\": 200,\n    \"profileStatus\": \"NEW_VERIFICATION_PENDING\",\n    \"systemConsumerId\": [\n        \"{{consumerId}}\"\n\n    ]\n}"
														},
														"url": {
															"raw": "{{CamUrl}}/v1.0/doConsumerSearch",
															"host": [
																"{{CamUrl}}"
															],
															"path": [
																"v1.0",
																"doConsumerSearch"
															]
														}
													},
													"response": []
												},
												{
													"name": "fetchConsumerDocuments",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "accept",
																"value": "*/*"
															},
															{
																"key": "Authorization",
																"value": "Bearer {{BoToken}}"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"aliasName\": \"www.sapidblue.com\",\n    \"docName\": null,\n    \"docType\": \"ADDRESS_PROOF\",\n    \"docValue\": null,\n    \"systemConsumerId\": {{consumerId}}\n}"
														},
														"url": {
															"raw": "{{CamUrl}}/v1.0/fetchConsumerDocuments",
															"host": [
																"{{CamUrl}}"
															],
															"path": [
																"v1.0",
																"fetchConsumerDocuments"
															]
														}
													},
													"response": []
												},
												{
													"name": "updateDocumentStatus",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"//PASSPORT BANK_STATEMENT\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "accept",
																"value": "*/*"
															},
															{
																"key": "Authorization",
																"value": "Bearer {{BOToken}}"
															},
															{
																"key": "merchantId",
																"value": "1"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{ \r\n\"docName\" : \"BANK_STATEMENT\", \r\n\"docValue\": \"5001035\", \r\n\"documentId\": 1865, \r\n\"documentStatus\": \"REJECTED\",\r\n\"domainId\": 5, \r\n\"merchantPlayerId\": {{playerId}},\r\n\"remark\": \"REJECTED BY BIRESWAR\"\r\n}"
														},
														"url": {
															"raw": "{{BaseUrl}}/v1.0/updateDocumentStatus",
															"host": [
																"{{BaseUrl}}"
															],
															"path": [
																"v1.0",
																"updateDocumentStatus"
															]
														}
													},
													"response": []
												},
												{
													"name": "updatePlayerProfileStatus",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "accept",
																"value": "*/*"
															},
															{
																"key": "Authorization",
																"value": "Bearer {{BOToken}}"
															},
															{
																"key": "merchantId",
																"value": "1"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{ \r\n\"domainId\": 5, \r\n\"merchantPlayerIds\": [ \"{{playerId}}\" ], \r\n\"status\": \"ACTIVE\"\r\n}"
														},
														"url": {
															"raw": "{{BaseUrl}}/v1.0/updatePlayerProfileStatus",
															"host": [
																"{{BaseUrl}}"
															],
															"path": [
																"v1.0",
																"updatePlayerProfileStatus"
															]
														}
													},
													"response": []
												},
												{
													"name": "getSelfConsumerVerficationRequest",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const moment = require('moment');",
																	"var Date =moment().subtract(2, 'days').format(\"YYYY-MM-DD\")",
																	"pm.environment.set(\"currentDate\", moment().format(\"YYYY-MM-DD\"));",
																	"pm.environment.set(\"fromDate\", moment().subtract(2, 'days').format(\"YYYY-MM-DD\"));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"var jsonData = JSON.parse(responseBody);",
																	"pm.environment.set(\"requestId\", +jsonData.data[(jsonData.data.length)-1].requestId);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "accept",
																"value": "*/*"
															},
															{
																"key": "Authorization",
																"value": "Bearer {{BoToken}}"
															}
														],
														"url": {
															"raw": "{{CamUrl}}/v1.0/getSelfConsumerVerficationRequest?actionType=ALL&aliasId=4&businessId=1&channelId=1&fromDate={{fromDate}}&profileStatusType=ALL&toDate={{currentDate}}",
															"host": [
																"{{CamUrl}}"
															],
															"path": [
																"v1.0",
																"getSelfConsumerVerficationRequest"
															],
															"query": [
																{
																	"key": "actionType",
																	"value": "ALL"
																},
																{
																	"key": "aliasId",
																	"value": "4"
																},
																{
																	"key": "businessId",
																	"value": "1"
																},
																{
																	"key": "channelId",
																	"value": "1"
																},
																{
																	"key": "fromDate",
																	"value": "{{fromDate}}"
																},
																{
																	"key": "profileStatusType",
																	"value": "ALL"
																},
																{
																	"key": "toDate",
																	"value": "{{currentDate}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "FETCH_REQUEST_ID_FROM_DATABASE Copy",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	" var jsonData = JSON.parse(responseBody);\r",
																	" pm.environment.set(\"requestId\",jsonData[0].id)"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "http://localhost:3000/api/st_ram_player_verification_status?_where=((player_id,eq,{{R_playerId}}) ~and (domain_id,eq,1))",
															"protocol": "http",
															"host": [
																"localhost"
															],
															"port": "3000",
															"path": [
																"api",
																"st_ram_player_verification_status"
															],
															"query": [
																{
																	"key": "_where",
																	"value": "((player_id,eq,{{R_playerId}}) ~and (domain_id,eq,1))"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "canAssignVerificationRequest",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "accept",
																"value": "*/*"
															},
															{
																"key": "Authorization",
																"value": "Bearer {{BoToken}}"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"businessId\": 1,\n    \"channelId\": 1,\n    \"remarks\": null,\n    \"requestId\": {{requestId}},\n    \"systemUserId\": {{BoUserId}}\n}"
														},
														"url": {
															"raw": "https://cam-backend.sapidblue.in/v1.0/canAssignVerificationRequest",
															"protocol": "https",
															"host": [
																"cam-backend",
																"sapidblue",
																"in"
															],
															"path": [
																"v1.0",
																"canAssignVerificationRequest"
															]
														}
													},
													"response": []
												},
												{
													"name": "getConfigurations",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "accept",
																"value": "*/*"
															},
															{
																"key": "Authorization",
																"value": "Bearer {{BoToken}}"
															}
														],
														"url": {
															"raw": "{{UcmUrl}}/v1.0/getConfigurations?businessId=1&channelId=1&configType=B2C",
															"host": [
																"{{UcmUrl}}"
															],
															"path": [
																"v1.0",
																"getConfigurations"
															],
															"query": [
																{
																	"key": "businessId",
																	"value": "1"
																},
																{
																	"key": "channelId",
																	"value": "1"
																},
																{
																	"key": "configType",
																	"value": "B2C"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "getChannelAlias",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "accept",
																"value": "*/*"
															},
															{
																"key": "Authorization",
																"value": "Bearer {{BoToken}}"
															}
														],
														"url": {
															"raw": "https://cam-backend.sapidblue.in/v1.0/getChannelAlias?businessId=1&channelId=1",
															"protocol": "https",
															"host": [
																"cam-backend",
																"sapidblue",
																"in"
															],
															"path": [
																"v1.0",
																"getChannelAlias"
															],
															"query": [
																{
																	"key": "businessId",
																	"value": "1"
																},
																{
																	"key": "channelId",
																	"value": "1"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "getConsumerDocumentDetails",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"var jsonData = JSON.parse(responseBody);",
																	"pm.environment.set(\"ADDRESS_PROOF\", +jsonData.data[(jsonData.data.length)-1].documents[0].docId);",
																	"pm.environment.set(\"TAX_ID\", +jsonData.data[(jsonData.data.length)-2].documents[0].docId);",
																	"pm.environment.set(\"REGISTRATION_CERTIFICATE\", +jsonData.data[(jsonData.data.length)-3].documents[0].docId);",
																	"pm.environment.set(\"ID_PROOF\", +jsonData.data[(jsonData.data.length)-4].documents[0].docId);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "accept",
																"value": "*/*"
															},
															{
																"key": "Authorization",
																"value": "Bearer {{BoToken}}"
															}
														],
														"url": {
															"raw": "{{CamUrl}}/v1.0/getConsumerDocumentDetails?businessId=1&channelId=1&systemConsumerId={{consumerId}}",
															"host": [
																"{{CamUrl}}"
															],
															"path": [
																"v1.0",
																"getConsumerDocumentDetails"
															],
															"query": [
																{
																	"key": "businessId",
																	"value": "1"
																},
																{
																	"key": "channelId",
																	"value": "1"
																},
																{
																	"key": "systemConsumerId",
																	"value": "{{consumerId}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "getConsumerDetails",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "accept",
																"value": "*/*"
															},
															{
																"key": "Authorization",
																"value": "Bearer {{BoToken}}"
															}
														],
														"url": {
															"raw": "{{CamUrl}}/v1.0/getConsumerDetails?businessId=1&channelId=1&mobileCode=%2B91&systemConsumerId={{consumerId}}",
															"host": [
																"{{CamUrl}}"
															],
															"path": [
																"v1.0",
																"getConsumerDetails"
															],
															"query": [
																{
																	"key": "businessId",
																	"value": "1"
																},
																{
																	"key": "channelId",
																	"value": "1"
																},
																{
																	"key": "mobileCode",
																	"value": "%2B91"
																},
																{
																	"key": "mobileNumber",
																	"value": "{{mobileNo}}",
																	"disabled": true
																},
																{
																	"key": "systemConsumerId",
																	"value": "{{consumerId}}"
																},
																{
																	"key": "userName",
																	"value": "91{{mobileNo}}",
																	"disabled": true
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "getProfileStatus",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "accept",
																"value": "*/*"
															},
															{
																"key": "Authorization",
																"value": "Bearer {{BoToken}}"
															}
														],
														"url": {
															"raw": "{{CamUrl}}/v1.0/getProfileStatus?aliasName=www.sapidblue.com",
															"host": [
																"{{CamUrl}}"
															],
															"path": [
																"v1.0",
																"getProfileStatus"
															],
															"query": [
																{
																	"key": "aliasName",
																	"value": "www.sapidblue.com"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "getDocumentTypeList",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "accept",
																"value": "*/*"
															},
															{
																"key": "Authorization",
																"value": "Bearer {{BoToken}}"
															}
														],
														"url": {
															"raw": "{{CamUrl}}/v1.0/getDocumentTypeList?aliasName=www.sapidblue.com",
															"host": [
																"{{CamUrl}}"
															],
															"path": [
																"v1.0",
																"getDocumentTypeList"
															],
															"query": [
																{
																	"key": "aliasName",
																	"value": "www.sapidblue.com"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "updateDocumentStatus",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "accept",
																"value": "*/*"
															},
															{
																"key": "Authorization",
																"value": "Bearer {{BoToken}}"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"businessId\": 1,\n    \"domainId\": null,\n    \"docName\": \"MOBILE_BILL\",\n    \"docValue\": \"DocValue123\",\n    \"documentId\": {{ADDRESS_PROOF}},\n    \"documentStatus\": \"ACTIVE\",\n    \"remark\": null,\n    \"systemConsumerId\": \"{{consumerId}}\"\n}\n"
														},
														"url": {
															"raw": "{{CamUrl}}/v1.0/updateDocumentStatus",
															"host": [
																"{{CamUrl}}"
															],
															"path": [
																"v1.0",
																"updateDocumentStatus"
															]
														}
													},
													"response": []
												},
												{
													"name": "updateDocumentStatus",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"{",
																	"    \"errorMessage\": \"Please Provide Valid Doc Name\",",
																	"    \"errorCode\": 10004",
																	"}"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "accept",
																"value": "*/*"
															},
															{
																"key": "Authorization",
																"value": "Bearer {{BoToken}}"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"businessId\": 1,\n    \"channelId\": 1,\n    \"docName\": \"GSTIN\",\n    \"docValue\": \"DocValue123\",\n    \"documentId\": {{TAX_ID}},\n    \"documentStatus\": \"ACTIVE\",\n    \"remark\": null,\n    \"systemConsumerId\": \"{{consumerId}}\"\n}\n"
														},
														"url": {
															"raw": "{{CamUrl}}/v1.0/updateDocumentStatus",
															"host": [
																"{{CamUrl}}"
															],
															"path": [
																"v1.0",
																"updateDocumentStatus"
															]
														}
													},
													"response": []
												},
												{
													"name": "updateDocumentStatus",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"{",
																	"    \"errorMessage\": \"Please Provide Valid Doc Name\",",
																	"    \"errorCode\": 10004",
																	"}"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "accept",
																"value": "*/*"
															},
															{
																"key": "Authorization",
																"value": "Bearer {{BoToken}}"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"businessId\": 1,\n    \"channelId\": 1,\n    \"docName\": \"REGISTRATION_CERTIFICATE\",\n    \"docValue\": \"DocValue123\",\n    \"documentId\": {{REGISTRATION_CERTIFICATE}},\n    \"documentStatus\": \"ACTIVE\",\n    \"remark\": null,\n    \"systemConsumerId\": \"{{consumerId}}\"\n}\n"
														},
														"url": {
															"raw": "{{CamUrl}}/v1.0/updateDocumentStatus",
															"host": [
																"{{CamUrl}}"
															],
															"path": [
																"v1.0",
																"updateDocumentStatus"
															]
														}
													},
													"response": []
												},
												{
													"name": "updateDocumentStatus",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "accept",
																"value": "*/*"
															},
															{
																"key": "Authorization",
																"value": "Bearer {{BoToken}}"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"businessId\": 1,\n    \"channelId\": 1,\n    \"docName\": \"RSA_DOC\",\n    \"docValue\": \"DocValue123\",\n    \"documentId\": {{ID_PROOF}},\n    \"documentStatus\": \"ACTIVE\",\n    \"remark\": null,\n    \"systemConsumerId\": \"{{consumerId}}\"\n}\n"
														},
														"url": {
															"raw": "{{CamUrl}}/v1.0/updateDocumentStatus",
															"host": [
																"{{CamUrl}}"
															],
															"path": [
																"v1.0",
																"updateDocumentStatus"
															]
														}
													},
													"response": []
												},
												{
													"name": "updateConsumerProfileStatus",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "accept",
																"value": "*/*"
															},
															{
																"key": "Authorization",
																"value": "Bearer {{BoToken}}"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"businessId\": 1,\n    \"channelId\": 1,\n    \"status\": \"ACTIVE\",\n    \"systemConsumerIds\": [\n        \"{{consumerId}}\"\n    ]\n}"
														},
														"url": {
															"raw": "{{CamUrl}}/v1.0/updateConsumerProfileStatus",
															"host": [
																"{{CamUrl}}"
															],
															"path": [
																"v1.0",
																"updateConsumerProfileStatus"
															]
														}
													},
													"response": []
												},
												{
													"name": "updateConsumerProfileStatus Copy",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "accept",
																"value": "*/*"
															},
															{
																"key": "Authorization",
																"value": "Bearer {{BoToken}}"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"businessId\": 1,\n    \"channelId\": 1,\n    \"isUpdateByConsumer\": null,\n    \"loggedInUserCheck\": null,\n    \"remark\": null,\n    \"sourceDocType\": [\n        null\n    ],\n    \"status\": \"ACTIVE\",\n    \"systemConsumerIds\": [\n        \"{{consumerId}}\"\n    ]\n}"
														},
														"url": {
															"raw": "{{local}}/v1.0/updateConsumerProfileStatus",
															"host": [
																"{{local}}"
															],
															"path": [
																"v1.0",
																"updateConsumerProfileStatus"
															]
														}
													},
													"response": []
												},
												{
													"name": "Clone_doConsumerSearch",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "accept",
																"value": "*/*"
															},
															{
																"key": "Authorization",
																"value": "Bearer XXXX"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"aliasId\": 0,\n    \"aliasName\": \"string\",\n    \"businessId\": 0,\n    \"channelId\": 0,\n    \"cityCode\": \"string\",\n    \"consumerStatus\": \"string\",\n    \"consumerUserName\": \"string\",\n    \"countryCode\": \"string\",\n    \"dobFrom\": \"string\",\n    \"dobTo\": \"string\",\n    \"emailId\": \"string\",\n    \"firstName\": \"string\",\n    \"gender\": {},\n    \"isVerified\": \"string\",\n    \"lastName\": \"string\",\n    \"limit\": 0,\n    \"mobileCode\": \"string\",\n    \"mobileNo\": \"string\",\n    \"offset\": 0,\n    \"postLogin\": true,\n    \"primaryIdValue\": \"string\",\n    \"profileStatus\": \"string\",\n    \"profileType\": \"string\",\n    \"registrationDevice\": \"string\",\n    \"registrationFrom\": \"string\",\n    \"registrationIp\": \"string\",\n    \"registrationTo\": \"string\",\n    \"stateCode\": \"string\",\n    \"systemConsumerId\": [\n        \"string\"\n    ],\n    \"uploadedDocDoc\": \"string\",\n    \"uploadedDocType\": \"string\",\n    \"userName\": [\n        \"string\"\n    ]\n}"
														},
														"url": {
															"raw": "{{CamUrl}}/v1.0/doConsumerSearch",
															"host": [
																"{{CamUrl}}"
															],
															"path": [
																"v1.0",
																"doConsumerSearch"
															]
														}
													},
													"response": []
												},
												{
													"name": "fetchBalance",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "accept",
																"value": "*/*"
															},
															{
																"key": "Authorization",
																"value": "Bearer {{BoToken}}"
															}
														],
														"url": {
															"raw": "{{CamUrl}}/v1.0/fetchBalance?aliasName={{aliasName}}&systemConsumerId=710",
															"host": [
																"{{CamUrl}}"
															],
															"path": [
																"v1.0",
																"fetchBalance"
															],
															"query": [
																{
																	"key": "aliasName",
																	"value": "{{aliasName}}"
																},
																{
																	"key": "systemConsumerId",
																	"value": "710"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "getConsumerLoginDetails",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "accept",
																"value": "*/*"
															},
															{
																"key": "Authorization",
																"value": "Bearer {{BoToken}}"
															}
														],
														"url": {
															"raw": "{{CamUrl}}/v1.0/getConsumerLoginDetails?businessId=2&channelId=2&systemConsumerId=710",
															"host": [
																"{{CamUrl}}"
															],
															"path": [
																"v1.0",
																"getConsumerLoginDetails"
															],
															"query": [
																{
																	"key": "businessId",
																	"value": "2"
																},
																{
																	"key": "channelId",
																	"value": "2"
																},
																{
																	"key": "systemConsumerId",
																	"value": "710"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "fetchTransactionDetail",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "accept",
																"value": "*/*"
															},
															{
																"key": "Authorization",
																"value": "Bearer {{BoToken}}"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"aliasName\": \"{{aliasName}}\",\n    \"fromDate\": \"{{fromDate}}\",\n    \"limit\": 200,\n    \"offset\": 0,\n    \"systemConsumerId\": \"{{consumerId}}\",\n    \"toDate\": \"{{currentDate}}\",\n    \"txnType\": \"ALL\"\n}"
														},
														"url": {
															"raw": "{{CamUrl}}/v1.0/fetchTransactionDetail",
															"host": [
																"{{CamUrl}}"
															],
															"path": [
																"v1.0",
																"fetchTransactionDetail"
															]
														}
													},
													"response": []
												},
												{
													"name": "fetchConsumerProfileUpdateRequests",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "accept",
																"value": "*/*"
															},
															{
																"key": "Authorization",
																"value": "Bearer {{BoToken}}"
															}
														],
														"url": {
															"raw": "https://cam-backend.sapidblue.in/v1.0/fetchConsumerProfileUpdateRequests?businessId=1&channelId=1",
															"protocol": "https",
															"host": [
																"cam-backend",
																"sapidblue",
																"in"
															],
															"path": [
																"v1.0",
																"fetchConsumerProfileUpdateRequests"
															],
															"query": [
																{
																	"key": "businessId",
																	"value": "1"
																},
																{
																	"key": "channelId",
																	"value": "1"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "getBusinessList",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "accept",
																"value": "*/*"
															},
															{
																"key": "Authorization",
																"value": "Bearer {{BoToken}}"
															}
														],
														"url": {
															"raw": "{{CamUrl}}v1.0/getBusinessList",
															"host": [
																"{{CamUrl}}v1",
																"0"
															],
															"path": [
																"getBusinessList"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "CAM_KYC_REPORT",
											"item": [
												{
													"name": "get/token",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"var jsonData = JSON.parse(responseBody);",
																	"pm.environment.set(\"BoToken\", jsonData.data.authToken);",
																	"pm.environment.set(\"BoUserId\", jsonData.data.userId);",
																	"",
																	"",
																	"",
																	"",
																	"//      pm.environment.set(\"BoUserId\", jsonData.responseData.userId)",
																	"",
																	"// let swicthCaseIteration = +pm.environment.get(\"swicthCaseIteration\");",
																	"// if (jsonData.responseData.statusCode === 0 && swicthCaseIteration === 0) {",
																	"//      pm.test(\"-------------------------1.Positive scenario Of get/token api With valid key Data.--------------------------------\");",
																	"//      eval(pm.environment.get(\"IfTestCase\"))();",
																	"     ",
																	"//      pm.test(\"Message I am getting from Api is= \" + jsonData.responseData.message, function () { pm.expect(jsonData.responseData.message).to.eql(\"Success\") })",
																	"// pm.test(\"Message I am getting from Api is= \" + jsonData.responseData.message, function () { pm.expect(jsonData.responseData.message).to.eql(\"Success\") })",
																	"// pm.test(\"Status Code I am getting from Api is= \" + jsonData.responseData.statusCode, function () { pm.expect(+jsonData.responseData.statusCode).to.eql(0) })",
																	"//      pm.test(\"authToken I am getting from Api is= \" + jsonData.responseData.authToken, function () { pm.expect(+jsonData.responseData.authToken).to.eql(+jsonData.responseData.authToken) })",
																	"//      pm.test(\"timestamp I am getting from Api is= \" + jsonData.responseData.timestamp, function () { pm.expect(+jsonData.responseData.timestamp).to.eql(+jsonData.responseData.timestamp) })",
																	"//      pm.test(\"expiryTime I am getting from Api is= \" + jsonData.responseData.expiryTime, function () { pm.expect(+jsonData.responseData.expiryTime).to.eql(+jsonData.responseData.expiryTime) })",
																	"//      pm.test(\"issueAt I am getting from Api = \" + jsonData.responseData.issueAt, function () { pm.expect(+jsonData.responseData.issueAt).to.eql(+jsonData.responseData.issueAt) })",
																	"//      pm.test(\"Login superBo User Id Is=\" + jsonData.responseData.userId);",
																	"//      pm.test(\"passwordExpired is= \" + jsonData.responseData.passwordExpired, function () { pm.expect(jsonData.responseData.passwordExpired).to.eql(false) })",
																	"//      pm.environment.set(\"swicthCaseIteration\", swicthCaseIteration + 1);",
																	"//      postman.setNextRequest(\"SUPER_BO_LOGIN\");",
																	"// }",
																	"// else if (jsonData.responseData.statusCode > 0 && swicthCaseIteration === 1 || swicthCaseIteration === 2) {",
																	"//      pm.test(\"-------------------------2.Negative scenario Of get/token api with invalid userName and Password.--------------------------------\");",
																	"//      eval(pm.environment.get(\"IfTestCase\"))();",
																	"//      pm.test(\"Message I am getting from Api is= \" + jsonData.responseData.message, function () { pm.expect(+jsonData.responseData.message) === (\"Incorrect UserName Or Password/PIN, Please Try Again\") })",
																	"//      pm.test(\"Status Code I am getting from Api is= \" + jsonData.responseData.statusCode, function () { pm.expect(+jsonData.responseData.statusCode).to.eql(303) });",
																	"//      pm.environment.set(\"swicthCaseIteration\", swicthCaseIteration + 1);",
																	"//      postman.setNextRequest(\"SUPER_BO_LOGIN\")",
																	"// }",
																	"// else if (jsonData.responseData.statusCode > 0 && swicthCaseIteration === 3) {",
																	"//      pm.test(\"-------------------------3.Negative scenario Of get/token api with invalid clientId.--------------------------------\");",
																	"//      { eval(pm.environment.get(\"IfTestCase\"))(); }",
																	"//      pm.environment.set(\"swicthCaseIteration\", swicthCaseIteration + 1);",
																	"//      postman.setNextRequest(\"SUPER_BO_LOGIN\")",
																	"// }",
																	"// else if (jsonData.responseData.statusCode > 0 && swicthCaseIteration === 4) {",
																	"//      pm.test(\"-------------------------4.Negative scenario Of get/token api with invalid clientSecret.--------------------------------\");",
																	"//      { eval(pm.environment.get(\"IfTestCase\"))(); }",
																	"//      pm.environment.set(\"swicthCaseIteration\", 0);",
																	"//      postman.setNextRequest(\"validateUser\")",
																	"// }",
																	"// else {",
																	"//      { eval(pm.environment.get(\"ElseTestCase\"))(); }",
																	"//      pm.environment.set(\"swicthCaseIteration\", 0);",
																	"// }"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// let swicthCaseIteration= +pm.environment.get(\"swicthCaseIteration\");\r",
																	"// function sameLines()  {\r",
																	"// pm.variables.set(\"userName\", \"skilrock\");\r",
																	"// pm.variables.set(\"password\", 12345678);\r",
																	"// pm.variables.set(\"clientId\", \"PAM\");\r",
																	"// pm.variables.set(\"clientSecret\", \"ph2Nj5knd4IjWBVLc4mhmYHo1hQDEdS3FlIC2KskHpeHFhsqxD\");  }\r",
																	"// switch(swicthCaseIteration) {\r",
																	"//  case 0:\r",
																	"// \tsameLines();  break;\r",
																	"//  case 1:\r",
																	"// \tsameLines();\r",
																	"// \tpm.variables.set(\"userName\", null);  break;\r",
																	"//  case 2:\r",
																	"// \tsameLines();\r",
																	"// \tpm.variables.set(\"password\", null);  break;\r",
																	"//  case 3:\r",
																	"// \tsameLines();\r",
																	"// \tpm.variables.set(\"clientId\", null);  break;\r",
																	"//  case 4:\r",
																	"// \tsameLines();\r",
																	"// \tpm.variables.set(\"clientSecret\", null);  break;  }\r",
																	"\r",
																	"\r",
																	"\r",
																	"\r",
																	"\r",
																	"//VMFYq5Pz344-H8kuUUk1EedCUEPzeJAp2kl6Kddb2jE"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "userName",
																"value": "rishabh",
																"type": "text"
															},
															{
																"key": "password",
																"value": "12345678",
																"type": "text"
															},
															{
																"key": "clientId",
																"value": "UCM",
																"type": "text"
															},
															{
																"key": "clientSecret",
																"value": "ph2Nj5knd4IjWBVLc4mhmYHo1hQDEdS3FlIC2KskHpeHFhsqxD",
																"type": "text"
															},
															{
																"key": "Accept",
																"value": "application/json",
																"type": "text"
															}
														],
														"url": {
															"raw": "{{UcmUrl}}/get/token",
															"host": [
																"{{UcmUrl}}"
															],
															"path": [
																"get",
																"token"
															]
														}
													},
													"response": []
												},
												{
													"name": "getConsumerVerificationReport",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "accept",
																"value": "*/*"
															},
															{
																"key": "Authorization",
																"value": "Bearer {{BoToken}}"
															}
														],
														"url": {
															"raw": "{{CamUrl}}/v1.0/getConsumerVerificationReport?businessId=1&channelId=1&date=2022-10-03",
															"host": [
																"{{CamUrl}}"
															],
															"path": [
																"v1.0",
																"getConsumerVerificationReport"
															],
															"query": [
																{
																	"key": "businessId",
																	"value": "1"
																},
																{
																	"key": "channelId",
																	"value": "1"
																},
																{
																	"key": "date",
																	"value": "2022-10-03"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "getPendingVerificationRequestsReport",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "accept",
																"value": "*/*"
															},
															{
																"key": "Authorization",
																"value": "Bearer {{BoToken}}"
															}
														],
														"url": {
															"raw": "{{CamUrl}}/v1.0/getPendingVerificationRequestsReport?businessId=1&channelId=1&duration=24",
															"host": [
																"{{CamUrl}}"
															],
															"path": [
																"v1.0",
																"getPendingVerificationRequestsReport"
															],
															"query": [
																{
																	"key": "businessId",
																	"value": "1"
																},
																{
																	"key": "channelId",
																	"value": "1"
																},
																{
																	"key": "duration",
																	"value": "24"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "getSecurityQuestionChangeReport",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "accept",
																"value": "*/*"
															},
															{
																"key": "Authorization",
																"value": "Bearer {{BoToken}}"
															}
														],
														"url": {
															"raw": "https://cam-backend.sapidblue.in/v1.0/getSecurityQuestionChangeReport?businessId=1&channelId=1&endDate=2022-10-10&startDate=2022-10-03",
															"protocol": "https",
															"host": [
																"cam-backend",
																"sapidblue",
																"in"
															],
															"path": [
																"v1.0",
																"getSecurityQuestionChangeReport"
															],
															"query": [
																{
																	"key": "businessId",
																	"value": "1"
																},
																{
																	"key": "channelId",
																	"value": "1"
																},
																{
																	"key": "endDate",
																	"value": "2022-10-10"
																},
																{
																	"key": "startDate",
																	"value": "2022-10-03"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "getUserPerformanceReportForKYC",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "accept",
																"value": "*/*"
															},
															{
																"key": "Authorization",
																"value": "Bearer {{BoToken}}"
															}
														],
														"url": {
															"raw": "{{CamUrl}}/v1.0/getUserPerformanceReportForKYC?businessId=1&channelId=1&fromDate=2022-10-03&toDate=2022-10-10",
															"host": [
																"{{CamUrl}}"
															],
															"path": [
																"v1.0",
																"getUserPerformanceReportForKYC"
															],
															"query": [
																{
																	"key": "businessId",
																	"value": "1"
																},
																{
																	"key": "channelId",
																	"value": "1"
																},
																{
																	"key": "fromDate",
																	"value": "2022-10-03"
																},
																{
																	"key": "toDate",
																	"value": "2022-10-10"
																}
															]
														}
													},
													"response": []
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "PAYPR_CONSUMER RESOURCES",
							"item": [
								{
									"name": "CONSUMER_REGISTRATION_ADVANCED",
									"item": [
										{
											"name": "getConfigValues",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{UcmUrl}}/getConfigValues",
													"host": [
														"{{UcmUrl}}"
													],
													"path": [
														"getConfigValues"
													]
												}
											},
											"response": []
										},
										{
											"name": "PEP_Consumer_Registration_Step_1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															" var jsonData = JSON.parse(responseBody);",
															" pm.environment.set(\"requestId\",jsonData.data.id);",
															"",
															"",
															"",
															"",
															"",
															"",
															"",
															"",
															"",
															"// if(+jsonData.errorCode===0)",
															"// \t{      ",
															"// \t pm.environment.set(\"requestId\",jsonData.data.id);",
															"// \t  pm.test(\"errorMsg I am getting from API is =\"+jsonData.errorMessage,",
															"//       function () {pm.expect(jsonData.errorMessage).to.eql(\"Success\")});",
															"//       postman.setNextRequest(\"Step two Business Info advanced org Registration\");",
															"    ",
															"//     } else{ pm.test(\"errorMsg I am getting from API is =\"+jsonData.errorMessage,",
															"",
															"// \tfunction () {pm.expect(+jsonData.errorMessage).to.eql(\"Success\")});pm.test(\"errorCode I am getting from API is =\"+jsonData.errorCode,",
															"",
															"// \tfunction () {pm.expect(+jsonData.errorCode).to.eql(0)});",
															"//     postman.setNextRequest(null);",
															"",
															"// \t}"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data",
														"type": "text"
													},
													{
														"key": "clientCode",
														"value": "CAM",
														"type": "text"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "requestType",
															"value": "PEP",
															"description": "PEP,IDENTITY,EMPLOYMENT,BANKING",
															"type": "text"
														},
														{
															"key": "isPep",
															"value": "NO",
															"type": "text"
														},
														{
															"key": "aliasName",
															"value": "{{paypr}}",
															"type": "text"
														},
														{
															"key": "requestId",
															"value": "{{requestId}}",
															"type": "text",
															"disabled": true
														}
													]
												},
												"url": {
													"raw": "{{CamUrl}}/preLogin/consumerRegistrationVerification",
													"host": [
														"{{CamUrl}}"
													],
													"path": [
														"preLogin",
														"consumerRegistrationVerification"
													]
												}
											},
											"response": []
										},
										{
											"name": "IDENTITY_Consumer_Registration_Step_2",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															" pm.environment.set(\"emailId\", \"rishabh14.\" +pm.environment.get(\"Iteration\")+\"@sapidblue.com\");",
															" pm.environment.set(\"mobileNo\", +pm.environment.get(\"mobileNo\")+1);",
															" pm.environment.set(\"Iteration\", +pm.environment.get(\"Iteration\")+1);",
															" ",
															"",
															"// var rnd = Math.floor((Math.random() * 10000) + 1);",
															"// postman.setEnvironmentVariable(\"emailId\", \"test\"+ rnd + \"@gmail.com\");",
															"// postman.setEnvironmentVariable(\"username\", \"testuser\"+ rnd);",
															"",
															"// // CREATE Automation oN MOBILENUMBER",
															"// var num= +pm.environment.get(\"mobileNumber\");",
															"// num= num+1;",
															"// pm.environment.set(\"mobileNumber\", num);",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {
													"content-type": true
												}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text"
													},
													{
														"key": "clientCode",
														"value": "CAM",
														"type": "text"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "requestType",
															"value": "IDENTITY",
															"description": "PEP,IDENTITY,EMPLOYMENT,BANKING",
															"type": "text"
														},
														{
															"key": "aliasName",
															"value": "{{paypr}}",
															"type": "text"
														},
														{
															"key": "requestId",
															"value": "{{requestId}}",
															"type": "text"
														},
														{
															"key": "firstName",
															"value": "Consumer{{Iteration}}",
															"type": "text"
														},
														{
															"key": "lastName",
															"value": "User",
															"type": "text"
														},
														{
															"key": "emailId",
															"value": "{{emailId}}",
															"type": "text"
														},
														{
															"key": "mobileNo",
															"value": "{{mobileNo}}",
															"type": "text"
														},
														{
															"key": "dob",
															"value": "1996-02-02",
															"type": "text"
														},
														{
															"key": "addressOne",
															"value": "address one",
															"type": "text"
														},
														{
															"key": "addressTwo",
															"value": "address two",
															"type": "text"
														},
														{
															"key": "cityCode",
															"value": "TT-SG-CL",
															"type": "text"
														},
														{
															"key": "stateCode",
															"value": "TT-SG",
															"type": "text"
														},
														{
															"key": "documents[0].docType",
															"value": "ID_PROOF",
															"type": "text"
														},
														{
															"key": "documents[0].image",
															"type": "file",
															"src": "/Users/apoorvgupta/Downloads/image_2023_04_11T12_54_07_804Z.png"
														},
														{
															"key": "documents[1].docType",
															"value": "ADDRESS_PROOF",
															"type": "text"
														},
														{
															"key": "documents[1].image",
															"type": "file",
															"src": "/Users/apoorvgupta/Downloads/image_2023_04_11T12_54_07_804Z.png"
														},
														{
															"key": "mobileCode",
															"value": "+1868",
															"type": "text"
														},
														{
															"key": "countryCode",
															"value": "TT",
															"type": "text"
														},
														{
															"key": "middleName",
															"value": "test",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{CamUrl}}/preLogin/consumerRegistrationVerification",
													"host": [
														"{{CamUrl}}"
													],
													"path": [
														"preLogin",
														"consumerRegistrationVerification"
													]
												}
											},
											"response": []
										},
										{
											"name": "EMPLOYMENT_Consumer_Registration_Step_3",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"if(+jsonData.errorCode===0)",
															"\t{      ",
															"\t pm.environment.set(\"requestId\",jsonData.data.id);",
															"\t  pm.test(\"errorMsg I am getting from API is =\"+jsonData.errorMessage,",
															"      function () {pm.expect(jsonData.errorMessage).to.eql(\"Success\")});",
															"      postman.setNextRequest(\"Step two Business Info advanced org Registration\");",
															"    ",
															"    } else{ pm.test(\"errorMsg I am getting from API is =\"+jsonData.errorMessage,",
															"",
															"\tfunction () {pm.expect(+jsonData.errorMessage).to.eql(\"Success\")});pm.test(\"errorCode I am getting from API is =\"+jsonData.errorCode,",
															"",
															"\tfunction () {pm.expect(+jsonData.errorCode).to.eql(0)});",
															"    postman.setNextRequest(null);",
															"",
															"\t}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": " multipart/form-data",
														"type": "text"
													},
													{
														"key": "clientCode",
														"value": "CAM",
														"type": "text"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "requestType",
															"value": "EMPLOYMENT",
															"description": "PEP,IDENTITY,EMPLOYMENT,BANKING",
															"type": "text"
														},
														{
															"key": "aliasName",
															"value": "{{paypr}}",
															"type": "text"
														},
														{
															"key": "requestId",
															"value": "{{requestId}}",
															"type": "text"
														},
														{
															"key": "occupationType",
															"value": "Self-Employed/Freelancer",
															"description": "Employed, Unemployed,Self-Employed/Freelancer",
															"type": "text"
														},
														{
															"key": "employeeName",
															"value": "Adam",
															"type": "text"
														},
														{
															"key": "minMonthlyIncome",
															"value": "0",
															"type": "text"
														},
														{
															"key": "maxMonthlyIncome",
															"value": "2001",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{CamUrl}}/preLogin/consumerRegistrationVerification",
													"host": [
														"{{CamUrl}}"
													],
													"path": [
														"preLogin",
														"consumerRegistrationVerification"
													]
												}
											},
											"response": []
										},
										{
											"name": "BANKING_Consumer_Registration_Step_4",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data",
														"type": "text"
													},
													{
														"key": "clientCode",
														"value": "CAM",
														"type": "text"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "requestType",
															"value": "BANKING",
															"type": "text"
														},
														{
															"key": "aliasName",
															"value": "{{paypr}}",
															"type": "text"
														},
														{
															"key": "requestId",
															"value": "{{requestId}}",
															"type": "text"
														},
														{
															"key": "bankName",
															"value": "Punjab National",
															"type": "text"
														},
														{
															"key": "accountNumber",
															"value": "3584000100336320",
															"type": "text"
														},
														{
															"key": "accountType",
															"value": "SAVINGS",
															"type": "text"
														},
														{
															"key": "routingNumber",
															"value": "GB998877665",
															"type": "text"
														},
														{
															"key": "beneficiaryName",
															"value": "Rishabh",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{CamUrl}}/preLogin/consumerRegistrationVerification",
													"host": [
														"{{CamUrl}}"
													],
													"path": [
														"preLogin",
														"consumerRegistrationVerification"
													]
												}
											},
											"response": []
										},
										{
											"name": "preLogin/sendRegOtp_Cunsumer_step_5",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// let swicthCaseIteration= +pm.environment.get(\"swicthCaseIteration\");\r",
															"// switch(swicthCaseIteration) {\r",
															"//   case 0:\r",
															"//   pm.environment.set(\"mobileNo\",  +pm.environment.get(\"mobileNo\"));\r",
															"//   break;\r",
															"//     case 1:\r",
															"// \t pm.environment.set(\"mobileNo\", +pm.environment.get(\"mobileNo\")+1);\r",
															"\r",
															"//      pm.environment.set(\"Iteration\", +pm.environment.get(\"Iteration\")+1); \r",
															"//      pm.environment.set(\"rsaId\", +pm.environment.get(\"rsaId\")+1);\r",
															"//     break;\r",
															"//  }"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															" var jsonData = JSON.parse(responseBody);\r",
															"  pm.environment.set(\"mobVerificationCode\", jsonData.data.mobVerificationCode);\r",
															"  pm.environment.set(\"emailVerificationCode\", jsonData.data.emailVerificationCode);\r",
															"//setTimeout(function(){}, 3500);\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"// function ByDefaultaliasTest() {\r",
															"//     pm.test(\"[ByDefault_AliasOne] domainId I am getting from Api is= \" +jsonData.responseData.data[0].domainId, function () {pm.expect(jsonData.responseData.data[0].domainId).to.eql(+pm.environment.get(\"domainId\"))})\r",
															"//     pm.test(\"[ByDefault_AliasOne] aliasId I am getting from Api is= \" +jsonData.responseData.data[0].aliasId, function () {pm.expect(jsonData.responseData.data[0].aliasId).to.eql(+pm.collectionVariables.get(\"aliasId_default\"))})\r",
															"//     pm.test(\"[ByDefault_AliasOne] status I am getting from Api is=\" +jsonData.responseData.data[0].status, function () {pm.expect(jsonData.responseData.data[0].status).to.eql(\"ACTIVE\")})\r",
															"// //     pm.test(\"[ByDefault_AliasOne] aliasName I am getting from Api is= \" +jsonData.responseData.data[0].aliasName, function () {pm.expect(jsonData.responseData.data[0].aliasName).to.eql(\"AliasOne\"+pm.environment.get(\"i\")+\".com\")}) }\r",
															"// // function CreatedaliasTest()  {\r",
															"// //       pm.test(\"[Created_AliasTwo] domainId I am getting from Api is= \" +jsonData.responseData.data[jsonData.responseData.data.length-1].domainId, function () {pm.expect(jsonData.responseData.data[jsonData.responseData.data.length-1].domainId).to.eql(+pm.environment.get(\"domainId\"))})\r",
															"// //     pm.test(\"[Created_AliasTwo] aliasId I am getting from Api is= \" +jsonData.responseData.data[jsonData.responseData.data.length-1].aliasId, function () {pm.expect(jsonData.responseData.data[jsonData.responseData.data.length-1].aliasId).to.eql(+pm.collectionVariables.get(\"aliasId_2\"))})\r",
															"// //     pm.test(\"[Created_AliasTwo] status I am getting from Api is=\" +jsonData.responseData.data[jsonData.responseData.data.length-1].status, function () {pm.expect(jsonData.responseData.data[jsonData.responseData.data.length-1].status).to.eql(\"ACTIVE\")})\r",
															"// //     pm.test(\"[Created_AliasTwo] aliasName I am getting from Api is= \" +jsonData.responseData.data[jsonData.responseData.data.length-1].aliasName, function () {pm.expect(jsonData.responseData.data[jsonData.responseData.data.length-1].aliasName).to.eql(\"AliasTwo\"+\"[\"+pm.environment.get(\"domainId\")+\"]\"+\".\"+\"in\")}) }\r",
															"// // let swicthCaseIteration= +pm.environment.get(\"swicthCaseIteration\");\r",
															"// // if (+jsonData.responseData.statusCode === 0 && swicthCaseIteration===0)  {\r",
															"// //  pm.test(\"-------------------------1.Positive scenario Of getAlias api if data gets with valid domainid. --------------------------------\");\r",
															"// //  eval(pm.environment.get(\"IfTestCase\"))();\r",
															"// //  pm.collectionVariables.set(\"aliasId_default\", jsonData.responseData.data[0].aliasId);\r",
															"// //  pm.collectionVariables.set(\"aliasId_2\", jsonData.responseData.data[1].aliasId);\r",
															"// //  pm.collectionVariables.set(\"aliasName_default\", jsonData.responseData.data[0].aliasName);\r",
															"// //  pm.collectionVariables.set(\"aliasName_2\", jsonData.responseData.data[1].aliasName);\r",
															"// //  pm.test(\"Message I am getting from Api is= \" +jsonData.responseData.message, function () {pm.expect(jsonData.responseData.message).to.eql(\"Success\")})\r",
															"// //  pm.test(\"Status Code I am getting from Api is= \" +jsonData.responseData.statusCode, function () {pm.expect(+jsonData.responseData.statusCode).to.eql(0)})\r",
															"// //  ByDefaultaliasTest(); \r",
															"// //  CreatedaliasTest();\r",
															"// //  pm.environment.set(\"swicthCaseIteration\",swicthCaseIteration+1);\r",
															"// //  postman.setNextRequest(\"getAlias\");  }\r",
															"// // else if(+jsonData.responseData.statusCode === 0 && swicthCaseIteration===1  ) {\r",
															"// //  pm.test(\"-------------------------2.[ByDefault_AliasOne] Positive scenario Of getAlias api if data gets with valid domainid and AliasName.--------------------------------\");\r",
															"// //  eval(pm.environment.get(\"IfTestCase\"))();\r",
															"// //  pm.test(\"Message I am getting from Api is= \" +jsonData.responseData.message, function () { pm.expect(jsonData.responseData.message).to.eql(\"Success\")})\r",
															"// //  pm.test(\"Status Code I am getting from Api is= \" +jsonData.responseData.statusCode, function () {pm.expect(+jsonData.responseData.statusCode).to.eql(0)})\r",
															"// //  ByDefaultaliasTest();\r",
															"// //  pm.environment.set(\"swicthCaseIteration\", swicthCaseIteration+1);\r",
															"// //  postman.setNextRequest(\"getAlias\")  }\r",
															"// // else if(+jsonData.responseData.statusCode === 0 && swicthCaseIteration===2 ) {\r",
															"// //  pm.test(\"-------------------------3.[Created_AliasTwo] Positive scenario Of getAlias Api if data gets with valid domainid and AliasName. --------------------------------\");\r",
															"// //  eval(pm.environment.get(\"IfTestCase\"))();\r",
															"// //  pm.test(\"Message I am getting from Api is= \" +jsonData.responseData.message, function () { pm.expect(jsonData.responseData.message).to.eql(\"Success\")})\r",
															"// //  pm.test(\"Status Code I am getting from Api is= \" +jsonData.responseData.statusCode, function () {pm.expect(+jsonData.responseData.statusCode).to.eql(0)})\r",
															"// //  CreatedaliasTest();\r",
															"// //  pm.environment.set(\"swicthCaseIteration\", swicthCaseIteration+1);\r",
															"// //  postman.setNextRequest(\"getAlias\")  }\r",
															"// // else if(+jsonData.responseData.statusCode !== 0 && swicthCaseIteration===3) {\r",
															"// //  pm.test(\"-------------------------4.Negative scenario Of getAlias api If Domainid is Empty.--------------------------------\");\r",
															"// //  eval(pm.environment.get(\"IfTestCase\"))();\r",
															"// //  pm.test(\"Message I am getting from Api is= \" +jsonData.responseData.message, function () { pm.expect(jsonData.responseData.message).to.eql(\"Please Provide Valid Domain Id.\")})\r",
															"// //  pm.test(\"Status Code I am getting from Api is= \" +jsonData.responseData.statusCode, function () {pm.expect(+jsonData.responseData.statusCode).to.eql(133)})\r",
															"// //  pm.environment.set(\"swicthCaseIteration\", swicthCaseIteration+1);\r",
															"// //  postman.setNextRequest(\"getAlias\")  }\r",
															"// // else if(+jsonData.responseData.statusCode !== 0 && swicthCaseIteration===4) {\r",
															"// //  pm.test(\"-------------------------5.Negative scenario Of getAlias api if domain id does not exist in Database.--------------------------------\");\r",
															"// //  eval(pm.environment.get(\"IfTestCase\"))();\r",
															"// //  pm.test(\"Message I am getting from Api is= \" +jsonData.responseData.message, function () { pm.expect(jsonData.responseData.message).to.eql(\"Please Provide Valid Domain.\")})\r",
															"// //  pm.test(\"Status Code I am getting from Api is= \" +jsonData.responseData.statusCode, function () {pm.expect(+jsonData.responseData.statusCode).to.eql(802)})\r",
															"// //  pm.environment.set(\"swicthCaseIteration\", swicthCaseIteration+1);\r",
															"//  postman.setNextRequest(\"getAlias\")  }\r",
															"// else if(+jsonData.responseData.statusCode !== 0 && swicthCaseIteration===5) {\r",
															"//  pm.test(\"-------------------------6.Negative scenario Of getAlias api if AliasName does not exist in Database.--------------------------------\");\r",
															"//  eval(pm.environment.get(\"IfTestCase\"))();\r",
															"//  pm.test(\"Message I am getting from Api is= \" +jsonData.responseData.message, function () { pm.expect(jsonData.responseData.message).to.eql(\"No Alias Exist.\")})\r",
															"//  pm.test(\"Status Code I am getting from Api is= \" +jsonData.responseData.statusCode, function () {pm.expect(+jsonData.responseData.statusCode).to.eql(6907)})\r",
															"//  pm.environment.set(\"swicthCaseIteration\", 0);\r",
															"//  postman.setNextRequest(\"updateAlias\")  }\r",
															"// else if(+jsonData.responseData.statusCode === 0 && swicthCaseIteration=== 6) {\r",
															"//  pm.test(\"-------------------------[Validate Update Alias,api Value] Validate update api,s response {status, AliasName} by using of get alias api,s--------------------------------\");\r",
															"//  eval(pm.environment.get(\"IfTestCase\"))();\r",
															"//  pm.test(\"[ByDefault_AliasOne] domainId I am getting from Api is= \" +jsonData.responseData.data[0].domainId, function () {pm.expect(jsonData.responseData.data[0].domainId).to.eql(+pm.environment.get(\"domainId\"))})\r",
															"//  pm.test(\"[ByDefault_AliasOne] aliasId I am getting from Api is= \" +jsonData.responseData.data[0].aliasId, function () {pm.expect(jsonData.responseData.data[0].aliasId).to.eql(+pm.collectionVariables.get(\"aliasId_default\"))})\r",
															"//  pm.test(\"[ByDefault_AliasOne] status I am getting from Api is=\" +jsonData.responseData.data[0].status, function () {pm.expect(jsonData.responseData.data[0].status).to.eql(pm.collectionVariables.get(\"status_default\"))})\r",
															"//  pm.test(\"[ByDefault_AliasOne] aliasName I am getting from Api is= \" +jsonData.responseData.data[0].aliasName, function () {pm.expect(jsonData.responseData.data[0].aliasName).to.eql(pm.collectionVariables.get(\"aliasName_default\"))}) \r",
															"//  pm.test(\"[Created_AliasTwo] domainId I am getting from Api is= \" +jsonData.responseData.data[jsonData.responseData.data.length-1].domainId, function () {pm.expect(jsonData.responseData.data[jsonData.responseData.data.length-1].domainId).to.eql(+pm.environment.get(\"domainId\"))})\r",
															"//  pm.test(\"[Created_AliasTwo] aliasId I am getting from Api is= \" +jsonData.responseData.data[jsonData.responseData.data.length-1].aliasId, function () {pm.expect(jsonData.responseData.data[jsonData.responseData.data.length-1].aliasId).to.eql(+pm.collectionVariables.get(\"aliasId_2\"))})\r",
															"//  pm.test(\"[Created_AliasTwo] status I am getting from Api is=\" +jsonData.responseData.data[jsonData.responseData.data.length-1].status, function () {pm.expect(jsonData.responseData.data[jsonData.responseData.data.length-1].status).to.eql(pm.collectionVariables.get(\"status_2\"))})\r",
															"//  pm.test(\"[Created_AliasTwo] aliasName I am getting from Api is= \" +jsonData.responseData.data[jsonData.responseData.data.length-1].aliasName, function () {pm.expect(jsonData.responseData.data[jsonData.responseData.data.length-1].aliasName).to.eql(pm.collectionVariables.get(\"aliasName_2\"))}) \r",
															"//  pm.collectionVariables.set(\"Updatecount\", +pm.collectionVariables.get(\"Updatecount\")+1);\r",
															"//  pm.environment.set(\"swicthCaseIteration\", +pm.collectionVariables.get(\"Updatecount\"));\r",
															"//  postman.setNextRequest(\"updateAlias\")  }\r",
															"// else  { eval(pm.environment.get(\"ElseTestCase\"))();\r",
															"//    pm.collectionVariables.set(\"Updatecount\", 0);\r",
															"//    pm.environment.set(\"swicthCaseIteration\", 0);}"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "clientCode",
														"value": "CAM",
														"description": "(Required) Merchant Code"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{CamUrl}}/preLogin/sendRegOtp?emailId={{emailId}}&mobileNo={{mobileNo}}&aliasName={{paypr}}&type=MOBILE&mobileCode=%2B1868",
													"host": [
														"{{CamUrl}}"
													],
													"path": [
														"preLogin",
														"sendRegOtp"
													],
													"query": [
														{
															"key": "emailId",
															"value": "{{emailId}}",
															"description": "emailId"
														},
														{
															"key": "mobileNo",
															"value": "{{mobileNo}}"
														},
														{
															"key": "aliasName",
															"value": "{{paypr}}"
														},
														{
															"key": "type",
															"value": "MOBILE"
														},
														{
															"key": "mobileCode",
															"value": "%2B1868"
														}
													]
												},
												"description": "********Table*************\r\nRAM-  `SELECT*FROM `st_ram_plr_reg_otp_data` \r\n"
											},
											"response": []
										},
										{
											"name": "advancePlayerRegistration",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															" var jsonData = JSON.parse(responseBody);\r",
															"pm.environment.set(\"consumerToken\", jsonData.data.consumerToken);\r",
															"pm.environment.set(\"consumerId\",jsonData.data.consumerLoginInfo.consumerId);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "clientCode",
														"value": "CAM",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": " {\r\n      \"aliasName\": \"{{paypr}}\",\r\n      \"otp\":\"{{mobVerificationCode}}\",\r\n      \"requestId\":{{requestId}},\r\n      \"emailId\": \"{{emailId}}\",\r\n      \"mobileNo\":\"{{mobileNo}}\",\r\n      \"deviceType\": \"PC\",\r\n      \"mobileCode\":\"+1868\",\r\n      \"loginDevice\": \"PC_BROWSER\",\r\n     \"userAgent\": \"NA\",\r\n      \"requestIp\": \"132.154.253.254\",\r\n      \"type\": \"MOBILE\"\r\n   }\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{CamUrl}}/preLogin/advanceConsumerRegistration",
													"host": [
														"{{CamUrl}}"
													],
													"path": [
														"preLogin",
														"advanceConsumerRegistration"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Consumer_Login_Password_Get_Deatils_Consumer",
									"item": [
										{
											"name": "Consumer_Login_LOGOUT",
											"item": [
												{
													"name": "Set_Consumer_Password Copy 2",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PATCH",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n\"password\":\"25d55ad283aa400af464c76d713c07ad\"\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "http://localhost:3000/api/sb_cam_consumer_master/{{consumerId}}",
															"protocol": "http",
															"host": [
																"localhost"
															],
															"port": "3000",
															"path": [
																"api",
																"sb_cam_consumer_master",
																"{{consumerId}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "playerLogin PC BROWSER",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	" var jsonData = JSON.parse(responseBody);\r",
																	"pm.environment.set(\"consumerToken\", jsonData.data.consumerToken);\r",
																	"pm.environment.set(\"consumerId\",jsonData.data.consumerLoginInfo.consumerId);\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"var loginToken = \"Rishabh\";\r",
																	"var password_Ecyrpt = pm.environment.get(\"password_Ecyrpt\")\r",
																	"var password = CryptoJS.MD5(password_Ecyrpt+loginToken).toString();\r",
																	"pm.variables.set('loginToken', loginToken);\r",
																	"pm.environment.set('password', password);\r",
																	"\r",
																	"//console.log(password);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "clientCode",
																"value": "CAM",
																"description": "(Required) Merchant Code"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"aliasName\": \"{{paypr}}\",\n    \"device\": \"PC\",\n    \"loginToken\": \"{{loginToken}}\",\n    \"password\": \"{{password}}\",\n    \"requestIp\":  \"132.154.253.254\",\n    \"userAgent\": null,\n    \"userName\": \"8877866644\",\n    \"mobileCode\":\"+91\",\n    \"ussd\": false\n}\n\n"
														},
														"url": {
															"raw": "{{CamUrl}}/preLogin/consumerLogin",
															"host": [
																"{{CamUrl}}"
															],
															"path": [
																"preLogin",
																"consumerLogin"
															]
														}
													},
													"response": []
												},
												{
													"name": "playerLogin IOS login",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"var loginToken = \"RishabhAndroid\";\r",
																	"var password_Ecyrpt = pm.environment.get(\"password_Ecyrpt\")\r",
																	"var password = CryptoJS.MD5(password_Ecyrpt+loginToken).toString();\r",
																	"pm.variables.set('loginToken', loginToken);\r",
																	"pm.environment.set('password', password);"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	" var jsonData = JSON.parse(responseBody);\r",
																	"pm.environment.set(\"consumerToken\", jsonData.data.playerToken);\r",
																	"pm.environment.set(\"consumerId\",jsonData.data.playerLoginInfo.playerId);\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "merchantCode",
																"value": "INFINITI",
																"description": "(Required) Merchant Code"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"currAppVer\": \"2.7\",\n    \"deviceType\": \"MOBILE\",\n    \"domainName\": \"{{DomainName}}\",\n    \"fcmIdAndroid\": null,\n    \"fcmIdIos\": \"14edfghjudfghjiuihjkjhgh\",\n    \"loginDevice\": \"IOS_APP_CASH\",\n    \"loginToken\": \"{{loginToken}}\",\n    \"password\": \"{{password}}\",\n    \"requestIp\": \"127.0.0.1\",\n    \"userAgent\": \"NA\",\n    \"userName\": \"600000022\",\n    \"ussd\": false\n}"
														},
														"url": {
															"raw": "{{CamUrl}}/preLogin/playerLogin",
															"host": [
																"{{CamUrl}}"
															],
															"path": [
																"preLogin",
																"playerLogin"
															]
														}
													},
													"response": []
												},
												{
													"name": "playerLogin Android Login",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"var loginToken = \"RishabhIos\";\r",
																	"var password_Ecyrpt = pm.environment.get(\"password_Ecyrpt\")\r",
																	"var password = CryptoJS.MD5(password_Ecyrpt+loginToken).toString();\r",
																	"pm.variables.set('loginToken', loginToken);\r",
																	"pm.variables.set('password', password);"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	" var jsonData = JSON.parse(responseBody);\r",
																	"pm.environment.set(\"consumerToken\", jsonData.data.playerToken);\r",
																	"pm.environment.set(\"consumerId\",jsonData.data.playerLoginInfo.playerId);\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "merchantCode",
																"value": "INFINITI",
																"description": "(Required) Merchant Code"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"currAppVer\": \"2.5\",\n  \"deviceType\": \"MOBILE\",\n  \"domainName\": \"{{DomainName}}\",\n  \"fcmIdAndroid\": \"uyedfghjudfghjiuihjkjhgh\",\n  \"fcmIdIos\": null,\n  \"loginDevice\": \"ANDROID_APP_CASH\",\n  \"loginToken\": \"{{loginToken}}\",\n  \"password\": \"{{password}}\",\n  \"requestIp\": \"127.0.0.1\",\n  \"userAgent\": \"NA\",\n  \"userName\": \"{{mobileNo}}\",\n  \"ussd\": false\n}"
														},
														"url": {
															"raw": "{{CamUrl}}/preLogin/playerLogin",
															"host": [
																"{{CamUrl}}"
															],
															"path": [
																"preLogin",
																"playerLogin"
															]
														}
													},
													"response": []
												},
												{
													"name": "Player_logout",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "accept",
																"value": "*/*",
																"type": "text"
															},
															{
																"key": "userId",
																"value": "{{consumerId}}",
																"type": "text"
															},
															{
																"key": "userToken",
																"value": "{{consumerToken}}",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "aliasName",
																"value": "{{paypr}}",
																"type": "text"
															}
														],
														"url": {
															"raw": "{{CamUrl}}/postLogin/logout",
															"host": [
																"{{CamUrl}}"
															],
															"path": [
																"postLogin",
																"logout"
															]
														}
													},
													"response": []
												},
												{
													"name": "checkLoginStatus",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "accept",
																"value": "*/*"
															},
															{
																"key": "userId",
																"value": "{{consumerId}}"
															},
															{
																"key": "userToken",
																"value": "{{consumerToken}}"
															},
															{
																"key": "aliasName",
																"value": "{{paypr}}",
																"type": "text"
															}
														],
														"url": {
															"raw": "{{CamUrl}}/postLogin/checkLoginStatus",
															"host": [
																"{{CamUrl}}"
															],
															"path": [
																"postLogin",
																"checkLoginStatus"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Forgot_Change_Password",
											"item": [
												{
													"name": "initiateForgotPassword",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "accept",
																"value": "*/*"
															},
															{
																"key": "clientCode",
																"value": "CAM"
															}
														],
														"url": {
															"raw": "{{CamUrl}}/preLogin/initiateForgotPassword?aliasName={{paypr}}&emailId={{emailId}}&mobileNumber={{mobileNo}}&type=EMAIL&mobileCode=%2B91",
															"host": [
																"{{CamUrl}}"
															],
															"path": [
																"preLogin",
																"initiateForgotPassword"
															],
															"query": [
																{
																	"key": "aliasName",
																	"value": "{{paypr}}"
																},
																{
																	"key": "emailId",
																	"value": "{{emailId}}"
																},
																{
																	"key": "mobileNumber",
																	"value": "{{mobileNo}}"
																},
																{
																	"key": "type",
																	"value": "EMAIL"
																},
																{
																	"key": "mobileCode",
																	"value": "%2B91"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "resetPassword",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"// pending testcase-- in case of mobile otp and type should be mobile update instead of forgot password."
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "accept",
																"value": "*/*"
															},
															{
																"key": "clientCode",
																"value": "CAM"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"confirmNewPassword\": 12345678,\n    \"aliasName\": \"{{paypr}}\",\n    \"emailId\": \"{{emailId}}\",\n    \"newPassword\": 12345678,\n    \"otp\": \"204210\"\n}"
														},
														"url": {
															"raw": "{{CamUrl}}/preLogin/resetPassword",
															"host": [
																"{{CamUrl}}"
															],
															"path": [
																"preLogin",
																"resetPassword"
															]
														}
													},
													"response": []
												},
												{
													"name": "initiateForgotPassword",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "accept",
																"value": "*/*"
															},
															{
																"key": "clientCode",
																"value": "CAM"
															}
														],
														"url": {
															"raw": "{{CamUrl}}/preLogin/initiateForgotPassword?aliasName={{paypr}}&emailId={{emailId}}&mobileCode=%2B91&mobileNumber={{mobileNo}}&type=MOBILE",
															"host": [
																"{{CamUrl}}"
															],
															"path": [
																"preLogin",
																"initiateForgotPassword"
															],
															"query": [
																{
																	"key": "aliasName",
																	"value": "{{paypr}}"
																},
																{
																	"key": "emailId",
																	"value": "{{emailId}}"
																},
																{
																	"key": "mobileCode",
																	"value": "%2B91"
																},
																{
																	"key": "mobileNumber",
																	"value": "{{mobileNo}}"
																},
																{
																	"key": "type",
																	"value": "MOBILE"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "resetPassword",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "accept",
																"value": "*/*"
															},
															{
																"key": "clientCode",
																"value": "CAM"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"aliasName\": \"{{paypr}}\",\n    \"confirmNewPassword\": \"12345678\",\n    \"mobileCode\": \"+91\",\n    \"emailId\":null,\n    \"mobileNumber\": {{mobileNo}},\n    \"newPassword\": \"12345678\",\n    \"otp\": \"605662\"\n}"
														},
														"url": {
															"raw": "{{CamUrl}}/preLogin/resetPassword",
															"host": [
																"{{CamUrl}}"
															],
															"path": [
																"preLogin",
																"resetPassword"
															]
														}
													},
													"response": []
												},
												{
													"name": "sendRegOtp",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "accept",
																"value": "*/*"
															},
															{
																"key": "clientCode",
																"value": "CAM"
															}
														],
														"url": {
															"raw": "{{CamUrl}}/preLogin/sendRegOtp?aliasName={{paypr}}&emailId={{emailId}}&mobileCode=%2B91&mobileNo={{mobileNo}}&type=MOBILE",
															"host": [
																"{{CamUrl}}"
															],
															"path": [
																"preLogin",
																"sendRegOtp"
															],
															"query": [
																{
																	"key": "aliasName",
																	"value": "{{paypr}}"
																},
																{
																	"key": "emailId",
																	"value": "{{emailId}}"
																},
																{
																	"key": "mobileCode",
																	"value": "%2B91"
																},
																{
																	"key": "mobileNo",
																	"value": "{{mobileNo}}"
																},
																{
																	"key": "type",
																	"value": "MOBILE"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "changePassword",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "accept",
																"value": "*/*"
															},
															{
																"key": "userId",
																"value": "{{consumerId}}"
															},
															{
																"key": "userToken",
																"value": "{{consumerToken}}"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "aliasName",
																"value": "{{paypr}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"newPassword\": \"12345678\",\n    \"oldPassword\": \"12345678\"\n}"
														},
														"url": {
															"raw": "{{CamUrl}}/postLogin/changePassword",
															"host": [
																"{{CamUrl}}"
															],
															"path": [
																"postLogin",
																"changePassword"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Fetch_Consumer_Data",
											"item": [
												{
													"name": "getAdvanceUserDetails",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "accept",
																"value": "*/*",
																"type": "text"
															},
															{
																"key": "userId",
																"value": "{{consumerId}}",
																"type": "text"
															},
															{
																"key": "userToken",
																"value": "{{consumerToken}}",
																"type": "text"
															},
															{
																"key": "aliasName",
																"value": "{{paypr}}",
																"type": "text"
															}
														],
														"url": {
															"raw": "{{CamUrl}}/postLogin/getAdvanceUserDetails?consumerId={{consumerId}}",
															"host": [
																"{{CamUrl}}"
															],
															"path": [
																"postLogin",
																"getAdvanceUserDetails"
															],
															"query": [
																{
																	"key": "consumerId",
																	"value": "{{consumerId}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "getConsumerDetails",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "accept",
																"value": "*/*"
															},
															{
																"key": "clientCode",
																"value": "CAM"
															},
															{
																"key": "clientPwd",
																"value": "{{clientPwd}}"
															}
														],
														"url": {
															"raw": "{{CamUrl}}/client/getConsumerDetails?businessId=2&channelId=2&mobileCode=%2B91&systemConsumerId={{consumerId}}",
															"host": [
																"{{CamUrl}}"
															],
															"path": [
																"client",
																"getConsumerDetails"
															],
															"query": [
																{
																	"key": "businessId",
																	"value": "2"
																},
																{
																	"key": "channelId",
																	"value": "2"
																},
																{
																	"key": "mobileCode",
																	"value": "%2B91"
																},
																{
																	"key": "mobileNumber",
																	"value": "{{mobileNo}}",
																	"disabled": true
																},
																{
																	"key": "systemConsumerId",
																	"value": "{{consumerId}}"
																},
																{
																	"key": "userName",
																	"value": "{{mobileNo}}",
																	"disabled": true
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "postLogin/getConsumerDetails",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "accept",
																"value": "*/*"
															},
															{
																"key": "aliasName",
																"value": "{{paypr}}"
															},
															{
																"key": "userId",
																"value": "{{consumerId}}"
															},
															{
																"key": "userToken",
																"value": "{{consumerToken}}"
															}
														],
														"url": {
															"raw": "{{CamUrl}}/postLogin/getConsumerDetails?systemConsumerId=415",
															"host": [
																"{{CamUrl}}"
															],
															"path": [
																"postLogin",
																"getConsumerDetails"
															],
															"query": [
																{
																	"key": "bloxmithToken",
																	"value": "312",
																	"disabled": true
																},
																{
																	"key": "businessId",
																	"value": "3123",
																	"disabled": true
																},
																{
																	"key": "channelId",
																	"value": "131",
																	"disabled": true
																},
																{
																	"key": "mobileCode",
																	"value": "23332",
																	"disabled": true
																},
																{
																	"key": "mobileNumber",
																	"value": "1313",
																	"disabled": true
																},
																{
																	"key": "systemConsumerId",
																	"value": "415"
																},
																{
																	"key": "userName",
																	"value": "1313",
																	"disabled": true
																}
															]
														}
													},
													"response": []
												}
											]
										}
									]
								},
								{
									"name": "Consumer_Update_Email_Mobile_Verification",
									"item": [
										{
											"name": "Update_Consumer",
											"item": [
												{
													"name": "PEP_Consumer_Update_Step_1",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	" var jsonData = JSON.parse(responseBody);",
																	" pm.environment.set(\"requestId\",jsonData.data.id);",
																	"",
																	"",
																	"",
																	"",
																	"",
																	"",
																	"",
																	"",
																	"",
																	"// if(+jsonData.errorCode===0)",
																	"// \t{      ",
																	"// \t pm.environment.set(\"requestId\",jsonData.data.id);",
																	"// \t  pm.test(\"errorMsg I am getting from API is =\"+jsonData.errorMessage,",
																	"//       function () {pm.expect(jsonData.errorMessage).to.eql(\"Success\")});",
																	"//       postman.setNextRequest(\"Step two Business Info advanced org Registration\");",
																	"    ",
																	"//     } else{ pm.test(\"errorMsg I am getting from API is =\"+jsonData.errorMessage,",
																	"",
																	"// \tfunction () {pm.expect(+jsonData.errorMessage).to.eql(\"Success\")});pm.test(\"errorCode I am getting from API is =\"+jsonData.errorCode,",
																	"",
																	"// \tfunction () {pm.expect(+jsonData.errorCode).to.eql(0)});",
																	"//     postman.setNextRequest(null);",
																	"",
																	"// \t}"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disabledSystemHeaders": {}
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "multipart/form-data; boundary=<calculated when request is sent>",
																"type": "text"
															},
															{
																"key": "userId",
																"value": "{{consumerId}}",
																"type": "text"
															},
															{
																"key": "userToken",
																"value": "{{consumerToken}}",
																"type": "text"
															},
															{
																"key": "aliasName",
																"value": "{{paypr}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "requestType",
																	"value": "PEP",
																	"description": "PEP,IDENTITY,EMPLOYMENT,BANKING",
																	"type": "text"
																},
																{
																	"key": "isPep",
																	"value": "NO",
																	"type": "text"
																},
																{
																	"key": "consumerId",
																	"value": "{{consumerId}}",
																	"type": "text"
																}
															]
														},
														"url": {
															"raw": "{{CamUrl}}/postLogin/advanceUserUpdate",
															"host": [
																"{{CamUrl}}"
															],
															"path": [
																"postLogin",
																"advanceUserUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "IDENTITY_Consumer_Update_Step_2",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"//  pm.environment.set(\"emailId\", \"rishabh1.\" +pm.environment.get(\"Iteration\")+\"@sapidblue.com\");",
																	"//  pm.environment.set(\"mobileNo\", +pm.environment.get(\"mobileNo\")+1);",
																	"//  pm.environment.set(\"Iteration\", +pm.environment.get(\"Iteration\")+1);",
																	" ",
																	"",
																	"// var rnd = Math.floor((Math.random() * 10000) + 1);",
																	"// postman.setEnvironmentVariable(\"emailId\", \"test\"+ rnd + \"@gmail.com\");",
																	"// postman.setEnvironmentVariable(\"username\", \"testuser\"+ rnd);",
																	"",
																	"// // CREATE Automation oN MOBILENUMBER",
																	"// var num= +pm.environment.get(\"mobileNumber\");",
																	"// num= num+1;",
																	"// pm.environment.set(\"mobileNumber\", num);",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disabledSystemHeaders": {
															"content-type": true
														}
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "multipart/form-data; boundary=<calculated when request is sent>",
																"type": "text"
															},
															{
																"key": "userId",
																"value": "{{consumerId}}",
																"type": "text"
															},
															{
																"key": "userToken",
																"value": "{{consumerToken}}",
																"type": "text"
															},
															{
																"key": "aliasName",
																"value": "{{paypr}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "requestType",
																	"value": "IDENTITY",
																	"description": "PEP,IDENTITY,EMPLOYMENT,BANKING",
																	"type": "text"
																},
																{
																	"key": "aliasName",
																	"value": "{{paypr}}",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "consumerId",
																	"value": "{{consumerId}}",
																	"type": "text"
																},
																{
																	"key": "firstName",
																	"value": "FirstNameUpdate",
																	"type": "text"
																},
																{
																	"key": "lastName",
																	"value": "LastNameUpdated",
																	"type": "text"
																},
																{
																	"key": "emailId",
																	"value": "{{emailId}}",
																	"type": "text"
																},
																{
																	"key": "mobileNo",
																	"value": "2222222",
																	"type": "text"
																},
																{
																	"key": "dob",
																	"value": "1996-02-02",
																	"type": "text"
																},
																{
																	"key": "addressOne",
																	"value": "address one Updated",
																	"type": "text"
																},
																{
																	"key": "addressTwo",
																	"value": "address two Updated",
																	"type": "text"
																},
																{
																	"key": "cityCode",
																	"value": "IN-HR-GO",
																	"type": "text"
																},
																{
																	"key": "stateCode",
																	"value": "IN-HR",
																	"type": "text"
																},
																{
																	"key": "documents[0].docType",
																	"value": "ID_PROOF",
																	"type": "text"
																},
																{
																	"key": "documents[0].image",
																	"type": "file",
																	"src": "/C:/Users/OM SAI/Downloads/image-20221219-102227.png"
																},
																{
																	"key": "documents[1].docType",
																	"value": "ADDRESS_PROOF",
																	"type": "text"
																},
																{
																	"key": "documents[1].image",
																	"type": "file",
																	"src": "/C:/Users/OM SAI/Downloads/image-20221215-093831.png"
																},
																{
																	"key": "mobileCode",
																	"value": "+1868",
																	"type": "text"
																},
																{
																	"key": "countryCode",
																	"value": "IN",
																	"type": "text"
																}
															]
														},
														"url": {
															"raw": "{{CamUrl}}/postLogin/advanceUserUpdate",
															"host": [
																"{{CamUrl}}"
															],
															"path": [
																"postLogin",
																"advanceUserUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "EMPLOYMENT_Consumer_Update_Step_3",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"// var jsonData = JSON.parse(responseBody);",
																	"// if(+jsonData.errorCode===0)",
																	"// \t{      ",
																	"// \t pm.environment.set(\"requestId\",jsonData.data.id);",
																	"// \t  pm.test(\"errorMsg I am getting from API is =\"+jsonData.errorMessage,",
																	"//       function () {pm.expect(jsonData.errorMessage).to.eql(\"Success\")});",
																	"//       postman.setNextRequest(\"Step two Business Info advanced org Registration\");",
																	"    ",
																	"//     } else{ pm.test(\"errorMsg I am getting from API is =\"+jsonData.errorMessage,",
																	"",
																	"// \tfunction () {pm.expect(+jsonData.errorMessage).to.eql(\"Success\")});pm.test(\"errorCode I am getting from API is =\"+jsonData.errorCode,",
																	"",
																	"// \tfunction () {pm.expect(+jsonData.errorCode).to.eql(0)});",
																	"//     postman.setNextRequest(null);",
																	"",
																	"// \t}"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": " multipart/form-data",
																"type": "text"
															},
															{
																"key": "userId",
																"value": "{{consumerId}}",
																"type": "text"
															},
															{
																"key": "userToken",
																"value": "{{consumerToken}}",
																"type": "text"
															},
															{
																"key": "aliasName",
																"value": "{{paypr}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "requestType",
																	"value": "EMPLOYMENT",
																	"description": "PEP,IDENTITY,EMPLOYMENT,BANKING",
																	"type": "text"
																},
																{
																	"key": "consumerId",
																	"value": "{{consumerId}}",
																	"type": "text"
																},
																{
																	"key": "occupationType",
																	"value": "Employed",
																	"type": "text"
																},
																{
																	"key": "employeeName",
																	"value": "Rishabh",
																	"description": "Employed, Unemployed,Self-Employed/Freelancer",
																	"type": "text"
																},
																{
																	"key": "minMonthlyIncome",
																	"value": "1400000000",
																	"type": "text"
																},
																{
																	"key": "maxMonthlyIncome",
																	"value": "5000000000",
																	"type": "text"
																}
															]
														},
														"url": {
															"raw": "{{CamUrl}}/postLogin/advanceUserUpdate",
															"host": [
																"{{CamUrl}}"
															],
															"path": [
																"postLogin",
																"advanceUserUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "BANKING_Consumer_Update_Step_4",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": " multipart/form-data",
																"type": "text"
															},
															{
																"key": "userId",
																"value": "{{consumerId}}",
																"type": "text"
															},
															{
																"key": "userToken",
																"value": "{{consumerToken}}",
																"type": "text"
															},
															{
																"key": "aliasName",
																"value": "{{paypr}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "requestType",
																	"value": "BANKING",
																	"type": "text"
																},
																{
																	"key": "consumerId",
																	"value": "{{consumerId}}",
																	"type": "text"
																},
																{
																	"key": "bankName",
																	"value": "Kotak Bank",
																	"type": "text"
																},
																{
																	"key": "accountNumber",
																	"value": "3584000100336332",
																	"type": "text"
																},
																{
																	"key": "accountType",
																	"value": "SAVINGS",
																	"type": "text"
																},
																{
																	"key": "routingNumber",
																	"value": "NB998877666",
																	"type": "text"
																},
																{
																	"key": "beneficiaryName",
																	"value": "Nehal",
																	"type": "text"
																}
															]
														},
														"url": {
															"raw": "{{CamUrl}}/postLogin/advanceUserUpdate",
															"host": [
																"{{CamUrl}}"
															],
															"path": [
																"postLogin",
																"advanceUserUpdate"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Email_&_Mobile_Verification",
											"item": [
												{
													"name": "SendOtp_Mobile_Verification",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "accept",
																"value": "*/*",
																"type": "text"
															},
															{
																"key": "userId",
																"value": "{{consumerId}}",
																"type": "text"
															},
															{
																"key": "userToken",
																"value": "{{consumerToken}}",
																"type": "text"
															},
															{
																"key": "aliasName",
																"value": "{{paypr}}",
																"type": "text"
															}
														],
														"url": {
															"raw": "{{CamUrl}}/postLogin/sendOtp?mobileCode=%2B1868&mobileNo={{mobileNo}}&otpType=MOBILE_VERIFICATION&resend=YES",
															"host": [
																"{{CamUrl}}"
															],
															"path": [
																"postLogin",
																"sendOtp"
															],
															"query": [
																{
																	"key": "mobileCode",
																	"value": "%2B1868"
																},
																{
																	"key": "mobileNo",
																	"value": "{{mobileNo}}"
																},
																{
																	"key": "otpType",
																	"value": "MOBILE_VERIFICATION"
																},
																{
																	"key": "resend",
																	"value": "YES"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "Get_otp_from_database",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	" var jsonData = JSON.parse(responseBody);\r",
																	"pm.environment.set(\"verification_code\", jsonData[jsonData.length-1].verification_code);"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "GET",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "http://localhost:3000/api/sb_cam_consumer_otp_data?_where=((consumer_id,eq,{{consumerId}}))",
															"protocol": "http",
															"host": [
																"localhost"
															],
															"port": "3000",
															"path": [
																"api",
																"sb_cam_consumer_otp_data"
															],
															"query": [
																{
																	"key": "_where",
																	"value": "((consumer_id,eq,{{consumerId}}))"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "Mobile_verifyOtp",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "accept",
																"value": "*/*",
																"type": "text"
															},
															{
																"key": "userId",
																"value": "{{consumerId}}",
																"type": "text"
															},
															{
																"key": "userToken",
																"value": "{{consumerToken}}",
																"type": "text"
															},
															{
																"key": "aliasName",
																"value": "{{paypr}}",
																"type": "text"
															}
														],
														"url": {
															"raw": "{{CamUrl}}/postLogin/verifyOtp?otp=259852&otpType=MOBILE_VERIFICATION",
															"host": [
																"{{CamUrl}}"
															],
															"path": [
																"postLogin",
																"verifyOtp"
															],
															"query": [
																{
																	"key": "otp",
																	"value": "259852"
																},
																{
																	"key": "otpType",
																	"value": "MOBILE_VERIFICATION"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "sendVerficationEmailLink",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "accept",
																"value": "*/*"
															},
															{
																"key": "userId",
																"value": "{{consumerId}}"
															},
															{
																"key": "userToken",
																"value": "{{consumerToken}}"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "aliasName",
																"value": " {{paypr}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"emailId\": \"{{emailId}}\",\n    \"systemConsumerId\": {{consumerId}},\n    \"type\": \"EMAIL_VERIFICATION\"\n}"
														},
														"url": {
															"raw": "{{CamUrl}}/postLogin/sendVerficationEmailLink",
															"host": [
																"{{CamUrl}}"
															],
															"path": [
																"postLogin",
																"sendVerficationEmailLink"
															]
														}
													},
													"response": []
												},
												{
													"name": "Get_otp_from_database Copy",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	" var jsonData = JSON.parse(responseBody);\r",
																	"pm.environment.set(\"email_verification_code\", jsonData[0].verification_code);"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "GET",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "http://localhost:3000/api/sb_cam_consumer_email_verification_requests?_where=((email_id,eq,{{emailId}}))",
															"protocol": "http",
															"host": [
																"localhost"
															],
															"port": "3000",
															"path": [
																"api",
																"sb_cam_consumer_email_verification_requests"
															],
															"query": [
																{
																	"key": "_where",
																	"value": "((email_id,eq,{{emailId}}))"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "verifyEmailWithOtp",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "accept",
																"value": "*/*"
															},
															{
																"key": "userId",
																"value": "{{consumerId}}"
															},
															{
																"key": "userToken",
																"value": "{{consumerToken}}"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "aliasName",
																"value": "{{paypr}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"emailId\": \"{{emailId}}\",\n    \"otp\": \"869764\"\n}"
														},
														"url": {
															"raw": "{{CamUrl}}/postLogin/verifyEmailWithOtp",
															"host": [
																"{{CamUrl}}"
															],
															"path": [
																"postLogin",
																"verifyEmailWithOtp"
															]
														}
													},
													"response": []
												}
											]
										}
									]
								},
								{
									"name": "Master_Data_Management",
									"item": [
										{
											"name": "checkLoginStatus",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "accept",
														"value": "*/*"
													},
													{
														"key": "userId",
														"value": "{{consumerId}}"
													},
													{
														"key": "userToken",
														"value": "{{consumerToken}}"
													},
													{
														"key": "aliasName",
														"value": "{{paypr}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{CamUrl}}/postLogin/checkLoginStatus",
													"host": [
														"{{CamUrl}}"
													],
													"path": [
														"postLogin",
														"checkLoginStatus"
													]
												}
											},
											"response": []
										},
										{
											"name": "getDocumentTypeList",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "accept",
														"value": "*/*",
														"type": "text"
													},
													{
														"key": "userId",
														"value": "{{consumerId}}",
														"type": "text"
													},
													{
														"key": "userToken",
														"value": "{{consumerToken}}",
														"type": "text"
													},
													{
														"key": "aliasName",
														"value": "{{paypr}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{CamUrl}}/postLogin/getDocumentTypeList?aliasName={{paypr}}",
													"host": [
														"{{CamUrl}}"
													],
													"path": [
														"postLogin",
														"getDocumentTypeList"
													],
													"query": [
														{
															"key": "aliasName",
															"value": "{{paypr}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "getProfileStatus",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "accept",
														"value": "*/*",
														"type": "text"
													},
													{
														"key": "userId",
														"value": "{{consumerId}}",
														"type": "text"
													},
													{
														"key": "userToken",
														"value": "{{consumerToken}}",
														"type": "text"
													},
													{
														"key": "aliasName",
														"value": "{{paypr}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{CamUrl}}/postLogin/getProfileStatus?aliasName={{paypr}}",
													"host": [
														"{{CamUrl}}"
													],
													"path": [
														"postLogin",
														"getProfileStatus"
													],
													"query": [
														{
															"key": "aliasName",
															"value": "{{paypr}}"
														}
													]
												}
											},
											"response": []
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "BackOffice_UserResources",
					"item": [
						{
							"name": "Bo_Token",
							"item": [
								{
									"name": "get/token",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"pm.environment.set(\"BoToken\", jsonData.data.authToken);",
													"pm.environment.set(\"BoUserId\", jsonData.data.userId);",
													"",
													"",
													"",
													"",
													"//      pm.environment.set(\"BoUserId\", jsonData.responseData.userId)",
													"",
													"// let swicthCaseIteration = +pm.environment.get(\"swicthCaseIteration\");",
													"// if (jsonData.responseData.statusCode === 0 && swicthCaseIteration === 0) {",
													"//      pm.test(\"-------------------------1.Positive scenario Of get/token api With valid key Data.--------------------------------\");",
													"//      eval(pm.environment.get(\"IfTestCase\"))();",
													"     ",
													"//      pm.test(\"Message I am getting from Api is= \" + jsonData.responseData.message, function () { pm.expect(jsonData.responseData.message).to.eql(\"Success\") })",
													"// pm.test(\"Message I am getting from Api is= \" + jsonData.responseData.message, function () { pm.expect(jsonData.responseData.message).to.eql(\"Success\") })",
													"// pm.test(\"Status Code I am getting from Api is= \" + jsonData.responseData.statusCode, function () { pm.expect(+jsonData.responseData.statusCode).to.eql(0) })",
													"//      pm.test(\"authToken I am getting from Api is= \" + jsonData.responseData.authToken, function () { pm.expect(+jsonData.responseData.authToken).to.eql(+jsonData.responseData.authToken) })",
													"//      pm.test(\"timestamp I am getting from Api is= \" + jsonData.responseData.timestamp, function () { pm.expect(+jsonData.responseData.timestamp).to.eql(+jsonData.responseData.timestamp) })",
													"//      pm.test(\"expiryTime I am getting from Api is= \" + jsonData.responseData.expiryTime, function () { pm.expect(+jsonData.responseData.expiryTime).to.eql(+jsonData.responseData.expiryTime) })",
													"//      pm.test(\"issueAt I am getting from Api = \" + jsonData.responseData.issueAt, function () { pm.expect(+jsonData.responseData.issueAt).to.eql(+jsonData.responseData.issueAt) })",
													"//      pm.test(\"Login superBo User Id Is=\" + jsonData.responseData.userId);",
													"//      pm.test(\"passwordExpired is= \" + jsonData.responseData.passwordExpired, function () { pm.expect(jsonData.responseData.passwordExpired).to.eql(false) })",
													"//      pm.environment.set(\"swicthCaseIteration\", swicthCaseIteration + 1);",
													"//      postman.setNextRequest(\"SUPER_BO_LOGIN\");",
													"// }",
													"// else if (jsonData.responseData.statusCode > 0 && swicthCaseIteration === 1 || swicthCaseIteration === 2) {",
													"//      pm.test(\"-------------------------2.Negative scenario Of get/token api with invalid userName and Password.--------------------------------\");",
													"//      eval(pm.environment.get(\"IfTestCase\"))();",
													"//      pm.test(\"Message I am getting from Api is= \" + jsonData.responseData.message, function () { pm.expect(+jsonData.responseData.message) === (\"Incorrect UserName Or Password/PIN, Please Try Again\") })",
													"//      pm.test(\"Status Code I am getting from Api is= \" + jsonData.responseData.statusCode, function () { pm.expect(+jsonData.responseData.statusCode).to.eql(303) });",
													"//      pm.environment.set(\"swicthCaseIteration\", swicthCaseIteration + 1);",
													"//      postman.setNextRequest(\"SUPER_BO_LOGIN\")",
													"// }",
													"// else if (jsonData.responseData.statusCode > 0 && swicthCaseIteration === 3) {",
													"//      pm.test(\"-------------------------3.Negative scenario Of get/token api with invalid clientId.--------------------------------\");",
													"//      { eval(pm.environment.get(\"IfTestCase\"))(); }",
													"//      pm.environment.set(\"swicthCaseIteration\", swicthCaseIteration + 1);",
													"//      postman.setNextRequest(\"SUPER_BO_LOGIN\")",
													"// }",
													"// else if (jsonData.responseData.statusCode > 0 && swicthCaseIteration === 4) {",
													"//      pm.test(\"-------------------------4.Negative scenario Of get/token api with invalid clientSecret.--------------------------------\");",
													"//      { eval(pm.environment.get(\"IfTestCase\"))(); }",
													"//      pm.environment.set(\"swicthCaseIteration\", 0);",
													"//      postman.setNextRequest(\"validateUser\")",
													"// }",
													"// else {",
													"//      { eval(pm.environment.get(\"ElseTestCase\"))(); }",
													"//      pm.environment.set(\"swicthCaseIteration\", 0);",
													"// }"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// let swicthCaseIteration= +pm.environment.get(\"swicthCaseIteration\");\r",
													"// function sameLines()  {\r",
													"// pm.variables.set(\"userName\", \"skilrock\");\r",
													"// pm.variables.set(\"password\", 12345678);\r",
													"// pm.variables.set(\"clientId\", \"PAM\");\r",
													"// pm.variables.set(\"clientSecret\", \"ph2Nj5knd4IjWBVLc4mhmYHo1hQDEdS3FlIC2KskHpeHFhsqxD\");  }\r",
													"// switch(swicthCaseIteration) {\r",
													"//  case 0:\r",
													"// \tsameLines();  break;\r",
													"//  case 1:\r",
													"// \tsameLines();\r",
													"// \tpm.variables.set(\"userName\", null);  break;\r",
													"//  case 2:\r",
													"// \tsameLines();\r",
													"// \tpm.variables.set(\"password\", null);  break;\r",
													"//  case 3:\r",
													"// \tsameLines();\r",
													"// \tpm.variables.set(\"clientId\", null);  break;\r",
													"//  case 4:\r",
													"// \tsameLines();\r",
													"// \tpm.variables.set(\"clientSecret\", null);  break;  }\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"//VMFYq5Pz344-H8kuUUk1EedCUEPzeJAp2kl6Kddb2jE"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "userName",
												"value": "bo_head",
												"type": "text"
											},
											{
												"key": "password",
												"value": "12345678",
												"type": "text"
											},
											{
												"key": "clientId",
												"value": "UCM",
												"type": "text"
											},
											{
												"key": "clientSecret",
												"value": "ph2Nj5knd4IjWBVLc4mhmYHo1hQDEdS3FlIC2KskHpeHFhsqxD",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{UcmUrl}}/get/token",
											"host": [
												"{{UcmUrl}}"
											],
											"path": [
												"get",
												"token"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "PAYPR_BACKOFFICE_KYC",
							"item": [
								{
									"name": "Alias Management",
									"item": [
										{
											"name": "getChannelAlias",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "accept",
														"value": "*/*"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{BoToken}}"
													}
												],
												"url": {
													"raw": "{{CamUrl}}/v1.0/getChannelAlias?businessId=2&channelId=2",
													"host": [
														"{{CamUrl}}"
													],
													"path": [
														"v1.0",
														"getChannelAlias"
													],
													"query": [
														{
															"key": "businessId",
															"value": "2"
														},
														{
															"key": "channelId",
															"value": "2"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Backoffice Management",
									"item": [
										{
											"name": "getLoginData",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "accept",
														"value": "*/*"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{BoToken}}"
													}
												],
												"url": {
													"raw": "{{CamUrl}}/v1.0/getLoginData",
													"host": [
														"{{CamUrl}}"
													],
													"path": [
														"v1.0",
														"getLoginData"
													]
												}
											},
											"response": []
										},
										{
											"name": "validateUser",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "accept",
														"value": "*/*"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{BoToken}}"
													}
												],
												"url": {
													"raw": "{{CamUrl}}/v1.0/validateUser?userId={{BoUserId}}",
													"host": [
														"{{CamUrl}}"
													],
													"path": [
														"v1.0",
														"validateUser"
													],
													"query": [
														{
															"key": "userId",
															"value": "{{BoUserId}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "getUserMenus",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "accept",
														"value": "*/*"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{BoToken}}"
													}
												],
												"url": {
													"raw": "{{CamUrl}}/v1.0/getUserMenus?appType=Web_Panel&engineCode=CAM&languageCode=en&userId={{BoUserId}}&userRequired=NO",
													"host": [
														"{{CamUrl}}"
													],
													"path": [
														"v1.0",
														"getUserMenus"
													],
													"query": [
														{
															"key": "appType",
															"value": "Web_Panel"
														},
														{
															"key": "engineCode",
															"value": "CAM"
														},
														{
															"key": "languageCode",
															"value": "en"
														},
														{
															"key": "userId",
															"value": "{{BoUserId}}"
														},
														{
															"key": "userRequired",
															"value": "NO"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Business Management",
									"item": [
										{
											"name": "getBusinessList",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "accept",
														"value": "*/*"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{BoToken}}"
													}
												],
												"url": {
													"raw": "{{CamUrl}}/v1.0/getBusinessList",
													"host": [
														"{{CamUrl}}"
													],
													"path": [
														"v1.0",
														"getBusinessList"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Channel Management",
									"item": [
										{
											"name": "getChannelList",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"pm.environment.set(\"channelId\", jsonData.data[0].channelId);",
															"pm.environment.set(\"businessId\", jsonData.data[0].businessId);",
															"",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "accept",
														"value": "*/*"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{BoToken}}"
													}
												],
												"url": {
													"raw": "{{CamUrl}}/v1.0/getChannelList?businessId=2",
													"host": [
														"{{CamUrl}}"
													],
													"path": [
														"v1.0",
														"getChannelList"
													],
													"query": [
														{
															"key": "businessId",
															"value": "2"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "getConfigurations",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "accept",
														"value": "*/*"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{BoToken}}"
													}
												],
												"url": {
													"raw": "https://cam-backend.sapidblue.in/v1.0/getConfigurations?businessId={{businessId}}&channelId=2&configType=B2C",
													"protocol": "https",
													"host": [
														"cam-backend",
														"sapidblue",
														"in"
													],
													"path": [
														"v1.0",
														"getConfigurations"
													],
													"query": [
														{
															"key": "businessId",
															"value": "{{businessId}}"
														},
														{
															"key": "channelId",
															"value": "2"
														},
														{
															"key": "configType",
															"value": "B2C"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Consumer Advance Managment",
									"item": [
										{
											"name": "getSelfConsumerVerficationRequest",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"const moment = require('moment');",
															"var Date =moment().subtract(2, 'days').format(\"YYYY-MM-DD\")",
															"pm.environment.set(\"currentDate\", moment().format(\"YYYY-MM-DD\"));",
															"pm.environment.set(\"fromDate\", moment().subtract(2, 'days').format(\"YYYY-MM-DD\"));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"pm.environment.set(\"requestId\", +jsonData.data[(jsonData.data.length)-1].requestId);",
															"",
															"pm.test(jsonData.data.length);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "accept",
														"value": "*/*"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{BoToken}}"
													}
												],
												"url": {
													"raw": "{{CamUrl}}/v1.0/getSelfConsumerVerficationRequest?actionType=ALL&aliasId=31&businessId=7&channelId=29&fromDate={{fromDate}}&profileStatusType=ALL&toDate={{currentDate}}",
													"host": [
														"{{CamUrl}}"
													],
													"path": [
														"v1.0",
														"getSelfConsumerVerficationRequest"
													],
													"query": [
														{
															"key": "actionType",
															"value": "ALL"
														},
														{
															"key": "aliasId",
															"value": "31"
														},
														{
															"key": "businessId",
															"value": "7"
														},
														{
															"key": "channelId",
															"value": "29"
														},
														{
															"key": "fromDate",
															"value": "{{fromDate}}"
														},
														{
															"key": "profileStatusType",
															"value": "ALL"
														},
														{
															"key": "toDate",
															"value": "{{currentDate}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "FETCH_REQUEST_ID_FROM_DATABASE Copy",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															" var jsonData = JSON.parse(responseBody);\r",
															" pm.environment.set(\"requestId\",jsonData[0].id)\r",
															"\r",
															" pm.test(jsonData[0].id);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "http://localhost:3000/api/sb_cam_consumer_verification_status?_where=((consumer_id,eq,{{consumerId}}) ~and (business_id,eq,2))",
													"protocol": "http",
													"host": [
														"localhost"
													],
													"port": "3000",
													"path": [
														"api",
														"sb_cam_consumer_verification_status"
													],
													"query": [
														{
															"key": "_where",
															"value": "((consumer_id,eq,{{consumerId}}) ~and (business_id,eq,2))"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "canAssignVerificationRequest",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "*/*"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{BoToken}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"businessId\": 2,\n    \"channelId\": 2,\n    \"remarks\": null,\n    \"requestId\": {{requestId}},\n    \"systemUserId\": {{BoUserId}}\n}"
												},
												"url": {
													"raw": "{{CamUrl}}/v1.0/canAssignVerificationRequest",
													"host": [
														"{{CamUrl}}"
													],
													"path": [
														"v1.0",
														"canAssignVerificationRequest"
													]
												}
											},
											"response": []
										},
										{
											"name": "getConsumerDocumentDetails",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"pm.environment.set(\"ADDRESS_PROOF\", +jsonData.data[(jsonData.data.length)-1].documents[0].docId);",
															"pm.environment.set(\"ID_PROOF\", +jsonData.data[(jsonData.data.length)-2].documents[0].docId);",
															"// pm.environment.set(\"REGISTRATION_CERTIFICATE\", +jsonData.data[(jsonData.data.length)-3].documents[0].docId);",
															"// pm.environment.set(\"ID_PROOF\", +jsonData.data[(jsonData.data.length)-4].documents[0].docId);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "accept",
														"value": "*/*"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{BoToken}}"
													}
												],
												"url": {
													"raw": "{{CamUrl}}/v1.0/getConsumerDocumentDetails?businessId=2&channelId=2&systemConsumerId={{consumerId}}",
													"host": [
														"{{CamUrl}}"
													],
													"path": [
														"v1.0",
														"getConsumerDocumentDetails"
													],
													"query": [
														{
															"key": "businessId",
															"value": "2"
														},
														{
															"key": "channelId",
															"value": "2"
														},
														{
															"key": "systemConsumerId",
															"value": "{{consumerId}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "ADDRESS_PROOF_updateDocumentStatus",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "*/*"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{BoToken}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"businessId\": 2,\n    \"channelId\": 2,\n    \"docName\": \"MOBILE_BILL\",\n    \"docValue\": \"Address Document Updated Successfully\",\n    \"documentId\": {{ADDRESS_PROOF}},\n    \"documentStatus\": \"ACTIVE\",\n    \"remark\": null,\n    \"systemConsumerId\": \"{{consumerId}}\"\n}"
												},
												"url": {
													"raw": "{{CamUrl}}/v1.0/updateDocumentStatus",
													"host": [
														"{{CamUrl}}"
													],
													"path": [
														"v1.0",
														"updateDocumentStatus"
													]
												}
											},
											"response": []
										},
										{
											"name": "ID_PROOF_updateDocumentStatus",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "*/*"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{BoToken}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"businessId\": 2,\n    \"channelId\": 2,\n    \"docName\": \"RSA_DOC\",\n    \"docValue\": \"Id Proof Document Updated Successfully\",\n    \"documentId\": {{ID_PROOF}},\n    \"documentStatus\": \"ACTIVE\",\n    \"remark\": null,\n    \"systemConsumerId\": \"{{consumerId}}\"\n}"
												},
												"url": {
													"raw": "{{CamUrl}}/v1.0/updateDocumentStatus",
													"host": [
														"{{CamUrl}}"
													],
													"path": [
														"v1.0",
														"updateDocumentStatus"
													]
												}
											},
											"response": []
										},
										{
											"name": "updateConsumerProfileStatus",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "*/*"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{BoToken}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"businessId\": 2,\n    \"channelId\": 2,\n    \"isUpdateByConsumer\": null,\n    \"loggedInUserCheck\": null,\n    \"remark\": null,\n    \"sourceDocType\": [\n        null\n    ],\n    \"status\": \"ACTIVE\",\n    \"systemConsumerIds\": [\n        \"{{consumerId}}\"\n       \n    ]\n}"
												},
												"url": {
													"raw": "{{CamUrl}}/v1.0/updateConsumerProfileStatus",
													"host": [
														"{{CamUrl}}"
													],
													"path": [
														"v1.0",
														"updateConsumerProfileStatus"
													]
												}
											},
											"response": []
										},
										{
											"name": "updateConsumerProfileStatus",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "*/*"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{BoToken}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"businessId\": 2,\n    \"channelId\": 2,\n    \"isUpdateByConsumer\": null,\n  \n    \"remark\": null,\n    \"sourceDocType\": [\n        null\n    ],\n    \"status\": \"ACTIVE\",\n    \"systemConsumerIds\": [\n        \"{{consumerId}}\",\n        \"390\",\n        \"389\",\n        \"388\",\n        \"387\",\n        \"386\",\n        \"385\",\n        \"384\",\n        \"383\",\n        \"382\",\n        \"381\"\n    ]\n}"
												},
												"url": {
													"raw": "{{CamUrl}}/v1.0/updateConsumerProfileStatus",
													"host": [
														"{{CamUrl}}"
													],
													"path": [
														"v1.0",
														"updateConsumerProfileStatus"
													]
												}
											},
											"response": []
										},
										{
											"name": "getOtherConsumerVerificationRequest",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "accept",
														"value": "*/*"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{BoToken}}"
													}
												],
												"url": {
													"raw": "{{CamUrl}}/v1.0/getOtherConsumerVerificationRequest?aliasId=2&businessId=2&channelId=2&duration=12",
													"host": [
														"{{CamUrl}}"
													],
													"path": [
														"v1.0",
														"getOtherConsumerVerificationRequest"
													],
													"query": [
														{
															"key": "aliasId",
															"value": "2"
														},
														{
															"key": "businessId",
															"value": "2"
														},
														{
															"key": "channelId",
															"value": "2"
														},
														{
															"key": "duration",
															"value": "12"
														},
														{
															"key": "username",
															"value": "12",
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "canReAssignVerificationRequest",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "*/*"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{BoToken}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"businessId\": 2,\n    \"channelId\": 2,\n    \"remarks\": \"Reassign the Request\",\n    \"requestId\": 364,\n    \"systemUserId\": \"27\"\n}"
												},
												"url": {
													"raw": "{{CamUrl}}/v1.0/canReAssignVerificationRequest",
													"host": [
														"{{CamUrl}}"
													],
													"path": [
														"v1.0",
														"canReAssignVerificationRequest"
													]
												}
											},
											"response": []
										},
										{
											"name": "checkEligibilityOfActiveProfileStatus",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "accept",
														"value": "*/*"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{BoToken}}"
													}
												],
												"url": {
													"raw": "{{CamUrl}}/v1.0/checkEligibilityOfActiveProfileStatus?businessId=2&channelId=2&systemConsumerId={{consumerId}}",
													"host": [
														"{{CamUrl}}"
													],
													"path": [
														"v1.0",
														"checkEligibilityOfActiveProfileStatus"
													],
													"query": [
														{
															"key": "businessId",
															"value": "2"
														},
														{
															"key": "channelId",
															"value": "2"
														},
														{
															"key": "systemConsumerId",
															"value": "{{consumerId}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "fetchConsumerDocuments",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "*/*"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{BoToken}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"aliasName\": \"{{paypr}}\",\n    \"docName\": null,\n    \"docType\": \"ADDRESS_PROOF\",\n    \"docValue\": null,\n    \"systemConsumerId\": {{consumerId}}\n}"
												},
												"url": {
													"raw": "{{CamUrl}}/v1.0/fetchConsumerDocuments",
													"host": [
														"{{CamUrl}}"
													],
													"path": [
														"v1.0",
														"fetchConsumerDocuments"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Consumer Managment",
									"item": [
										{
											"name": "doConsumerSearch",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "*/*"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{BoToken}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"aliasId\": 2,\n    \"businessId\": 2,\n    \"channelId\": 2,\n    \"offset\": 0,\n    \"limit\": 200,\n    \"countryCode\":\"IN\"\n}"
												},
												"url": {
													"raw": "{{CamUrl}}/v1.0/doConsumerSearch",
													"host": [
														"{{CamUrl}}"
													],
													"path": [
														"v1.0",
														"doConsumerSearch"
													]
												}
											},
											"response": []
										},
										{
											"name": "fetchBalance",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "accept",
														"value": "*/*"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{BoToken}}"
													}
												],
												"url": {
													"raw": "{{CamUrl}}/v1.0/fetchBalance?aliasName={{paypr}}&systemConsumerId={{consumerId}}",
													"host": [
														"{{CamUrl}}"
													],
													"path": [
														"v1.0",
														"fetchBalance"
													],
													"query": [
														{
															"key": "aliasName",
															"value": "{{paypr}}"
														},
														{
															"key": "systemConsumerId",
															"value": "{{consumerId}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "getConsumerDetails",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "accept",
														"value": "*/*"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{BoToken}}"
													}
												],
												"url": {
													"raw": "{{CamUrl}}/v1.0/getConsumerDetails?businessId=2&channelId=2&userName={{mobileNo}}",
													"host": [
														"{{CamUrl}}"
													],
													"path": [
														"v1.0",
														"getConsumerDetails"
													],
													"query": [
														{
															"key": "businessId",
															"value": "2"
														},
														{
															"key": "channelId",
															"value": "2"
														},
														{
															"key": "mobileCode",
															"value": "%2B91",
															"disabled": true
														},
														{
															"key": "mobileNumber",
															"value": "{{mobileNo}}",
															"disabled": true
														},
														{
															"key": "systemConsumerId",
															"value": "{{consumerId}}",
															"disabled": true
														},
														{
															"key": "userName",
															"value": "{{mobileNo}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "doConsumerSearch Copy",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "*/*"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{BoToken}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"aliasId\": 2,\n    \"aliasName\": \"{{paypr}}\",\n    \"businessId\": 2,\n    \"channelId\": 2,\n    \"offset\": 0,\n    \"limit\": 200,\n    \"countryCode\":\"IN\",\n    \"profileStatus\": \"NEW_VERIFICATION_PENDING\",\n    \"systemConsumerId\": [\n        \"{{consumerId}}\"\n\n    ]\n}"
												},
												"url": {
													"raw": "{{CamUrl}}/v1.0/doConsumerSearch",
													"host": [
														"{{CamUrl}}"
													],
													"path": [
														"v1.0",
														"doConsumerSearch"
													]
												}
											},
											"response": []
										},
										{
											"name": "fetchTransactionDetail",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "*/*"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{BoToken}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"aliasName\": \"{{paypr}}\",\n    \"fromDate\": \"2022-08-28\",\n    \"limit\": 200,\n    \"offset\": 0,\n    \"systemUserId\": \"275\",\n    \"toDate\": \"2022-10-28\",\n    \"txnType\": \"ALL\"\n}"
												},
												"url": {
													"raw": "{{CamUrl}}/v1.0/fetchTransactionDetail",
													"host": [
														"{{CamUrl}}"
													],
													"path": [
														"v1.0",
														"fetchTransactionDetail"
													]
												}
											},
											"response": []
										},
										{
											"name": "getConsumerLoginDetails",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "accept",
														"value": "*/*"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{BoToken}}"
													}
												],
												"url": {
													"raw": "{{CamUrl}}/v1.0/getConsumerLoginDetails?businessId=1&channelId=1&systemConsumerId={{consumerId}}",
													"host": [
														"{{CamUrl}}"
													],
													"path": [
														"v1.0",
														"getConsumerLoginDetails"
													],
													"query": [
														{
															"key": "businessId",
															"value": "1"
														},
														{
															"key": "channelId",
															"value": "1"
														},
														{
															"key": "systemConsumerId",
															"value": "{{consumerId}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "updateConsumerProfileStatus",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "*/*"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{BoToken}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"businessId\": 1,\n    \"channelId\": 1,\n    \"status\": \"ACTIVE\",\n    \"systemConsumerIds\": [\n        \"{{consumerId}}\"\n    ]\n}"
												},
												"url": {
													"raw": "{{CamUrl}}/v1.0/updateConsumerProfileStatus",
													"host": [
														"{{CamUrl}}"
													],
													"path": [
														"v1.0",
														"updateConsumerProfileStatus"
													]
												}
											},
											"response": []
										},
										{
											"name": "updateConsumerMobileNumber",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "*/*"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{BoToken}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "aliasName",
														"value": "{{paypr}}",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"businessId\": 2,\n    \"channelId\": 2,\n    \"newMobileCode\": \"+1868\",\n    \"newMobileNumber\": \"9765500\",\n    \"systemConsumerId\": \"376\"\n}"
												},
												"url": {
													"raw": "{{CamUrl}}/v1.0/updateConsumerMobileNumber",
													"host": [
														"{{CamUrl}}"
													],
													"path": [
														"v1.0",
														"updateConsumerMobileNumber"
													]
												}
											},
											"response": []
										},
										{
											"name": "updateConsumerAccountStatus",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "*/*"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{BoToken}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"accountStatus\": \"blocked\",\n    \"businessId\": 2,\n    \"channelId\": 2,\n    \"systemConsumerIds\": [\n        \"376\"\n    ]\n}"
												},
												"url": {
													"raw": "https://cam-backend.sapidblue.in/v1.0/updateConsumerAccountStatus",
													"protocol": "https",
													"host": [
														"cam-backend",
														"sapidblue",
														"in"
													],
													"path": [
														"v1.0",
														"updateConsumerAccountStatus"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Report Management",
									"item": []
								},
								{
									"name": "Master Data Management",
									"item": [
										{
											"name": "getCountryList",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "accept",
														"value": "*/*"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{BoToken}}"
													}
												],
												"url": {
													"raw": "{{CamUrl}}/v1.0/getCountryList",
													"host": [
														"{{CamUrl}}"
													],
													"path": [
														"v1.0",
														"getCountryList"
													]
												}
											},
											"response": []
										},
										{
											"name": "getStateList",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "accept",
														"value": "*/*"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{BoToken}}"
													}
												],
												"url": {
													"raw": "{{CamUrl}}/v1.0/getStateList?countryCode=IN",
													"host": [
														"{{CamUrl}}"
													],
													"path": [
														"v1.0",
														"getStateList"
													],
													"query": [
														{
															"key": "countryCode",
															"value": "IN"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "getCityList",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "accept",
														"value": "*/*"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{BoToken}}"
													}
												],
												"url": {
													"raw": "{{CamUrl}}/v1.0/getCityList?stateCode=IN-AS",
													"host": [
														"{{CamUrl}}"
													],
													"path": [
														"v1.0",
														"getCityList"
													],
													"query": [
														{
															"key": "stateCode",
															"value": "IN-AS"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "getProfileStatus",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "accept",
														"value": "*/*"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{BoToken}}"
													}
												],
												"url": {
													"raw": "{{CamUrl}}/v1.0/getProfileStatus?aliasName={{paypr}}",
													"host": [
														"{{CamUrl}}"
													],
													"path": [
														"v1.0",
														"getProfileStatus"
													],
													"query": [
														{
															"key": "aliasName",
															"value": "{{paypr}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "getDocumentTypeList",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "accept",
														"value": "*/*"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{BoToken}}"
													}
												],
												"url": {
													"raw": "{{CamUrl}}/v1.0/getDocumentTypeList?aliasName={{paypr}}",
													"host": [
														"{{CamUrl}}"
													],
													"path": [
														"v1.0",
														"getDocumentTypeList"
													],
													"query": [
														{
															"key": "aliasName",
															"value": "{{paypr}}"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "User Management",
									"item": [
										{
											"name": "getUserType",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "accept",
														"value": "*/*"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{BoToken}}"
													}
												],
												"url": {
													"raw": "{{CamUrl}}/v1.0/getUserType?businessId=7",
													"host": [
														"{{CamUrl}}"
													],
													"path": [
														"v1.0",
														"getUserType"
													],
													"query": [
														{
															"key": "businessId",
															"value": "7"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "userSearch",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "*/*"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{BoToken}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"businessId\": 7\n}"
												},
												"url": {
													"raw": "{{CamUrl}}/v1.0/userSearch",
													"host": [
														"{{CamUrl}}"
													],
													"path": [
														"v1.0",
														"userSearch"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "PAYPR_KYC_REPORT",
									"item": [
										{
											"name": "get/token",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"pm.environment.set(\"BoToken\", jsonData.data.authToken);",
															"pm.environment.set(\"BoUserId\", jsonData.data.userId);",
															"",
															"",
															"",
															"",
															"//      pm.environment.set(\"BoUserId\", jsonData.responseData.userId)",
															"",
															"// let swicthCaseIteration = +pm.environment.get(\"swicthCaseIteration\");",
															"// if (jsonData.responseData.statusCode === 0 && swicthCaseIteration === 0) {",
															"//      pm.test(\"-------------------------1.Positive scenario Of get/token api With valid key Data.--------------------------------\");",
															"//      eval(pm.environment.get(\"IfTestCase\"))();",
															"     ",
															"//      pm.test(\"Message I am getting from Api is= \" + jsonData.responseData.message, function () { pm.expect(jsonData.responseData.message).to.eql(\"Success\") })",
															"// pm.test(\"Message I am getting from Api is= \" + jsonData.responseData.message, function () { pm.expect(jsonData.responseData.message).to.eql(\"Success\") })",
															"// pm.test(\"Status Code I am getting from Api is= \" + jsonData.responseData.statusCode, function () { pm.expect(+jsonData.responseData.statusCode).to.eql(0) })",
															"//      pm.test(\"authToken I am getting from Api is= \" + jsonData.responseData.authToken, function () { pm.expect(+jsonData.responseData.authToken).to.eql(+jsonData.responseData.authToken) })",
															"//      pm.test(\"timestamp I am getting from Api is= \" + jsonData.responseData.timestamp, function () { pm.expect(+jsonData.responseData.timestamp).to.eql(+jsonData.responseData.timestamp) })",
															"//      pm.test(\"expiryTime I am getting from Api is= \" + jsonData.responseData.expiryTime, function () { pm.expect(+jsonData.responseData.expiryTime).to.eql(+jsonData.responseData.expiryTime) })",
															"//      pm.test(\"issueAt I am getting from Api = \" + jsonData.responseData.issueAt, function () { pm.expect(+jsonData.responseData.issueAt).to.eql(+jsonData.responseData.issueAt) })",
															"//      pm.test(\"Login superBo User Id Is=\" + jsonData.responseData.userId);",
															"//      pm.test(\"passwordExpired is= \" + jsonData.responseData.passwordExpired, function () { pm.expect(jsonData.responseData.passwordExpired).to.eql(false) })",
															"//      pm.environment.set(\"swicthCaseIteration\", swicthCaseIteration + 1);",
															"//      postman.setNextRequest(\"SUPER_BO_LOGIN\");",
															"// }",
															"// else if (jsonData.responseData.statusCode > 0 && swicthCaseIteration === 1 || swicthCaseIteration === 2) {",
															"//      pm.test(\"-------------------------2.Negative scenario Of get/token api with invalid userName and Password.--------------------------------\");",
															"//      eval(pm.environment.get(\"IfTestCase\"))();",
															"//      pm.test(\"Message I am getting from Api is= \" + jsonData.responseData.message, function () { pm.expect(+jsonData.responseData.message) === (\"Incorrect UserName Or Password/PIN, Please Try Again\") })",
															"//      pm.test(\"Status Code I am getting from Api is= \" + jsonData.responseData.statusCode, function () { pm.expect(+jsonData.responseData.statusCode).to.eql(303) });",
															"//      pm.environment.set(\"swicthCaseIteration\", swicthCaseIteration + 1);",
															"//      postman.setNextRequest(\"SUPER_BO_LOGIN\")",
															"// }",
															"// else if (jsonData.responseData.statusCode > 0 && swicthCaseIteration === 3) {",
															"//      pm.test(\"-------------------------3.Negative scenario Of get/token api with invalid clientId.--------------------------------\");",
															"//      { eval(pm.environment.get(\"IfTestCase\"))(); }",
															"//      pm.environment.set(\"swicthCaseIteration\", swicthCaseIteration + 1);",
															"//      postman.setNextRequest(\"SUPER_BO_LOGIN\")",
															"// }",
															"// else if (jsonData.responseData.statusCode > 0 && swicthCaseIteration === 4) {",
															"//      pm.test(\"-------------------------4.Negative scenario Of get/token api with invalid clientSecret.--------------------------------\");",
															"//      { eval(pm.environment.get(\"IfTestCase\"))(); }",
															"//      pm.environment.set(\"swicthCaseIteration\", 0);",
															"//      postman.setNextRequest(\"validateUser\")",
															"// }",
															"// else {",
															"//      { eval(pm.environment.get(\"ElseTestCase\"))(); }",
															"//      pm.environment.set(\"swicthCaseIteration\", 0);",
															"// }"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// let swicthCaseIteration= +pm.environment.get(\"swicthCaseIteration\");\r",
															"// function sameLines()  {\r",
															"// pm.variables.set(\"userName\", \"skilrock\");\r",
															"// pm.variables.set(\"password\", 12345678);\r",
															"// pm.variables.set(\"clientId\", \"PAM\");\r",
															"// pm.variables.set(\"clientSecret\", \"ph2Nj5knd4IjWBVLc4mhmYHo1hQDEdS3FlIC2KskHpeHFhsqxD\");  }\r",
															"// switch(swicthCaseIteration) {\r",
															"//  case 0:\r",
															"// \tsameLines();  break;\r",
															"//  case 1:\r",
															"// \tsameLines();\r",
															"// \tpm.variables.set(\"userName\", null);  break;\r",
															"//  case 2:\r",
															"// \tsameLines();\r",
															"// \tpm.variables.set(\"password\", null);  break;\r",
															"//  case 3:\r",
															"// \tsameLines();\r",
															"// \tpm.variables.set(\"clientId\", null);  break;\r",
															"//  case 4:\r",
															"// \tsameLines();\r",
															"// \tpm.variables.set(\"clientSecret\", null);  break;  }\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"//VMFYq5Pz344-H8kuUUk1EedCUEPzeJAp2kl6Kddb2jE"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "userName",
														"value": "rishabh",
														"type": "text"
													},
													{
														"key": "password",
														"value": "12345678",
														"type": "text"
													},
													{
														"key": "clientId",
														"value": "UCM",
														"type": "text"
													},
													{
														"key": "clientSecret",
														"value": "ph2Nj5knd4IjWBVLc4mhmYHo1hQDEdS3FlIC2KskHpeHFhsqxD",
														"type": "text"
													},
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{UcmUrl}}/get/token",
													"host": [
														"{{UcmUrl}}"
													],
													"path": [
														"get",
														"token"
													]
												}
											},
											"response": []
										},
										{
											"name": "getConsumerVerificationReport",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "accept",
														"value": "*/*"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{BoToken}}"
													}
												],
												"url": {
													"raw": "{{CamUrl}}/v1.0/getConsumerVerificationReport?businessId=2&channelId=2&date=2022-10-07",
													"host": [
														"{{CamUrl}}"
													],
													"path": [
														"v1.0",
														"getConsumerVerificationReport"
													],
													"query": [
														{
															"key": "businessId",
															"value": "2"
														},
														{
															"key": "channelId",
															"value": "2"
														},
														{
															"key": "date",
															"value": "2022-10-07"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "getPendingVerificationRequestsReport",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "accept",
														"value": "*/*"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{BoToken}}"
													}
												],
												"url": {
													"raw": "{{CamUrl}}/v1.0/getPendingVerificationRequestsReport?businessId=2&channelId=2&duration=24",
													"host": [
														"{{CamUrl}}"
													],
													"path": [
														"v1.0",
														"getPendingVerificationRequestsReport"
													],
													"query": [
														{
															"key": "businessId",
															"value": "2"
														},
														{
															"key": "channelId",
															"value": "2"
														},
														{
															"key": "duration",
															"value": "24"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "getSecurityQuestionChangeReport",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "accept",
														"value": "*/*"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{BoToken}}"
													}
												],
												"url": {
													"raw": "{{CamUrl}}/v1.0/getSecurityQuestionChangeReport?businessId=2&channelId=2&endDate=2022-10-10&startDate=2022-10-03",
													"host": [
														"{{CamUrl}}"
													],
													"path": [
														"v1.0",
														"getSecurityQuestionChangeReport"
													],
													"query": [
														{
															"key": "businessId",
															"value": "2"
														},
														{
															"key": "channelId",
															"value": "2"
														},
														{
															"key": "endDate",
															"value": "2022-10-10"
														},
														{
															"key": "startDate",
															"value": "2022-10-03"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "getUserPerformanceReportForKYC",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "accept",
														"value": "*/*"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{BoToken}}"
													}
												],
												"url": {
													"raw": "{{CamUrl}}/v1.0/getUserPerformanceReportForKYC?businessId=1&channelId=1&fromDate=2022-10-03&toDate=2022-10-10",
													"host": [
														"{{CamUrl}}"
													],
													"path": [
														"v1.0",
														"getUserPerformanceReportForKYC"
													],
													"query": [
														{
															"key": "businessId",
															"value": "1"
														},
														{
															"key": "channelId",
															"value": "1"
														},
														{
															"key": "fromDate",
															"value": "2022-10-03"
														},
														{
															"key": "toDate",
															"value": "2022-10-10"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Audit_Report",
									"item": [
										{
											"name": "client/fetchMobileNumberChangeReport",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "*/*"
													},
													{
														"key": "clientCode",
														"value": "UCM"
													},
													{
														"key": "clientPwd",
														"value": "{{clientPwd}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"aliasId\": 2,\n    \"businessId\": 2,\n    \"changeByUserType\": \"CONSUMER\",\n    \"changedBy\": null,\n    \"channelId\": 2,\n    \"endDate\": \"2022-11-03\",\n    \"fileType\": null,\n    \"firstName\": null,\n    \"lastName\": null,\n    \"newMobileNo\": null,\n    \"oldMobileNo\": null,\n    \"primaryIdValue\": null,\n    \"startDate\": \"2022-09-03\"\n}"
												},
												"url": {
													"raw": "{{CamUrl}}/client/fetchMobileNumberChangeReport",
													"host": [
														"{{CamUrl}}"
													],
													"path": [
														"client",
														"fetchMobileNumberChangeReport"
													]
												}
											},
											"response": []
										},
										{
											"name": "client/fetchEmailChangeReport",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "*/*"
													},
													{
														"key": "clientCode",
														"value": "UCM"
													},
													{
														"key": "clientPwd",
														"value": "{{clientPwd}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"aliasId\": 2,\n    \"businessId\": 2,\n    \"changeByUserType\": \"CONSUMER\",\n    \"changedBy\": null,\n    \"channelId\": 2,\n    \"endDate\": \"2022-11-03\",\n    \"fileType\": null,\n    \"firstName\": null,\n    \"lastName\": null,\n    \"newEmailId\": null,\n    \"oldEmailId\": null,\n    \"primaryIdValue\": null,\n    \"startDate\": \"2022-09-03\"\n}"
												},
												"url": {
													"raw": "{{CamUrl}}/client/fetchEmailChangeReport",
													"host": [
														"{{CamUrl}}"
													],
													"path": [
														"client",
														"fetchEmailChangeReport"
													]
												}
											},
											"response": []
										},
										{
											"name": "client/fetchPrimaryIdChangeReport",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "*/*"
													},
													{
														"key": "clientCode",
														"value": "UCM"
													},
													{
														"key": "clientPwd",
														"value": "{{clientPwd}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"aliasId\": 2,\n    \"businessId\": 2,\n    \"changeByUserType\": \"CONSUMER\",\n    \"changedBy\": null,\n    \"channelId\": 2,\n    \"endDate\": \"2022-11-03\",\n    \"fileType\": null,\n    \"firstName\": null,\n    \"lastName\": null,\n    \"newRsaId\": null,\n    \"oldRsaId\": null,\n    \"primaryIdValue\": null,\n    \"startDate\": \"2022-11-03\"\n}"
												},
												"url": {
													"raw": "{{CamUrl}}/client/fetchPrimaryIdChangeReport",
													"host": [
														"{{CamUrl}}"
													],
													"path": [
														"client",
														"fetchPrimaryIdChangeReport"
													]
												}
											},
											"response": []
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "WALLET",
			"item": [
				{
					"name": "Set_Consumer_Password Copy 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"password\":\"25d55ad283aa400af464c76d713c07ad\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/sb_cam_consumer_master/{{consumerId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"sb_cam_consumer_master",
								"{{consumerId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "playerLogin PC BROWSER Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									" var jsonData = JSON.parse(responseBody);\r",
									"pm.environment.set(\"consumerToken\", jsonData.data.consumerToken);\r",
									"pm.environment.set(\"consumerId\",jsonData.data.consumerLoginInfo.consumerId);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var loginToken = \"Rishabh\";\r",
									"var password_Ecyrpt = pm.environment.get(\"password_Ecyrpt\")\r",
									"var password = CryptoJS.MD5(password_Ecyrpt+loginToken).toString();\r",
									"pm.variables.set('loginToken', loginToken);\r",
									"pm.environment.set('password', password);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "clientCode",
								"value": "CAM",
								"description": "(Required) Merchant Code"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"aliasName\": \"{{paypr}}\",\n    \"device\": \"ANDROID_APP\",\n    \"loginToken\": \"{{loginToken}}\",\n    \"password\": \"{{password}}\",\n    \"requestIp\": \"127.0.01\",\n    \"userAgent\": \"NA\",\n    \"userName\": \"6567576504\",\n    \"mobileCode\": \"+91\",\n    \"ussd\": null\n}\n\n"
						},
						"url": {
							"raw": "{{CamUrl}}/preLogin/consumerLogin",
							"host": [
								"{{CamUrl}}"
							],
							"path": [
								"preLogin",
								"consumerLogin"
							]
						}
					},
					"response": []
				},
				{
					"name": "getBalance",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "clientCode",
								"value": "WALLET"
							},
							{
								"key": "clientPwd",
								"value": "ph2Nj5knd4IjWBVLc4mhmYHo1hQDEdS3FlIC2KskHpeHFhsqxD"
							}
						],
						"url": {
							"raw": "{{WalletUrl}}/client/getBalance?aliasName={{paypr}}&systemUserId={{consumerId}}",
							"host": [
								"{{WalletUrl}}"
							],
							"path": [
								"client",
								"getBalance"
							],
							"query": [
								{
									"key": "aliasName",
									"value": "{{paypr}}"
								},
								{
									"key": "systemUserId",
									"value": "{{consumerId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "fundTransferToConsumer",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "userId",
								"value": "{{consumerId}}"
							},
							{
								"key": "userToken",
								"value": "{{consumerToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "aliasName",
								"value": "{{paypr}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"aliasName\": \"{{paypr}}\",\n    \"mobileCode\": \"+91\",\n    \"mobileNumber\": \"6567576505\",\n    \"remarks\": \"Oct month rent payment\",\n    \"requestedCurrencyCode\": \"TTD\",\n    \"txnValue\": 1\n}"
						},
						"url": {
							"raw": "{{WalletUrl}}/postLogin/fundTransferToConsumer",
							"host": [
								"{{WalletUrl}}"
							],
							"path": [
								"postLogin",
								"fundTransferToConsumer"
							]
						}
					},
					"response": []
				},
				{
					"name": "fundTransferToMerchant",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "userId",
								"value": "{{consumerId}}"
							},
							{
								"key": "userToken",
								"value": "{{consumerToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "aliasName",
								"value": "{{paypr}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"sourceAliasName\":\"{{paypr}}\",\r\n    \"targetAliasName\":\"www.paypr-retail.com\",\r\n    \"qrCode\":\"string\",\r\n    \"remarks\":\"testing\",\r\n    \"requestedCurrencyCode\":\"INR\",\r\n    \"txnValue\":\"10\",\r\n    \"merchantMobileNo\":\"2222222222\",\r\n    \"merchantOrgName\":\"Deo Business\"   \r\n}"
						},
						"url": {
							"raw": "{{WalletUrl}}/postLogin/fundTransferToMerchant",
							"host": [
								"{{WalletUrl}}"
							],
							"path": [
								"postLogin",
								"fundTransferToMerchant"
							]
						}
					},
					"response": []
				},
				{
					"name": "getBusinessList",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{BoToken}}"
							}
						],
						"url": {
							"raw": "https://wallet-backend.sapidblue.in/v1.0/getBusinessList",
							"protocol": "https",
							"host": [
								"wallet-backend",
								"sapidblue",
								"in"
							],
							"path": [
								"v1.0",
								"getBusinessList"
							]
						}
					},
					"response": []
				},
				{
					"name": "fetchTransactionDetail",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*",
								"type": "text"
							},
							{
								"key": "userId",
								"value": "608",
								"type": "text"
							},
							{
								"key": "userToken",
								"value": "{{consumerToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "aliasName",
								"value": "{{paypr}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"aliasName\":\"{{paypr}}\",\n    \"fromDate\": \"2022-09-26\",\n    \"limit\": 1000,\n    \"offset\": 0,\n    \"systemUserId\": 602,\n    \"toDate\": \"2022-02-02\",\n    \"txnType\": \"ALL\"\n}"
						},
						"url": {
							"raw": "{{WalletUrl}}/postLogin/fetchTransactionDetail",
							"host": [
								"{{WalletUrl}}"
							],
							"path": [
								"postLogin",
								"fetchTransactionDetail"
							]
						}
					},
					"response": []
				},
				{
					"name": "fetchTransactionDetail Clone",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*",
								"type": "text"
							},
							{
								"key": "userId",
								"value": "{{consumerId}}",
								"type": "text"
							},
							{
								"key": "userToken",
								"value": "{{consumerToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "aliasName",
								"value": " {{paypr}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"fromDate\": \"string\",\r\n    \"limit\": 0,\r\n    \"offset\": 0,\r\n    \"systemUserId\": 0,\r\n    \"toDate\": \"string\",\r\n    \"txnType\": \"string\",\r\n    \"txnTypeList\": [\r\n        \"string\"\r\n    ]\r\n}"
						},
						"url": {
							"raw": "{{WalletUrl}}/postLogin/fetchTransactionDetail",
							"host": [
								"{{WalletUrl}}"
							],
							"path": [
								"postLogin",
								"fetchTransactionDetail"
							]
						}
					},
					"response": []
				},
				{
					"name": "getTxnTypeList",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*",
								"type": "text"
							},
							{
								"key": "userId",
								"value": "{{consumerId}}",
								"type": "text"
							},
							{
								"key": "userToken",
								"value": "{{consumerToken}}",
								"type": "text"
							},
							{
								"key": "aliasName",
								"value": "{{paypr}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{WalletUrl}}/postLogin/getTxnTypeList",
							"host": [
								"{{WalletUrl}}"
							],
							"path": [
								"postLogin",
								"getTxnTypeList"
							]
						}
					},
					"response": []
				},
				{
					"name": "getUserType",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{BoToken}}"
							}
						],
						"url": {
							"raw": "{{WalletUrl}}/v1.0/getUserType?businessId=2",
							"host": [
								"{{WalletUrl}}"
							],
							"path": [
								"v1.0",
								"getUserType"
							],
							"query": [
								{
									"key": "businessId",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "purchase",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*",
								"type": "text"
							},
							{
								"key": "userId",
								"value": "{{consumerId}}",
								"type": "text"
							},
							{
								"key": "userToken",
								"value": "{{consumerToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "aliasName",
								"value": "{{paypr}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"aggregatorCode\": \"*\",\n    \"engineReference\": null,\n    \"engineTxnId\": \"1002\",\n    \"processCharge\": 4,\n    \"productCode\": \"BMOBILE_POSTPAID\",\n    \"providerCode\": \"TSTT\",\n    \"remarks\": \"Purchase Remarks\",\n    \"serviceCode\": \"UTILITY\",\n    \"txnTypeCode\": \"PURCHASE\",\n    \"txnValue\": 101\n}"
						},
						"url": {
							"raw": "{{WalletUrl}}/postLogin/purchase",
							"host": [
								"{{WalletUrl}}"
							],
							"path": [
								"postLogin",
								"purchase"
							]
						}
					},
					"response": []
				},
				{
					"name": "purchaseReturn",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*",
								"type": "text"
							},
							{
								"key": "userId",
								"value": "{{consumerId}}",
								"type": "text"
							},
							{
								"key": "userToken",
								"value": "{{consumerToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "aliasName",
								"value": "{{paypr}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"engineReference\": \"string\",\n    \"engineTxnId\": \"1003\",\n    \"refEngineTxnId\": \"1002\",\n    \"remarks\": \"return purchase remarks\",\n    \"serviceCode\": \"UTILITY\",\n    \"txnValue\": 101\n}"
						},
						"url": {
							"raw": "{{WalletUrl}}/postLogin/purchaseReturn",
							"host": [
								"{{WalletUrl}}"
							],
							"path": [
								"postLogin",
								"purchaseReturn"
							]
						}
					},
					"response": []
				},
				{
					"name": "client/fetchTransactionDetail",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "clientCode",
								"value": "WALLET"
							},
							{
								"key": "clientPwd",
								"value": "ph2Nj5knd4IjWBVLc4mhmYHo1hQDEdS3FlIC2KskHpeHFhsqxD"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"aliasName\": \"{{paypr}}\",\n    \"fromDate\": \"2022-09-26\",\n    \"limit\": 0,\n    \"offset\": 0,\n    \"systemUserId\": 85,\n    \"toDate\": \"2022-10-26\",\n    \"txnType\": \"ALL\"\n}"
						},
						"url": {
							"raw": "https://wallet-backend.sapidblue.in/client/fetchTransactionDetail",
							"protocol": "https",
							"host": [
								"wallet-backend",
								"sapidblue",
								"in"
							],
							"path": [
								"client",
								"fetchTransactionDetail"
							]
						}
					},
					"response": []
				},
				{
					"name": "getUserDetails",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "clientCode",
								"value": "UCM"
							},
							{
								"key": "clientPwd",
								"value": "{{clientPwd}}"
							}
						],
						"url": {
							"raw": "{{WalletUrl}}/client/getUserDetails?aliasName={{paypr}}&userName={{mobileNo}}&userType=CONSUMER",
							"host": [
								"{{WalletUrl}}"
							],
							"path": [
								"client",
								"getUserDetails"
							],
							"query": [
								{
									"key": "aliasName",
									"value": "{{paypr}}"
								},
								{
									"key": "userName",
									"value": "{{mobileNo}}"
								},
								{
									"key": "userType",
									"value": "CONSUMER"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "client/deposit",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "clientCode",
								"value": "UCM"
							},
							{
								"key": "clientPwd",
								"value": "{{clientPwd}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"aliasName\": \"{{paypr}}\",\n    \"amount\": 100,\n    \"currencyCode\": \"TTD\",\n    \"device\": \"PC\",\n    \"engineReference\": \"string\",\n    \"particular\": \"string\",\n    \"processCharge\": 10,\n    \"systemConsumerId\": {{consumerId}},\n    \"transactionChargeMode\": \"NET\",\n    \"transactionType\": \"DEPOSIT\",\n    \"txnId\": 10004,\n    \"userAgent\": \"useragent\"\n}"
						},
						"url": {
							"raw": "{{WalletUrl}}/client/deposit",
							"host": [
								"{{WalletUrl}}"
							],
							"path": [
								"client",
								"deposit"
							]
						}
					},
					"response": []
				},
				{
					"name": "client/fundTransferOutReturn",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"Cashier and utility is pending."
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "clientCode",
								"value": "UCM"
							},
							{
								"key": "clientPwd",
								"value": "{{clientPwd}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"aliasName\": \"string\",\n    \"engineTxnId\": \"string\",\n    \"merchantMobileNo\": \"string\",\n    \"merchantOrgName\": \"string\",\n    \"merchantReturnTxnId\": 0,\n    \"refEngineTxnId\": \"string\",\n    \"remarks\": \"string\",\n    \"serviceCode\": \"string\",\n    \"txnValue\": 0\n}"
						},
						"url": {
							"raw": "{{WalletUrl}}/client/fundTransferOutReturn",
							"host": [
								"{{WalletUrl}}"
							],
							"path": [
								"client",
								"fundTransferOutReturn"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "REPORTING",
			"item": [
				{
					"name": "updateConfigurations",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "clientCode",
								"value": "UCM"
							},
							{
								"key": "clientToken",
								"value": "ph2Nj5knd4IjWBVLc4mhmYHo1hQDEdS3FlIC2KskHpeHFhsqxD"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-CSRFToken",
								"value": "wH9a65kl8voMAIvanACskOhxzdKFNWLre0Uc3S9Wh4so8HnVnSDXhdAvp9ggBeMY"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"configCode\": \"ALLOWED_CURRENCIES\",\n    \"configValue\": \"TTD\",\n    \"configType\": \"B2C\",\n    \"status\": \"ACTIVE\"\n}"
						},
						"url": {
							"raw": "http://10.5.50.193:8000/client/updateConfigurations",
							"protocol": "http",
							"host": [
								"10",
								"5",
								"50",
								"193"
							],
							"port": "8000",
							"path": [
								"client",
								"updateConfigurations"
							]
						}
					},
					"response": []
				},
				{
					"name": "businessRegistration",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "clientCode",
								"value": "UCM"
							},
							{
								"key": "clientPwd",
								"value": "ph2Nj5knd4IjWBVLc4mhmYHo1hQDEdS3FlIC2KskHpeHFhsqxD"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"addressOne\": \"addressOne\",\n    \"addressTwo\": \"addressTwo\",\n    \"businessCode\": \"ORG20010112TEST\",\n    \"businessName\": \"Paypr\",\n    \"cityCode\": \"IN-HR-GU\",\n    \"configs\": [\n        {\n            \"configCode\": \"ALLOWED_CURRENCIES\",\n            \"configStatus\": \"ACTIVE\",\n            \"configValue\": \"TTD\"\n        }\n\n    ],\n    \"contactPerson\": \"Rishabh\",\n    \"countryCode\": \"IN\",\n    \"emailId\": \"paypr@gmail.com\",\n    \"mobileCode\": \"+1868\",\n    \"mobileNumber\": \"8989789878\",\n    \"phoneCode\": \"+1868\",\n    \"phoneNumber\": \"8989789878\",\n    \"stateCode\": \"IN-HR\",\n    \"ucmBusinessId\": 1,\n    \"zipCode\": \"122333\"\n}"
						},
						"url": {
							"raw": "http://10.5.50.193:8000/client/businessRegistration",
							"protocol": "http",
							"host": [
								"10",
								"5",
								"50",
								"193"
							],
							"port": "8000",
							"path": [
								"client",
								"businessRegistration"
							]
						}
					},
					"response": []
				},
				{
					"name": "channelRegistration",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "clientCode",
								"value": "UCM"
							},
							{
								"key": "clientPwd",
								"value": "ph2Nj5knd4IjWBVLc4mhmYHo1hQDEdS3FlIC2KskHpeHFhsqxD"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"channelType\": \"B2C\",\n    \"configs\": [\n        {\n            \"configCode\": \"ZIPCODE_REGEX\",\n            \"configStatus\": \"ACTIVE\",\n            \"configValue\": \"^[0-9]{5}$\"\n        }\n    ],\n    \"currencyCode\": \"TTD\",\n    \"ucmBusinessId\": 1,\n    \"ucmChannelId\": 2,\n    \"ucmChannelName\": \"Channelname\"\n}"
						},
						"url": {
							"raw": "http://10.5.50.193:8000/client/channelRegistration",
							"protocol": "http",
							"host": [
								"10",
								"5",
								"50",
								"193"
							],
							"port": "8000",
							"path": [
								"client",
								"channelRegistration"
							]
						}
					},
					"response": []
				},
				{
					"name": "aliasRegistration",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*",
								"type": "text"
							},
							{
								"key": "clientCode",
								"value": "UCM",
								"type": "text"
							},
							{
								"key": "clientPwd",
								"value": "ph2Nj5knd4IjWBVLc4mhmYHo1hQDEdS3FlIC2KskHpeHFhsqxD",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ucmAliasId\": 1,\n    \"ucmChannelId\":2,\n    \"ucmBusinessId\": 1,\n    \"ucmAliasName\": \"alianemame\",\n    \"status\": \"ACTIVE\"\n}"
						},
						"url": {
							"raw": "http://10.5.50.193:8000/client/aliasRegistration",
							"protocol": "http",
							"host": [
								"10",
								"5",
								"50",
								"193"
							],
							"port": "8000",
							"path": [
								"client",
								"aliasRegistration"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Utility",
			"item": [
				{
					"name": "playerLogin PC BROWSER Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									" var jsonData = JSON.parse(responseBody);\r",
									"pm.environment.set(\"consumerToken\", jsonData.data.consumerToken);\r",
									"pm.environment.set(\"consumerId\",jsonData.data.consumerLoginInfo.consumerId);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var loginToken = \"Rishabh\";\r",
									"var password_Ecyrpt = pm.environment.get(\"password_Ecyrpt\")\r",
									"var password = CryptoJS.MD5(password_Ecyrpt+loginToken).toString();\r",
									"pm.variables.set('loginToken', loginToken);\r",
									"pm.environment.set('password', password);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "clientCode",
								"value": "CAM",
								"description": "(Required) Merchant Code"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"aliasName\": \"{{paypr}}\",\n    \"device\": \"ANDROID_APP\",\n    \"loginToken\": \"{{loginToken}}\",\n    \"password\": \"{{password}}\",\n    \"requestIp\": \"127.0.01\",\n    \"userAgent\": \"NA\",\n    \"userName\": \"8775453\",\n    \"mobileCode\": \"+1868\",\n    \"ussd\": null\n}\n\n"
						},
						"url": {
							"raw": "{{CamUrl}}/preLogin/consumerLogin",
							"host": [
								"{{CamUrl}}"
							],
							"path": [
								"preLogin",
								"consumerLogin"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateConfigurations",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "clientCode",
								"value": "UCM"
							},
							{
								"key": "clientPwd",
								"value": "ph2Nj5knd4IjWBVLc4mhmYHo1hQDEdS3FlIC2KskHpeHFhsqxD"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-CSRFToken",
								"value": "wH9a65kl8voMAIvanACskOhxzdKFNWLre0Uc3S9Wh4so8HnVnSDXhdAvp9ggBeMY"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"configCode\": \"ALLOWED_CURRENCIES\",\n    \"configValue\": \"TTD\",\n    \"configType\": \"B2C\",\n    \"status\": \"ACTIVE\"\n}"
						},
						"url": {
							"raw": "http://10.5.50.193:8000/client/updateConfigurations",
							"protocol": "http",
							"host": [
								"10",
								"5",
								"50",
								"193"
							],
							"port": "8000",
							"path": [
								"client",
								"updateConfigurations"
							]
						}
					},
					"response": []
				},
				{
					"name": "http://10.5.50.193:8000/client/updateConfigurations",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "clientCode",
								"value": "UCM",
								"type": "text"
							},
							{
								"key": "clientPwd",
								"value": "ph2Nj5knd4IjWBVLc4mhmYHo1hQDEdS3FlIC2KskHpeHFhsqxD",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-CSRFToken",
								"value": "wH9a65kl8voMAIvanACskOhxzdKFNWLre0Uc3S9Wh4so8HnVnSDXhdAvp9ggBeMY",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"configs\": [\n        {\n            \"configCode\": \"ALLOWED_CURRENCIES\",\n            \"configValue\": \"TTD\",\n            \"configType\": \"B2C\",\n            \"status\": \"ACTIVE\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "http://10.5.50.193:8000/client/updateConfigurations",
							"protocol": "http",
							"host": [
								"10",
								"5",
								"50",
								"193"
							],
							"port": "8000",
							"path": [
								"client",
								"updateConfigurations"
							]
						}
					},
					"response": []
				},
				{
					"name": "businessRegistration",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "clientCode",
								"value": "UCM"
							},
							{
								"key": "clientPwd",
								"value": "ph2Nj5knd4IjWBVLc4mhmYHo1hQDEdS3FlIC2KskHpeHFhsqxD"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"addressOne\": \"addressOne\",\n    \"addressTwo\": \"addressTwo\",\n    \"businessCode\": \"ORG20010112TEST\",\n    \"businessName\": \"Paypr\",\n    \"cityCode\": \"IN-HR-GU\",\n    \"configs\": [\n        {\n            \"configCode\": \"ALLOWED_CURRENCIES\",\n            \"configStatus\": \"ACTIVE\",\n            \"configValue\": \"TTD\"\n        }\n\n    ],\n    \"contactPerson\": \"Rishabh\",\n    \"countryCode\": \"IN\",\n    \"emailId\": \"paypr@gmail.com\",\n    \"mobileCode\": \"+1868\",\n    \"mobileNumber\": \"8989789878\",\n    \"phoneCode\": \"+1868\",\n    \"phoneNumber\": \"8989789878\",\n    \"stateCode\": \"IN-HR\",\n    \"ucmBusinessId\": 1,\n    \"zipCode\": \"122333\"\n}"
						},
						"url": {
							"raw": "http://10.5.50.193:8000/client/businessRegistration",
							"protocol": "http",
							"host": [
								"10",
								"5",
								"50",
								"193"
							],
							"port": "8000",
							"path": [
								"client",
								"businessRegistration"
							]
						}
					},
					"response": []
				},
				{
					"name": "channelRegistration",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "clientCode",
								"value": "UCM"
							},
							{
								"key": "clientPwd",
								"value": "ph2Nj5knd4IjWBVLc4mhmYHo1hQDEdS3FlIC2KskHpeHFhsqxD"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"channelType\": \"B2C\",\n    \"configs\": [\n        {\n            \"configCode\": \"ZIPCODE_REGEX\",\n            \"configStatus\": \"ACTIVE\",\n            \"configValue\": \"^[0-9]{5}$\"\n        }\n    ],\n    \"currencyCode\": \"TTD\",\n    \"ucmBusinessId\": 1,\n    \"ucmChannelId\": 2,\n    \"ucmChannelName\": \"Channelname\"\n}"
						},
						"url": {
							"raw": "http://10.5.50.193:8000/client/channelRegistration",
							"protocol": "http",
							"host": [
								"10",
								"5",
								"50",
								"193"
							],
							"port": "8000",
							"path": [
								"client",
								"channelRegistration"
							]
						}
					},
					"response": []
				},
				{
					"name": "aliasRegistration",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*",
								"type": "text"
							},
							{
								"key": "clientCode",
								"value": "UCM",
								"type": "text"
							},
							{
								"key": "clientPwd",
								"value": "ph2Nj5knd4IjWBVLc4mhmYHo1hQDEdS3FlIC2KskHpeHFhsqxD",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ucmAliasId\": 1,\n    \"ucmChannelId\":2,\n    \"ucmBusinessId\": 1,\n    \"ucmAliasName\": \"alianemame\",\n    \"status\": \"ACTIVE\"\n}"
						},
						"url": {
							"raw": "http://10.5.50.193:8000/client/aliasRegistration",
							"protocol": "http",
							"host": [
								"10",
								"5",
								"50",
								"193"
							],
							"port": "8000",
							"path": [
								"client",
								"aliasRegistration"
							]
						}
					},
					"response": []
				},
				{
					"name": "getOperators",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "userId",
								"value": "{{consumerId}}"
							},
							{
								"key": "userToken",
								"value": "{{consumerToken}}"
							},
							{
								"key": "aliasName",
								"value": "{{paypr}}"
							},
							{
								"key": "X-CSRFToken",
								"value": "miv2Nq7pg5F5P3U3HYzPpfyzi9ML7YJmqbHomj98TiOQJAmt6XYRSCJiQgx6slke"
							}
						],
						"url": {
							"raw": "{{UtilityUrl}}/postLogin/getOperators?serviceGroupCode=RECHARGE",
							"host": [
								"{{UtilityUrl}}"
							],
							"path": [
								"postLogin",
								"getOperators"
							],
							"query": [
								{
									"key": "actionType",
									"value": "1",
									"disabled": true
								},
								{
									"key": "serviceGroupCode",
									"value": "RECHARGE"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "addbillAccount",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									" var jsonData = JSON.parse(responseBody);",
									"pm.environment.set(\"accountId\", jsonData.data.accountId);",
									"pm.environment.set(\"accountNumber\",jsonData.data.accountNumber);",
									"pm.environment.set(\"serviceId\",jsonData.data.serviceId);",
									"pm.environment.set(\"operatorId\",jsonData.data.operatorId);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									" pm.environment.set(\"accountNumber\", +pm.environment.get(\"accountNumber\")+1);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "userId",
								"value": "{{consumerId}}"
							},
							{
								"key": "userToken",
								"value": "{{consumerToken}}"
							},
							{
								"key": "aliasName",
								"value": "{{paypr}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-CSRFToken",
								"value": "yzyLhjXCFdKBmgnNPimwz1cTug3dqA0qmdE7wBMW268BeMpbeBoZxHRU852YYiRX",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"emailId\": \"{{emailId}}\",\n    \"accountName\": \"AccountName\",\n    \"accountNumber\": \"{{accountNumber}}\",\n    \"operatorId\": 2,\n    \"serviceId\": 2\n}"
						},
						"url": {
							"raw": "{{UtilityUrl}}/postLogin/billAccount",
							"host": [
								"{{UtilityUrl}}"
							],
							"path": [
								"postLogin",
								"billAccount"
							],
							"query": [
								{
									"key": "actionType",
									"value": "w",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getbillAccount",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "userId",
								"value": "{{consumerId}}"
							},
							{
								"key": "userToken",
								"value": "{{consumerToken}}"
							},
							{
								"key": "aliasName",
								"value": "{{paypr}}"
							},
							{
								"key": "X-CSRFToken",
								"value": "yzyLhjXCFdKBmgnNPimwz1cTug3dqA0qmdE7wBMW268BeMpbeBoZxHRU852YYiRX",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{UtilityUrl}}/postLogin/billAccount?accountId={{accountId}}",
							"host": [
								"{{UtilityUrl}}"
							],
							"path": [
								"postLogin",
								"billAccount"
							],
							"query": [
								{
									"key": "actionType",
									"value": "d",
									"disabled": true
								},
								{
									"key": "accountId",
									"value": "{{accountId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "doBilltransaction",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "userId",
								"value": "{{consumerId}}"
							},
							{
								"key": "userToken",
								"value": "{{consumerToken}}"
							},
							{
								"key": "aliasName",
								"value": "{{paypr}}"
							},
							{
								"key": "deviceType",
								"value": "PC"
							},
							{
								"key": "apiVersion",
								"value": "1"
							},
							{
								"key": "userAgent",
								"value": "Na"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-CSRFToken",
								"value": "yzyLhjXCFdKBmgnNPimwz1cTug3dqA0qmdE7wBMW268BeMpbeBoZxHRU852YYiRX",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"accountId\": {{accountId}},\n    \"serviceId\": {{serviceId}},\n    \"aliasName\": \"{{paypr}}\",\n    \"billReferenceNo\": 4,\n    \"operatorId\": {{operatorId}},\n    \"customerMobileNo\": \"{{mobileNo}}\",\n    \"deviceNo\": \"{{accountNumber}}\",\n    \"mrpAmount\": 239762\n}"
						},
						"url": {
							"raw": "{{UtilityUrl}}postLogin/transaction",
							"host": [
								"{{UtilityUrl}}postLogin"
							],
							"path": [
								"transaction"
							],
							"query": [
								{
									"key": "actionType",
									"value": "1",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getbilltransaction",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "userId",
								"value": "{{consumerId}}"
							},
							{
								"key": "userToken",
								"value": "{{consumerToken}}"
							},
							{
								"key": "aliasName",
								"value": "{{paypr}}"
							},
							{
								"key": "X-CSRFToken",
								"value": "yzyLhjXCFdKBmgnNPimwz1cTug3dqA0qmdE7wBMW268BeMpbeBoZxHRU852YYiRX",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{UtilityUrl}}/postLogin/transaction?serviceId={{serviceId}}&deviceNo={{accountNumber}}",
							"host": [
								"{{UtilityUrl}}"
							],
							"path": [
								"postLogin",
								"transaction"
							],
							"query": [
								{
									"key": "actionType",
									"value": "1",
									"disabled": true
								},
								{
									"key": "serviceId",
									"value": "{{serviceId}}"
								},
								{
									"key": "deviceNo",
									"value": "{{accountNumber}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "addrechargeAccount",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "userId",
								"value": "{{consumerId}}"
							},
							{
								"key": "userToken",
								"value": "{{consumerToken}}"
							},
							{
								"key": "aliasName",
								"value": "{{paypr}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-CSRFToken",
								"value": "yzyLhjXCFdKBmgnNPimwz1cTug3dqA0qmdE7wBMW268BeMpbeBoZxHRU852YYiRX"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"mobileNumber\": \"{{mobileNo}}\",\n    \"operatorId\": 1,\n    \"serviceId\": 1\n}"
						},
						"url": {
							"raw": "{{UtilityUrl}}/postLogin/rechargeAccount",
							"host": [
								"{{UtilityUrl}}"
							],
							"path": [
								"postLogin",
								"rechargeAccount"
							],
							"query": [
								{
									"key": "actionType",
									"value": "1",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getrechargeAccount",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "userId",
								"value": "{{consumerId}}"
							},
							{
								"key": "userToken",
								"value": "{{consumerToken}}"
							},
							{
								"key": "aliasName",
								"value": "{{paypr}}"
							},
							{
								"key": "X-CSRFToken",
								"value": "yzyLhjXCFdKBmgnNPimwz1cTug3dqA0qmdE7wBMW268BeMpbeBoZxHRU852YYiRX",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://utility-backend.sapidblue.in/postLogin/rechargeAccount",
							"protocol": "https",
							"host": [
								"utility-backend",
								"sapidblue",
								"in"
							],
							"path": [
								"postLogin",
								"rechargeAccount"
							],
							"query": [
								{
									"key": "actionType",
									"value": "1",
									"disabled": true
								},
								{
									"key": "serno",
									"value": "1",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "domobilerecharge(topup)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "userId",
								"value": "{{consumerId}}"
							},
							{
								"key": "userToken",
								"value": "{{consumerToken}}"
							},
							{
								"key": "aliasName",
								"value": "{{paypr}}"
							},
							{
								"key": "deviceType",
								"value": "PC"
							},
							{
								"key": "apiVersion",
								"value": "1"
							},
							{
								"key": "userAgent",
								"value": "Na"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-CSRFToken",
								"value": "yzyLhjXCFdKBmgnNPimwz1cTug3dqA0qmdE7wBMW268BeMpbeBoZxHRU852YYiRX",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"accountId\": 50,\n    \"serviceId\": 1,\n    \"aliasName\": \"{{paypr}}\",\n    \"billReferenceNo\": 1,\n    \"operatorId\": 1,\n    \"customerMobileNo\": \"{{mobileNo}}\",\n    \"deviceNo\": \"8765481\",\n    \"mrpAmount\": 23\n}"
						},
						"url": {
							"raw": "{{UtilityUrl}}/postLogin/transaction",
							"host": [
								"{{UtilityUrl}}"
							],
							"path": [
								"postLogin",
								"transaction"
							],
							"query": [
								{
									"key": "actionType",
									"value": "1",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Cashier",
			"item": [
				{
					"name": "BackofficeAPI",
					"item": [
						{
							"name": "BackOfficeToken",
							"item": [
								{
									"name": "get/token",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"pm.environment.set(\"BoToken\", jsonData.data.authToken);",
													"pm.environment.set(\"BoUserId\", jsonData.data.userId);",
													"",
													"",
													"",
													"",
													"//      pm.environment.set(\"BoUserId\", jsonData.responseData.userId)",
													"",
													"// let swicthCaseIteration = +pm.environment.get(\"swicthCaseIteration\");",
													"// if (jsonData.responseData.statusCode === 0 && swicthCaseIteration === 0) {",
													"//      pm.test(\"-------------------------1.Positive scenario Of get/token api With valid key Data.--------------------------------\");",
													"//      eval(pm.environment.get(\"IfTestCase\"))();",
													"     ",
													"//      pm.test(\"Message I am getting from Api is= \" + jsonData.responseData.message, function () { pm.expect(jsonData.responseData.message).to.eql(\"Success\") })",
													"// pm.test(\"Message I am getting from Api is= \" + jsonData.responseData.message, function () { pm.expect(jsonData.responseData.message).to.eql(\"Success\") })",
													"// pm.test(\"Status Code I am getting from Api is= \" + jsonData.responseData.statusCode, function () { pm.expect(+jsonData.responseData.statusCode).to.eql(0) })",
													"//      pm.test(\"authToken I am getting from Api is= \" + jsonData.responseData.authToken, function () { pm.expect(+jsonData.responseData.authToken).to.eql(+jsonData.responseData.authToken) })",
													"//      pm.test(\"timestamp I am getting from Api is= \" + jsonData.responseData.timestamp, function () { pm.expect(+jsonData.responseData.timestamp).to.eql(+jsonData.responseData.timestamp) })",
													"//      pm.test(\"expiryTime I am getting from Api is= \" + jsonData.responseData.expiryTime, function () { pm.expect(+jsonData.responseData.expiryTime).to.eql(+jsonData.responseData.expiryTime) })",
													"//      pm.test(\"issueAt I am getting from Api = \" + jsonData.responseData.issueAt, function () { pm.expect(+jsonData.responseData.issueAt).to.eql(+jsonData.responseData.issueAt) })",
													"//      pm.test(\"Login superBo User Id Is=\" + jsonData.responseData.userId);",
													"//      pm.test(\"passwordExpired is= \" + jsonData.responseData.passwordExpired, function () { pm.expect(jsonData.responseData.passwordExpired).to.eql(false) })",
													"//      pm.environment.set(\"swicthCaseIteration\", swicthCaseIteration + 1);",
													"//      postman.setNextRequest(\"SUPER_BO_LOGIN\");",
													"// }",
													"// else if (jsonData.responseData.statusCode > 0 && swicthCaseIteration === 1 || swicthCaseIteration === 2) {",
													"//      pm.test(\"-------------------------2.Negative scenario Of get/token api with invalid userName and Password.--------------------------------\");",
													"//      eval(pm.environment.get(\"IfTestCase\"))();",
													"//      pm.test(\"Message I am getting from Api is= \" + jsonData.responseData.message, function () { pm.expect(+jsonData.responseData.message) === (\"Incorrect UserName Or Password/PIN, Please Try Again\") })",
													"//      pm.test(\"Status Code I am getting from Api is= \" + jsonData.responseData.statusCode, function () { pm.expect(+jsonData.responseData.statusCode).to.eql(303) });",
													"//      pm.environment.set(\"swicthCaseIteration\", swicthCaseIteration + 1);",
													"//      postman.setNextRequest(\"SUPER_BO_LOGIN\")",
													"// }",
													"// else if (jsonData.responseData.statusCode > 0 && swicthCaseIteration === 3) {",
													"//      pm.test(\"-------------------------3.Negative scenario Of get/token api with invalid clientId.--------------------------------\");",
													"//      { eval(pm.environment.get(\"IfTestCase\"))(); }",
													"//      pm.environment.set(\"swicthCaseIteration\", swicthCaseIteration + 1);",
													"//      postman.setNextRequest(\"SUPER_BO_LOGIN\")",
													"// }",
													"// else if (jsonData.responseData.statusCode > 0 && swicthCaseIteration === 4) {",
													"//      pm.test(\"-------------------------4.Negative scenario Of get/token api with invalid clientSecret.--------------------------------\");",
													"//      { eval(pm.environment.get(\"IfTestCase\"))(); }",
													"//      pm.environment.set(\"swicthCaseIteration\", 0);",
													"//      postman.setNextRequest(\"validateUser\")",
													"// }",
													"// else {",
													"//      { eval(pm.environment.get(\"ElseTestCase\"))(); }",
													"//      pm.environment.set(\"swicthCaseIteration\", 0);",
													"// }"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// let swicthCaseIteration= +pm.environment.get(\"swicthCaseIteration\");\r",
													"// function sameLines()  {\r",
													"// pm.variables.set(\"userName\", \"skilrock\");\r",
													"// pm.variables.set(\"password\", 12345678);\r",
													"// pm.variables.set(\"clientId\", \"PAM\");\r",
													"// pm.variables.set(\"clientSecret\", \"ph2Nj5knd4IjWBVLc4mhmYHo1hQDEdS3FlIC2KskHpeHFhsqxD\");  }\r",
													"// switch(swicthCaseIteration) {\r",
													"//  case 0:\r",
													"// \tsameLines();  break;\r",
													"//  case 1:\r",
													"// \tsameLines();\r",
													"// \tpm.variables.set(\"userName\", null);  break;\r",
													"//  case 2:\r",
													"// \tsameLines();\r",
													"// \tpm.variables.set(\"password\", null);  break;\r",
													"//  case 3:\r",
													"// \tsameLines();\r",
													"// \tpm.variables.set(\"clientId\", null);  break;\r",
													"//  case 4:\r",
													"// \tsameLines();\r",
													"// \tpm.variables.set(\"clientSecret\", null);  break;  }\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"//VMFYq5Pz344-H8kuUUk1EedCUEPzeJAp2kl6Kddb2jE"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "userName",
												"value": "rishabh",
												"type": "text"
											},
											{
												"key": "password",
												"value": "12345678",
												"type": "text"
											},
											{
												"key": "clientId",
												"value": "UCM",
												"type": "text"
											},
											{
												"key": "clientSecret",
												"value": "ph2Nj5knd4IjWBVLc4mhmYHo1hQDEdS3FlIC2KskHpeHFhsqxD",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{UcmUrl}}/get/token",
											"host": [
												"{{UcmUrl}}"
											],
											"path": [
												"get",
												"token"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "AccountsManagement",
							"item": [
								{
									"name": "fetchAccountDocuments",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{BoToken}}"
											}
										],
										"url": {
											"raw": "{{CashierUrl}}/v1.0/fetchAccountDocuments?channelId=2&consumerAccId=2",
											"host": [
												"{{CashierUrl}}"
											],
											"path": [
												"v1.0",
												"fetchAccountDocuments"
											],
											"query": [
												{
													"key": "channelId",
													"value": "2"
												},
												{
													"key": "consumerAccId",
													"value": "2"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "fetchBankNameList",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{BoToken}}"
											}
										],
										"url": {
											"raw": "{{CashierUrl}}/v1.0/fetchBankNameList?channelId=2",
											"host": [
												"{{CashierUrl}}"
											],
											"path": [
												"v1.0",
												"fetchBankNameList"
											],
											"query": [
												{
													"key": "channelId",
													"value": "2"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "fetchUnverifiedAccount",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{BoToken}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bankName\": \"string\",\n    \"channelId\": 2,\n    \"consumerName\": null,\n    \"fromDate\": \"2022-11-01\",\n    \"systemUserId\": 1,\n    \"toDate\": \"2022-11-15\"\n}"
										},
										"url": {
											"raw": "{{CashierUrl}}/v1.0/fetchUnverifiedAccount",
											"host": [
												"{{CashierUrl}}"
											],
											"path": [
												"v1.0",
												"fetchUnverifiedAccount"
											]
										}
									},
									"response": []
								},
								{
									"name": "updateAccountDetails",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Authorization",
												"value": "Bearer XXXX"
											}
										],
										"url": {
											"raw": "{{CashierUrl}}/v1.0/updateAccountDetails?channelId=1&consumerAccId=1&documents%5B0%5D.docName=1&documents%5B0%5D.docPath=1&documents%5B0%5D.docType=1&remark=1&status=1&statusFlag=1",
											"host": [
												"{{CashierUrl}}"
											],
											"path": [
												"v1.0",
												"updateAccountDetails"
											],
											"query": [
												{
													"key": "channelId",
													"value": "1"
												},
												{
													"key": "consumerAccId",
													"value": "1"
												},
												{
													"key": "documents%5B0%5D.docName",
													"value": "1"
												},
												{
													"key": "documents%5B0%5D.docPath",
													"value": "1"
												},
												{
													"key": "documents%5B0%5D.docType",
													"value": "1"
												},
												{
													"key": "remark",
													"value": "1"
												},
												{
													"key": "status",
													"value": "1"
												},
												{
													"key": "statusFlag",
													"value": "1"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "AliasManagement",
							"item": [
								{
									"name": "getChannelAlias",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{BoToken}}"
											}
										],
										"url": {
											"raw": "{{CashierUrl}}/v1.0/alias/getChannelAlias?businessId=2&channelId=2",
											"host": [
												"{{CashierUrl}}"
											],
											"path": [
												"v1.0",
												"alias",
												"getChannelAlias"
											],
											"query": [
												{
													"key": "businessId",
													"value": "2"
												},
												{
													"key": "channelId",
													"value": "2"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "BackofficeManagement",
							"item": [
								{
									"name": "fetchAllocationBankList",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{BoToken}}"
											}
										],
										"url": {
											"raw": "{{CashierUrl}}/v1.0/fetchAllocationBankList?businessId=2&channelId=2",
											"host": [
												"{{CashierUrl}}"
											],
											"path": [
												"v1.0",
												"fetchAllocationBankList"
											],
											"query": [
												{
													"key": "businessId",
													"value": "2"
												},
												{
													"key": "channelId",
													"value": "2"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "fetchAvailableWithdrawalType",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{BoToken}}"
											}
										],
										"url": {
											"raw": "{{CashierUrl}}/v1.0/fetchAvailableWithdrawalType?businessId=2&channelId=2",
											"host": [
												"{{CashierUrl}}"
											],
											"path": [
												"v1.0",
												"fetchAvailableWithdrawalType"
											],
											"query": [
												{
													"key": "businessId",
													"value": "2"
												},
												{
													"key": "channelId",
													"value": "2"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "fetchChannelProviderList",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{BoToken}}"
											}
										],
										"url": {
											"raw": "{{CashierUrl}}/v1.0/fetchChannelProviderList?businessId=2&channelId=2",
											"host": [
												"{{CashierUrl}}"
											],
											"path": [
												"v1.0",
												"fetchChannelProviderList"
											],
											"query": [
												{
													"key": "businessId",
													"value": "2"
												},
												{
													"key": "channelId",
													"value": "2"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "getLoginData",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{BoToken}}"
											}
										],
										"url": {
											"raw": "{{CashierUrl}}/v1.0/getLoginData",
											"host": [
												"{{CashierUrl}}"
											],
											"path": [
												"v1.0",
												"getLoginData"
											]
										}
									},
									"response": []
								},
								{
									"name": "getUserMenus",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{BoToken}}"
											}
										],
										"url": {
											"raw": "{{CashierUrl}}/v1.0/getUserMenus?appType=Web_Panel&engineCode=CASHIER&languageCode=en&userId={{BoUserId}}&userRequired=NO",
											"host": [
												"{{CashierUrl}}"
											],
											"path": [
												"v1.0",
												"getUserMenus"
											],
											"query": [
												{
													"key": "appType",
													"value": "Web_Panel"
												},
												{
													"key": "engineCode",
													"value": "CASHIER"
												},
												{
													"key": "languageCode",
													"value": "en"
												},
												{
													"key": "userId",
													"value": "{{BoUserId}}"
												},
												{
													"key": "userRequired",
													"value": "NO"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "validateUser",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{BoToken}}"
											}
										],
										"url": {
											"raw": "{{CashierUrl}}/v1.0/validateUser?userId=10",
											"host": [
												"{{CashierUrl}}"
											],
											"path": [
												"v1.0",
												"validateUser"
											],
											"query": [
												{
													"key": "userId",
													"value": "10"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "BatchManagement",
							"item": [
								{
									"name": "fetchBatch",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{BoToken}}"
											}
										],
										"url": {
											"raw": "{{CashierUrl}}/v1.0/fetchBetch?batchType=1&channelId=1&endDate=1&startDate=1",
											"host": [
												"{{CashierUrl}}"
											],
											"path": [
												"v1.0",
												"fetchBetch"
											],
											"query": [
												{
													"key": "batchType",
													"value": "1"
												},
												{
													"key": "channelId",
													"value": "1"
												},
												{
													"key": "endDate",
													"value": "1"
												},
												{
													"key": "startDate",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "fetchBatchDetail",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{BoToken}}"
											}
										],
										"url": {
											"raw": "{{CashierUrl}}/v1.0/fetchBatchDetail?channelId=2",
											"host": [
												"{{CashierUrl}}"
											],
											"path": [
												"v1.0",
												"fetchBatchDetail"
											],
											"query": [
												{
													"key": "batchId",
													"value": "1",
													"disabled": true
												},
												{
													"key": "channelId",
													"value": "2"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "sendMail",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{BoToken}}"
											}
										],
										"url": {
											"raw": "{{CashierUrl}}/v1.0/sendMail?batchId=1&channelId=2&emailIds=rishabh.0538@gmail.com",
											"host": [
												"{{CashierUrl}}"
											],
											"path": [
												"v1.0",
												"sendMail"
											],
											"query": [
												{
													"key": "batchId",
													"value": "1"
												},
												{
													"key": "channelId",
													"value": "2"
												},
												{
													"key": "emailIds",
													"value": "rishabh.0538@gmail.com"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "updateBankBatch",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{BoToken}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bankBatchCode\": \"BANK_TRANS\",\n    \"batchId\": 1,\n    \"channelId\":2\n}"
										},
										"url": {
											"raw": "{{CashierUrl}}/v1.0/updateBankBatch",
											"host": [
												"{{CashierUrl}}"
											],
											"path": [
												"v1.0",
												"updateBankBatch"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "BusinessManagement",
							"item": [
								{
									"name": "getBusinessList",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{BoToken}}"
											}
										],
										"url": {
											"raw": "{{CashierUrl}}/v1.0/getBusinessList",
											"host": [
												"{{CashierUrl}}"
											],
											"path": [
												"v1.0",
												"getBusinessList"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "ChannelManagement",
							"item": [
								{
									"name": "getChannel",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{BoToken}}"
											}
										],
										"url": {
											"raw": "{{CashierUrl}}/v1.0/getChannel?businessId=2",
											"host": [
												"{{CashierUrl}}"
											],
											"path": [
												"v1.0",
												"getChannel"
											],
											"query": [
												{
													"key": "businessId",
													"value": "2"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "getChannelConfig",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{BoToken}}"
											}
										],
										"url": {
											"raw": "{{CashierUrl}}/v1.0/getChannelConfig?businessId=2&channelId=2&configType=2",
											"host": [
												"{{CashierUrl}}"
											],
											"path": [
												"v1.0",
												"getChannelConfig"
											],
											"query": [
												{
													"key": "businessId",
													"value": "2"
												},
												{
													"key": "channelId",
													"value": "2"
												},
												{
													"key": "configType",
													"value": "2"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "ConsumerManagment",
							"item": [
								{
									"name": "getConsumerDetails",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{BoToken}}"
											}
										],
										"url": {
											"raw": "{{CashierUrl}}/v1.0/getConsumerDetails?businessId=2&channelId=2&systemUserId={{consumerId}}",
											"host": [
												"{{CashierUrl}}"
											],
											"path": [
												"v1.0",
												"getConsumerDetails"
											],
											"query": [
												{
													"key": "businessId",
													"value": "2"
												},
												{
													"key": "channelId",
													"value": "2"
												},
												{
													"key": "systemUserId",
													"value": "{{consumerId}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "fetchBalance",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{BoToken}}"
											},
											{
												"key": "merchantId",
												"value": "1",
												"disabled": true
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"aliasName\": \"{{paypr}}\",\n    \"systemconsumerId\": {{consumerId}}\n}"
										},
										"url": {
											"raw": "{{CashierUrl}}/v1.0/fetchBalance",
											"host": [
												"{{CashierUrl}}"
											],
											"path": [
												"v1.0",
												"fetchBalance"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "DisputeSettlement",
							"item": [
								{
									"name": "getDisputeTransaction",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{BoToken}}"
											}
										],
										"url": {
											"raw": "https://cashier-backend.sapidblue.in/v1.0/getDisputeTransaction?businessId=2&channelId=2&fromDate=2022-10-01&toDate=2022-11-15&txnType=DEPOSIT",
											"protocol": "https",
											"host": [
												"cashier-backend",
												"sapidblue",
												"in"
											],
											"path": [
												"v1.0",
												"getDisputeTransaction"
											],
											"query": [
												{
													"key": "businessId",
													"value": "2"
												},
												{
													"key": "channelId",
													"value": "2"
												},
												{
													"key": "fromDate",
													"value": "2022-10-01"
												},
												{
													"key": "providerId",
													"value": "2",
													"disabled": true
												},
												{
													"key": "toDate",
													"value": "2022-11-15"
												},
												{
													"key": "txnType",
													"value": "DEPOSIT"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "rejectDisputedTransaction",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{BoToken}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"businessId\": 2,\n    \"channelId\": 2,\n    \"disputeId\": 1\n}"
										},
										"url": {
											"raw": "https://cashier-backend.sapidblue.in/v1.0/rejectDisputedTransaction",
											"protocol": "https",
											"host": [
												"cashier-backend",
												"sapidblue",
												"in"
											],
											"path": [
												"v1.0",
												"rejectDisputedTransaction"
											]
										}
									},
									"response": []
								},
								{
									"name": "getSystemTransaction",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{BoToken}}"
											}
										],
										"url": {
											"raw": "{{CashierUrl}}/v1.0/getSystemTransaction?accNum=123455&amount=10&businessId=2&channelId=2&providerId=2&txnDate=2022-11-01",
											"host": [
												"{{CashierUrl}}"
											],
											"path": [
												"v1.0",
												"getSystemTransaction"
											],
											"query": [
												{
													"key": "accNum",
													"value": "123455"
												},
												{
													"key": "amount",
													"value": "10"
												},
												{
													"key": "businessId",
													"value": "2"
												},
												{
													"key": "channelId",
													"value": "2"
												},
												{
													"key": "providerId",
													"value": "2"
												},
												{
													"key": "txnDate",
													"value": "2022-11-01"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "rejectDisputedTransaction",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{BoToken}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"businessId\": 2,\n    \"channelId\": 2,\n    \"disputeId\": 2\n}"
										},
										"url": {
											"raw": "{{CashierUrl}}/v1.0/rejectDisputedTransaction",
											"host": [
												"{{CashierUrl}}"
											],
											"path": [
												"v1.0",
												"rejectDisputedTransaction"
											]
										}
									},
									"response": []
								},
								{
									"name": "settleDisputeTransaction",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{BoToken}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"businessId\": 2,\n    \"channelId\": 2,\n    \"disputeId\": 1,\n    \"id\": 1,\n    \"providerRefNo\": \"1\",\n    \"providerTxnId\": \"1\"\n}"
										},
										"url": {
											"raw": "{{CashierUrl}}/v1.0/settleDisputeTransaction",
											"host": [
												"{{CashierUrl}}"
											],
											"path": [
												"v1.0",
												"settleDisputeTransaction"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Manual AllocationManagement",
							"item": [
								{
									"name": "getCountryName",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{BoToken}}"
											}
										],
										"url": {
											"raw": "{{CashierUrl}}/v1.0/getCountryName",
											"host": [
												"{{CashierUrl}}"
											],
											"path": [
												"v1.0",
												"getCountryName"
											]
										}
									},
									"response": []
								},
								{
									"name": "generatePaymentCorrectionRequest",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"pm.environment.set(\"PayCRequestId\", jsonData.data.requestId);",
													"pm.environment.set(\"status\", jsonData.data.status);",
													"",
													"",
													"",
													"",
													"//      pm.environment.set(\"BoUserId\", jsonData.responseData.userId)",
													"",
													"// let swicthCaseIteration = +pm.environment.get(\"swicthCaseIteration\");",
													"// if (jsonData.responseData.statusCode === 0 && swicthCaseIteration === 0) {",
													"//      pm.test(\"-------------------------1.Positive scenario Of get/token api With valid key Data.--------------------------------\");",
													"//      eval(pm.environment.get(\"IfTestCase\"))();",
													"     ",
													"//      pm.test(\"Message I am getting from Api is= \" + jsonData.responseData.message, function () { pm.expect(jsonData.responseData.message).to.eql(\"Success\") })",
													"// pm.test(\"Message I am getting from Api is= \" + jsonData.responseData.message, function () { pm.expect(jsonData.responseData.message).to.eql(\"Success\") })",
													"// pm.test(\"Status Code I am getting from Api is= \" + jsonData.responseData.statusCode, function () { pm.expect(+jsonData.responseData.statusCode).to.eql(0) })",
													"//      pm.test(\"authToken I am getting from Api is= \" + jsonData.responseData.authToken, function () { pm.expect(+jsonData.responseData.authToken).to.eql(+jsonData.responseData.authToken) })",
													"//      pm.test(\"timestamp I am getting from Api is= \" + jsonData.responseData.timestamp, function () { pm.expect(+jsonData.responseData.timestamp).to.eql(+jsonData.responseData.timestamp) })",
													"//      pm.test(\"expiryTime I am getting from Api is= \" + jsonData.responseData.expiryTime, function () { pm.expect(+jsonData.responseData.expiryTime).to.eql(+jsonData.responseData.expiryTime) })",
													"//      pm.test(\"issueAt I am getting from Api = \" + jsonData.responseData.issueAt, function () { pm.expect(+jsonData.responseData.issueAt).to.eql(+jsonData.responseData.issueAt) })",
													"//      pm.test(\"Login superBo User Id Is=\" + jsonData.responseData.userId);",
													"//      pm.test(\"passwordExpired is= \" + jsonData.responseData.passwordExpired, function () { pm.expect(jsonData.responseData.passwordExpired).to.eql(false) })",
													"//      pm.environment.set(\"swicthCaseIteration\", swicthCaseIteration + 1);",
													"//      postman.setNextRequest(\"SUPER_BO_LOGIN\");",
													"// }",
													"// else if (jsonData.responseData.statusCode > 0 && swicthCaseIteration === 1 || swicthCaseIteration === 2) {",
													"//      pm.test(\"-------------------------2.Negative scenario Of get/token api with invalid userName and Password.--------------------------------\");",
													"//      eval(pm.environment.get(\"IfTestCase\"))();",
													"//      pm.test(\"Message I am getting from Api is= \" + jsonData.responseData.message, function () { pm.expect(+jsonData.responseData.message) === (\"Incorrect UserName Or Password/PIN, Please Try Again\") })",
													"//      pm.test(\"Status Code I am getting from Api is= \" + jsonData.responseData.statusCode, function () { pm.expect(+jsonData.responseData.statusCode).to.eql(303) });",
													"//      pm.environment.set(\"swicthCaseIteration\", swicthCaseIteration + 1);",
													"//      postman.setNextRequest(\"SUPER_BO_LOGIN\")",
													"// }",
													"// else if (jsonData.responseData.statusCode > 0 && swicthCaseIteration === 3) {",
													"//      pm.test(\"-------------------------3.Negative scenario Of get/token api with invalid clientId.--------------------------------\");",
													"//      { eval(pm.environment.get(\"IfTestCase\"))(); }",
													"//      pm.environment.set(\"swicthCaseIteration\", swicthCaseIteration + 1);",
													"//      postman.setNextRequest(\"SUPER_BO_LOGIN\")",
													"// }",
													"// else if (jsonData.responseData.statusCode > 0 && swicthCaseIteration === 4) {",
													"//      pm.test(\"-------------------------4.Negative scenario Of get/token api with invalid clientSecret.--------------------------------\");",
													"//      { eval(pm.environment.get(\"IfTestCase\"))(); }",
													"//      pm.environment.set(\"swicthCaseIteration\", 0);",
													"//      postman.setNextRequest(\"validateUser\")",
													"// }",
													"// else {",
													"//      { eval(pm.environment.get(\"ElseTestCase\"))(); }",
													"//      pm.environment.set(\"swicthCaseIteration\", 0);",
													"// }"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{BoToken}}"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "amount",
													"value": "15",
													"type": "text"
												},
												{
													"key": "channelId",
													"value": "2",
													"type": "text"
												},
												{
													"key": "consumerId",
													"value": "137",
													"type": "text"
												},
												{
													"key": "reasonAllocation",
													"value": "Deposit allocation",
													"type": "text"
												},
												{
													"key": "remark",
													"value": "remark",
													"type": "text"
												},
												{
													"key": "requesterRemark",
													"value": "comment",
													"type": "text"
												},
												{
													"key": "sendSms",
													"value": "no",
													"type": "text"
												},
												{
													"key": "smsCharges",
													"value": "no",
													"type": "text"
												},
												{
													"key": "txnType",
													"value": "WITHDRAWAL",
													"type": "text"
												},
												{
													"key": "withdrawalImpact",
													"value": "yes",
													"type": "text"
												},
												{
													"key": "document",
													"type": "file",
													"src": "/home/stpl/Desktop/Test.jpg"
												}
											]
										},
										"url": {
											"raw": "{{CashierUrl}}/v1.0/generatePaymentCorrectionRequest",
											"host": [
												"{{CashierUrl}}"
											],
											"path": [
												"v1.0",
												"generatePaymentCorrectionRequest"
											]
										}
									},
									"response": []
								},
								{
									"name": "fetchCorrectionRequest",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{BoToken}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"channelId\": 2,\n    \"businessId\":2,\n    \"status\": \"REQUESTED\"\n}"
										},
										"url": {
											"raw": "{{CashierUrl}}/v1.0/fetchCorrectionRequest",
											"host": [
												"{{CashierUrl}}"
											],
											"path": [
												"v1.0",
												"fetchCorrectionRequest"
											]
										}
									},
									"response": []
								},
								{
									"name": "fetchCorrectionRequestDetailsByRequestId",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{BoToken}}"
											}
										],
										"url": {
											"raw": "{{CashierUrl}}/v1.0/fetchCorrectionRequestDetailsByRequestId",
											"host": [
												"{{CashierUrl}}"
											],
											"path": [
												"v1.0",
												"fetchCorrectionRequestDetailsByRequestId"
											],
											"query": [
												{
													"key": "requestId",
													"value": "2",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "updateCorrectionRequest",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{BoToken}}"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "document",
													"type": "file",
													"src": "/home/stpl/Documents/Doc.jpeg"
												},
												{
													"key": "remark",
													"value": "we",
													"type": "text"
												},
												{
													"key": "requestId",
													"value": "{{PayCRequestId}}",
													"type": "text"
												},
												{
													"key": "status",
													"value": "APPROVED_FIRST",
													"description": "REQUESTED, APPROVED_FIRST",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{CashierUrl}}/v1.0/updateCorrectionRequest",
											"host": [
												"{{CashierUrl}}"
											],
											"path": [
												"v1.0",
												"updateCorrectionRequest"
											]
										}
									},
									"response": []
								},
								{
									"name": "cancelCorrectionRequest",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{BoToken}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cancelRemark\": \"cancel Remarks\",\n    \"requestId\": 40\n}"
										},
										"url": {
											"raw": "{{CashierUrl}}/v1.0/cancelCorrectionRequest",
											"host": [
												"{{CashierUrl}}"
											],
											"path": [
												"v1.0",
												"cancelCorrectionRequest"
											]
										}
									},
									"response": []
								},
								{
									"name": "fetchWithdrawalRequestDetailsByRequestId",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{BoToken}}"
											}
										],
										"url": {
											"raw": "{{CashierUrl}}/v1.0/fetchWithdrawalRequestDetailsByRequestId?requestId=1",
											"host": [
												"{{CashierUrl}}"
											],
											"path": [
												"v1.0",
												"fetchWithdrawalRequestDetailsByRequestId"
											],
											"query": [
												{
													"key": "requestId",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "fetchWithdrawalRequest",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{BoToken}}"
											}
										],
										"url": {
											"raw": "{{CashierUrl}}/v1.0/fetchWithdrawalRequest?businessId=2&channelId=2&countryId=1&device=PC&fromDate=2022-11-01&paymentTypeId=2&status=REQUESTED&toDate=2022-11-14",
											"host": [
												"{{CashierUrl}}"
											],
											"path": [
												"v1.0",
												"fetchWithdrawalRequest"
											],
											"query": [
												{
													"key": "businessId",
													"value": "2"
												},
												{
													"key": "channelId",
													"value": "2"
												},
												{
													"key": "countryId",
													"value": "1"
												},
												{
													"key": "device",
													"value": "PC"
												},
												{
													"key": "fromDate",
													"value": "2022-11-01"
												},
												{
													"key": "paymentTypeId",
													"value": "2"
												},
												{
													"key": "status",
													"value": "REQUESTED"
												},
												{
													"key": "toDate",
													"value": "2022-11-14"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "cancelWithdrawalRequest",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{BoToken}}"
											}
										],
										"url": {
											"raw": "{{CashierUrl}}/v1.0/cancelWithdrawalRequest?cancleRemark=remarks&requestId=1",
											"host": [
												"{{CashierUrl}}"
											],
											"path": [
												"v1.0",
												"cancelWithdrawalRequest"
											],
											"query": [
												{
													"key": "cancleRemark",
													"value": "remarks"
												},
												{
													"key": "requestId",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "cancelBulkWithdrawalRequest",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{BoToken}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cancleRemark\": \"wydude\",\n    \"requestIdList\": [\n        1\n    ]\n}"
										},
										"url": {
											"raw": "{{CashierUrl}}/v1.0/cancelBulkWithdrawalRequest",
											"host": [
												"{{CashierUrl}}"
											],
											"path": [
												"v1.0",
												"cancelBulkWithdrawalRequest"
											]
										}
									},
									"response": []
								},
								{
									"name": "updateWithdrawalRequest",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{BoToken}}"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "remark",
													"value": "remarks",
													"type": "text"
												},
												{
													"key": "requestId",
													"value": "1",
													"type": "text"
												},
												{
													"key": "status",
													"value": "ACTIVE",
													"type": "text"
												},
												{
													"key": "document",
													"type": "file",
													"src": "/home/stpl/Documents/Doc.jpeg"
												}
											]
										},
										"url": {
											"raw": "{{CashierUrl}}/v1.0/updateWithdrawalRequest",
											"host": [
												"{{CashierUrl}}"
											],
											"path": [
												"v1.0",
												"updateWithdrawalRequest"
											]
										}
									},
									"response": []
								},
								{
									"name": "updateBulkWithdrawalRequest",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{BoToken}}"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "document",
													"type": "file",
													"src": "/home/stpl/Documents/Doc.jpeg"
												},
												{
													"key": "remark",
													"value": "12",
													"type": "text"
												},
												{
													"key": "requestIdList[0]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "status",
													"value": "ACTIVE",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{CashierUrl}}/v1.0/updateBulkWithdrawalRequest",
											"host": [
												"{{CashierUrl}}"
											],
											"path": [
												"v1.0",
												"updateBulkWithdrawalRequest"
											]
										}
									},
									"response": []
								},
								{
									"name": "generateAllocationRequest",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{BoToken}}"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "actualMobile",
													"value": "{{mobileNo}}",
													"type": "text"
												},
												{
													"key": "amount",
													"value": "120",
													"type": "text"
												},
												{
													"key": "bank",
													"value": "bank name",
													"type": "text"
												},
												{
													"key": "channelId",
													"value": "2",
													"type": "text"
												},
												{
													"key": "id",
													"value": "1",
													"type": "text"
												},
												{
													"key": "notes",
													"value": "notes",
													"type": "text"
												},
												{
													"key": "requestMobile",
													"value": "0",
													"type": "text"
												},
												{
													"key": "requesterRemark",
													"value": "requesterRemarks",
													"type": "text"
												},
												{
													"key": "tpProviderTxnId",
													"value": "12",
													"type": "text"
												},
												{
													"key": "txnType",
													"value": "DEPOSIT",
													"type": "text"
												},
												{
													"key": "supportDoc",
													"type": "file",
													"src": "/home/stpl/Documents/Doc.jpeg"
												},
												{
													"key": "depositReceipt",
													"type": "file",
													"src": "/home/stpl/Documents/Doc.jpeg"
												}
											]
										},
										"url": {
											"raw": "{{CashierUrl}}/v1.0/generateAllocationRequest",
											"host": [
												"{{CashierUrl}}"
											],
											"path": [
												"v1.0",
												"generateAllocationRequest"
											]
										}
									},
									"response": []
								},
								{
									"name": "fetchAllocationRequest",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{BoToken}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bankName\": null,\n    \"channelId\": 2,\n    \"fromDate\": \"2022-11-01\",\n    \"requestId\": null,\n    \"status\": \"REQUESTED\",\n    \"toDate\": \"2022-11-14\"\n}"
										},
										"url": {
											"raw": "{{CashierUrl}}/v1.0/fetchAllocationRequest",
											"host": [
												"{{CashierUrl}}"
											],
											"path": [
												"v1.0",
												"fetchAllocationRequest"
											]
										}
									},
									"response": []
								},
								{
									"name": "cancelAllocationRequest",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{BoToken}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cancelRemark\": \"remarks\",\n    \"requestId\": \"1\"\n}"
										},
										"url": {
											"raw": "{{CashierUrl}}/v1.0/cancelAllocationRequest",
											"host": [
												"{{CashierUrl}}"
											],
											"path": [
												"v1.0",
												"cancelAllocationRequest"
											]
										}
									},
									"response": []
								},
								{
									"name": "fetchAllocationRequestDetailsByRequestId",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Authorization",
												"value": "Bearer XXXX"
											}
										],
										"url": {
											"raw": "{{CashierUrl}}/v1.0/fetchAllocationRequestDetailsByRequestId?requestId=1",
											"host": [
												"{{CashierUrl}}"
											],
											"path": [
												"v1.0",
												"fetchAllocationRequestDetailsByRequestId"
											],
											"query": [
												{
													"key": "requestId",
													"value": "1"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "ReportManagement",
							"item": [
								{
									"name": "getStatus",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{BoToken}}"
											}
										],
										"url": {
											"raw": "https://cashier-backend.sapidblue.in/v1.0/getStatus",
											"protocol": "https",
											"host": [
												"cashier-backend",
												"sapidblue",
												"in"
											],
											"path": [
												"v1.0",
												"getStatus"
											]
										}
									},
									"response": []
								},
								{
									"name": "getBoCorrectionReport",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{BoToken}}"
											}
										],
										"url": {
											"raw": "{{CashierUrl}}/v1.0/getBoCorrectionReport?businessId=2&channelId=2&fromDate=2022-10-01&toDate=2022-11-15",
											"host": [
												"{{CashierUrl}}"
											],
											"path": [
												"v1.0",
												"getBoCorrectionReport"
											],
											"query": [
												{
													"key": "businessId",
													"value": "2"
												},
												{
													"key": "channelId",
													"value": "2"
												},
												{
													"key": "fromDate",
													"value": "2022-10-01"
												},
												{
													"key": "toDate",
													"value": "2022-11-15"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "getBankingProfileReport",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Authorization",
												"value": "Bearer XXXX"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{ \"accNumber\": \"string\", \"accRegDate\": \"string\", \"accType\": \"string\", \"businessId\": 0, \"channelId\": 0, \"consumerId\": 0, \"email\": \"string\", \"fromCreatedAt\": \"string\", \"fromVerificationAt\": \"string\", \"mobileNo\": \"string\", \"name\": \"string\", \"offset\": 0, \"otpVerified\": \"string\", \"reportType\": \"string\", \"rsaId\": \"string\", \"status\": [ \"string\" ], \"subTypeId\": 0, \"surname\": \"string\", \"toCreatedAt\": \"string\", \"toVerificationAt\": \"string\", \"verificationAt\": \"string\", \"verificationStatus\": \"string\", \"verifiedBy\": 0}"
										},
										"url": {
											"raw": "https://cashier-backend.sapidblue.in/v1.0/getBankingProfileReport",
											"protocol": "https",
											"host": [
												"cashier-backend",
												"sapidblue",
												"in"
											],
											"path": [
												"v1.0",
												"getBankingProfileReport"
											]
										}
									},
									"response": []
								},
								{
									"name": "getConsumerWithdrawalReport",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{BoToken}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"aliasId\": 2,\n    \"businessId\": 2,\n    \"channelId\": 2,\n    \"fromDate\": \"2022-11-01\",\n    \"status\": [\n        null\n    ],\n    \"toDate\": \"2022-11-14\",\n    \"username\": null\n}"
										},
										"url": {
											"raw": "{{CashierUrl}}/v1.0/getConsumerWithdrawalReport",
											"host": [
												"{{CashierUrl}}"
											],
											"path": [
												"v1.0",
												"getConsumerWithdrawalReport"
											]
										}
									},
									"response": []
								},
								{
									"name": "getConsumerWithdrawalStatusReport",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{BoToken}}"
											}
										],
										"url": {
											"raw": "{{CashierUrl}}/v1.0/getConsumerWithdrawalStatusReport?aliasId=2&businessId=2&channelId=2&fromDate=2022-11-01&toDate=2022-11-15&type=CONSUMER",
											"host": [
												"{{CashierUrl}}"
											],
											"path": [
												"v1.0",
												"getConsumerWithdrawalStatusReport"
											],
											"query": [
												{
													"key": "aliasId",
													"value": "2"
												},
												{
													"key": "businessId",
													"value": "2"
												},
												{
													"key": "channelId",
													"value": "2"
												},
												{
													"key": "fromDate",
													"value": "2022-11-01"
												},
												{
													"key": "toDate",
													"value": "2022-11-15"
												},
												{
													"key": "type",
													"value": "CONSUMER"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "getDepositStatusReport",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{BoToken}}"
											}
										],
										"url": {
											"raw": "{{CashierUrl}}/v1.0/getDepositStatusReport?aliasId=2&businessId=2&channelId=2&fromDate=2022-11-01&toDate=2022-11-11&type=VIEW",
											"host": [
												"{{CashierUrl}}"
											],
											"path": [
												"v1.0",
												"getDepositStatusReport"
											],
											"query": [
												{
													"key": "aliasId",
													"value": "2"
												},
												{
													"key": "businessId",
													"value": "2"
												},
												{
													"key": "channelId",
													"value": "2"
												},
												{
													"key": "fromDate",
													"value": "2022-11-01"
												},
												{
													"key": "toDate",
													"value": "2022-11-11"
												},
												{
													"key": "type",
													"value": "VIEW"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "getDepositWithdrawalReport",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{BoToken}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"aliasId\": 2,\n    \"channelId\": 2,\n    \"fromDate\": \"2022-11-01\",\n    \"requestId\": \"1\",\n    \"status\": [\n        \"ACTIVE\"\n    ],\n    \"toDate\": \"2022-11-01\",\n    \"txnType\": \"DEPOSIT\",\n    \"username\": null\n}"
										},
										"url": {
											"raw": "{{CashierUrl}}/v1.0/getDepositWithdrawalReport",
											"host": [
												"{{CashierUrl}}"
											],
											"path": [
												"v1.0",
												"getDepositWithdrawalReport"
											]
										}
									},
									"response": []
								},
								{
									"name": "getWithdrawalBatchReport",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{BoToken}}"
											}
										],
										"url": {
											"raw": "{{CashierUrl}}/v1.0/getWithdrawalBatchReport?batchId=1&channelId=2",
											"host": [
												"{{CashierUrl}}"
											],
											"path": [
												"v1.0",
												"getWithdrawalBatchReport"
											],
											"query": [
												{
													"key": "batchId",
													"value": "1"
												},
												{
													"key": "channelId",
													"value": "2"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "voucherReport",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{BoToken}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"businessId\": 2,\n    \"channelId\": 2,\n    \"consumerId\": {{consumerId}},\n    \"consumerMobile\": \"{{mobileNo}}\",\n    \"consumerName\": null\n}"
										},
										"url": {
											"raw": "{{CashierUrl}}/v1.0/voucherReport",
											"host": [
												"{{CashierUrl}}"
											],
											"path": [
												"v1.0",
												"voucherReport"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "UserManagement",
							"item": [
								{
									"name": "getUserType",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{BoToken}}"
											}
										],
										"url": {
											"raw": "https://cashier-backend.sapidblue.in/v1.0/user/getUserType?businessId=2",
											"protocol": "https",
											"host": [
												"cashier-backend",
												"sapidblue",
												"in"
											],
											"path": [
												"v1.0",
												"user",
												"getUserType"
											],
											"query": [
												{
													"key": "businessId",
													"value": "2"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "userSearch",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{BoToken}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"businessId\": 2,\n    \"channelId\": 2,\n    \"aliasId\":2,\n    \"userType\": \"CONSUMER\",\n    \"userName\":\"1868666\"\n}"
										},
										"url": {
											"raw": "{{CashierUrl}}/v1.0/userSearch",
											"host": [
												"{{CashierUrl}}"
											],
											"path": [
												"v1.0",
												"userSearch"
											]
										}
									},
									"response": []
								},
								{
									"name": "userSearch_clone",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Authorization",
												"value": "Bearer 12"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"aliasId\": 0,\n    \"businessId\": 0,\n    \"channelId\": 0,\n    \"city\": \"string\",\n    \"country\": \"string\",\n    \"createdAt\": \"string\",\n    \"email\": \"string\",\n    \"firstName\": \"string\",\n    \"groupName\": \"string\",\n    \"lastName\": \"string\",\n    \"limit\": 0,\n    \"middleName\": \"string\",\n    \"mobileCode\": \"string\",\n    \"mobileNo\": \"string\",\n    \"offset\": 0,\n    \"state\": \"string\",\n    \"status\": \"string\",\n    \"userId\": 0,\n    \"userIdList\": [\n        0\n    ],\n    \"userName\": \"string\",\n    \"userType\": \"string\"\n}"
										},
										"url": {
											"raw": "https://cashier-backend.sapidblue.in/v1.0/userSearch",
											"protocol": "https",
											"host": [
												"cashier-backend",
												"sapidblue",
												"in"
											],
											"path": [
												"v1.0",
												"userSearch"
											]
										}
									},
									"response": []
								},
								{
									"name": "updateUser",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Authorization",
												"value": "Bearer XXXX"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"addressOne\": \"string\",\n    \"addressTwo\": \"string\",\n    \"aliasName\": \"string\",\n    \"businessId\": 2,\n    \"channelId\": 2,\n    \"systemUserId\": \"{{consumerId}}\",\n   \n}"
										},
										"url": {
											"raw": "https://cashier-backend.sapidblue.in/v1.0/updateUser",
											"protocol": "https",
											"host": [
												"cashier-backend",
												"sapidblue",
												"in"
											],
											"path": [
												"v1.0",
												"updateUser"
											]
										}
									},
									"response": []
								},
								{
									"name": "updateUser_clone",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Authorization",
												"value": "Bearer XXXX"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{ \"addressOne\": \"string\", \"addressTwo\": \"string\", \"aliasName\": \"string\", \"businessId\": 0, \"channelId\": 0, \"cityCode\": \"string\", \"countryCode\": \"string\", \"currencyCode\": \"string\", \"dateOfRegistration\": \"2022-11-10T15:30:18.007Z\", \"emailId\": \"string\", \"fcmIdAndroid\": \"string\", \"fcmIdIos\": \"string\", \"firstName\": \"string\", \"lastName\": \"string\", \"middleName\": \"string\", \"mobileCode\": \"string\", \"mobileNo\": \"string\", \"profileStatus\": \"string\", \"rsaId\": \"string\", \"stateCode\": \"string\", \"systemUserId\": \"string\", \"userStatus\": \"string\", \"userType\": \"string\", \"username\": \"string\", \"zipCode\": \"string\"}"
										},
										"url": {
											"raw": "https://cashier-backend.sapidblue.in/v1.0/updateUser",
											"protocol": "https",
											"host": [
												"cashier-backend",
												"sapidblue",
												"in"
											],
											"path": [
												"v1.0",
												"updateUser"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "ConsumerAPI",
					"item": [
						{
							"name": "playerLogin PC BROWSER",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											" var jsonData = JSON.parse(responseBody);\r",
											"pm.environment.set(\"consumerToken\", jsonData.data.consumerToken);\r",
											"pm.environment.set(\"consumerId\",jsonData.data.consumerLoginInfo.consumerId);\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var loginToken = \"Rishabh\";\r",
											"var password_Ecyrpt = pm.environment.get(\"password_Ecyrpt\")\r",
											"var password = CryptoJS.MD5(password_Ecyrpt+loginToken).toString();\r",
											"pm.variables.set('loginToken', loginToken);\r",
											"pm.environment.set('password', password);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "clientCode",
										"value": "CAM",
										"description": "(Required) Merchant Code"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"aliasName\": \"{{paypr}}\",\n    \"device\": \"ANDROID_APP\",\n    \"loginToken\": \"{{loginToken}}\",\n    \"password\": \"{{password}}\",\n    \"requestIp\": \"127.0.01\",\n    \"userAgent\": \"NA\",\n    \"userName\": \"5555555555\",\n    \"mobileCode\": \"+91\",\n    \"ussd\": null\n}\n\n"
								},
								"url": {
									"raw": "{{CamUrl}}/preLogin/consumerLogin",
									"host": [
										"{{CamUrl}}"
									],
									"path": [
										"preLogin",
										"consumerLogin"
									]
								}
							},
							"response": []
						},
						{
							"name": "payment/accounts/add",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "userId",
										"value": "{{consumerId}}"
									},
									{
										"key": "userToken",
										"value": "{{consumerToken}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"accHolderName\": \"Name\",\n    \"accNum\": \"53254634333\",\n    \"accType\": \"SAVING\",\n    \"aliasName\": \"{{paypr}}\",\n    \"consumerId\": \"{{consumerId}}\",\n    \"consumerToken\": \"{{consumerToken}}\",\n    \"currencyCode\": \"TTD\",\n    \"deviceType\": \"PC\",\n    \"documentName\": null,\n    \"ifscCode\": null,\n    \"newSession\": null,\n    \"nickName\": null,\n    \"paymentTypeCode\": \"CREDIT_CARD\",\n    \"paymentTypeId\": 1,\n    \"resendFlag\": null,\n    \"subTypeId\": 1,\n    \"userAgent\": \"NA\",\n    \"verifyOtp\": null\n}"
								},
								"url": {
									"raw": "{{CashierUrl}}/postLogin/payment/accounts/add",
									"host": [
										"{{CashierUrl}}"
									],
									"path": [
										"postLogin",
										"payment",
										"accounts",
										"add"
									]
								}
							},
							"response": []
						},
						{
							"name": "depositRequest",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"set  html\",function(){",
											"    var template=pm.response.text(); // save your html response in the template and then          ",
											"  pm.visualizer.set(template);     // set that template to pm.visualizer",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "userId",
										"value": "{{consumerId}}"
									},
									{
										"key": "userToken",
										"value": "{{consumerToken}}"
									}
								],
								"url": {
									"raw": "{{CashierUrl}}/postLogin/payment/depositRequest?amount=10&currencyCode=TTD&depositData=%7B%0A%20%20%22cardCVV2%22%3A%20%22123%22%2C%0A%20%20%22cardNumber%22%3A%20%224111111111111111%22%2C%0A%20%20%22cardExpiryDate%22%3A%20%220925%22%2C%0A%20%20%22rememberMe%22%20%3A%20%22YES%22%2C%0A%20%20%22cardType%22%20%20%3A%20%22VISA%22%0A%7D&deviceType=PC&aliasName={{paypr}}&paymentTypeCode=1&paymentTypeId=1&consumerId={{consumerId}}&consumerToken={{consumerToken}}&subTypeId=1&txnType=DEPOSIT&userAgent=saket",
									"host": [
										"{{CashierUrl}}"
									],
									"path": [
										"postLogin",
										"payment",
										"depositRequest"
									],
									"query": [
										{
											"key": "amount",
											"value": "10"
										},
										{
											"key": "currencyCode",
											"value": "TTD"
										},
										{
											"key": "depositData",
											"value": "%7B%0A%20%20%22cardCVV2%22%3A%20%22123%22%2C%0A%20%20%22cardNumber%22%3A%20%224111111111111111%22%2C%0A%20%20%22cardExpiryDate%22%3A%20%220925%22%2C%0A%20%20%22rememberMe%22%20%3A%20%22YES%22%2C%0A%20%20%22cardType%22%20%20%3A%20%22VISA%22%0A%7D",
											"description": "{\n  \"cardCVV2\": \"123\",\n  \"cardNumber\": \"4111111111111111\",\n  \"cardExpiryDate\": \"0925\",\n  \"rememberMe\" : \"YES\",\n  \"cardType\"  : \"VISA\"\n}"
										},
										{
											"key": "deviceType",
											"value": "PC"
										},
										{
											"key": "aliasName",
											"value": "{{paypr}}"
										},
										{
											"key": "paymentTypeCode",
											"value": "1"
										},
										{
											"key": "paymentTypeId",
											"value": "1"
										},
										{
											"key": "consumerId",
											"value": "{{consumerId}}"
										},
										{
											"key": "consumerToken",
											"value": "{{consumerToken}}"
										},
										{
											"key": "subTypeId",
											"value": "1"
										},
										{
											"key": "txnType",
											"value": "DEPOSIT"
										},
										{
											"key": "userAgent",
											"value": "saket"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getBalance",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "clientCode",
										"value": "WALLET"
									},
									{
										"key": "clientPwd",
										"value": "ph2Nj5knd4IjWBVLc4mhmYHo1hQDEdS3FlIC2KskHpeHFhsqxD"
									}
								],
								"url": {
									"raw": "{{WalletUrl}}/client/getBalance?aliasName={{paypr}}&systemUserId={{consumerId}}",
									"host": [
										"{{WalletUrl}}"
									],
									"path": [
										"client",
										"getBalance"
									],
									"query": [
										{
											"key": "aliasName",
											"value": "{{paypr}}"
										},
										{
											"key": "systemUserId",
											"value": "{{consumerId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "client/fetchBankNameList",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "clientCode",
										"value": "CASHIER"
									},
									{
										"key": "clientPwd",
										"value": "{{clientPwd}}"
									}
								],
								"url": {
									"raw": "{{CashierUrl}}/client/fetchBankNameList?businessId=2&channelId=2",
									"host": [
										"{{CashierUrl}}"
									],
									"path": [
										"client",
										"fetchBankNameList"
									],
									"query": [
										{
											"key": "businessId",
											"value": "2"
										},
										{
											"key": "channelId",
											"value": "2"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "payment/options",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"txnType\": \"DEPOSIT\",\n    \"currencyCode\": \"USD\",\n    \"aliasName\": \"www.Bloxmith.com\",\n    \"deviceType\": \"PC\",\n    \"userAgent\": \"NA\",\n    \"consumerToken\": \"79352c62bb283f49f9ea9b37969d697a\",\n    \"consumerId\": \"356\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CashierUrl}}/postLogin/payment/options",
									"host": [
										"{{CashierUrl}}"
									],
									"path": [
										"postLogin",
										"payment",
										"options"
									]
								}
							},
							"response": []
						},
						{
							"name": "accounts/add",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"//pm.environment.set(\"accountNumber\", +pm.environment.get(\"accountNumber\")+1);\r",
											"//222222240 \"verifyOtp\":\"7883\", \"resendFlag\": \"YES\",\r",
											"//config name  ACCOUNT_OTP_TYPE ka config add hua hai agr iski value numeric hai to 1234 aayega or ALPHANUMERIC hai to a to z 0 to 9 ka combination aayega   \r",
											"//confing name MULTIPLE_REDDEM_ACCOUNT_ALLOWED\r",
											"\r",
											"\r",
											" pm.environment.set(\"accNum\", +pm.environment.get(\"accNum\")+1);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											" var jsonData = JSON.parse(responseBody);\r",
											"  pm.environment.set(\"AccverifyOtp\", jsonData.verificationCode);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "merchantCode",
										"value": "INFINITI"
									},
									{
										"key": "playerId",
										"value": "{{W_playerId}}"
									},
									{
										"key": "playerToken",
										"value": "{{playerToken}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \r\n  \"playerId\":\"{{W_playerId}}\",\r\n  \"playerToken\":\"{{playerToken}}\",\r\n  \"domainName\":\"{{DomainName}}\",\r\n  \"deviceType\":null,\r\n  \"paymentTypeCode\":\"CREDIT_CARD\",\r\n  \"subTypeId\":\"11\",\r\n  \"accHolderName\":\"Ithuba Ithuba\",\r\n  \"accType\":\"SAVING\",\r\n  \"ifscCode\":\"ABSA51234\",\r\n  \"accNum\":\"{{accNum}}\",\r\n  \"merchantCode\":\"\",\r\n  \"resendFlag\":\"NO\",\r\n  \"paymentTypeId\":\"2\", \r\n  \"currencyCode\":\"ZAR\", \r\n  \"documentName\":\"BANK_STATEMENT\", \r\n  \"nickName\":\"wow\"\r\n  }"
								},
								"url": {
									"raw": "{{CashierBaseUrl}}/player/payment/accounts/add",
									"host": [
										"{{CashierBaseUrl}}"
									],
									"path": [
										"player",
										"payment",
										"accounts",
										"add"
									]
								}
							},
							"response": []
						},
						{
							"name": "payment/accounts/fetch",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "userId",
										"value": "{{consumerId}}"
									},
									{
										"key": "userToken",
										"value": "{{consumerToken}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"aliasId\": 2,\n    \"aliasName\": \"{{paypr}}\",\n    \"consumerId\": \"{{consumerId}}\",\n    \"consumerToken\": \"{{consumerToken}}\",\n    \"deviceType\": \"PC\",\n    \"isNewRedeemAcc\": null,\n    \"paymentTypeCode\": \"string\",\n    \"paymentTypeId\": 1,\n    \"providerId\": 3,\n    \"redeemAccountId\": null,\n    \"subtypeId\": 1,\n    \"userAgent\": null\n}"
								},
								"url": {
									"raw": "{{CashierUrl}}/postLogin/payment/accounts/fetch",
									"host": [
										"{{CashierUrl}}"
									],
									"path": [
										"postLogin",
										"payment",
										"accounts",
										"fetch"
									]
								}
							},
							"response": []
						},
						{
							"name": "billAccount",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "userId",
										"value": "{{consumerId}}"
									},
									{
										"key": "userToken",
										"value": "{{consumerToken}}"
									},
									{
										"key": "aliasName",
										"value": "{{paypr}}"
									},
									{
										"key": "X-CSRFToken",
										"value": "nFPyfey7DrnFUu4iRIYlv7ZcCrON25wVbjVUuwnr0kLFM06Gg10OtNEdggNyANns",
										"disabled": true
									}
								],
								"url": {
									"raw": "https://utility-backend.sapidblue.in/postLogin/billAccount?actionType=1&accountId=2",
									"protocol": "https",
									"host": [
										"utility-backend",
										"sapidblue",
										"in"
									],
									"path": [
										"postLogin",
										"billAccount"
									],
									"query": [
										{
											"key": "actionType",
											"value": "1"
										},
										{
											"key": "accountId",
											"value": "2"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "withdrawalRequest",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "userId",
										"value": "{{consumerId}}"
									},
									{
										"key": "userToken",
										"value": "{{consumerToken}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "aliasName",
										"value": "{{paypr}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"accNum\": \"47855\",\n    \"aliasId\": 2,\n    \"aliasName\": \"{{paypr}}\",\n    \"amount\": 15,\n    \"consumerId\": {{consumerId}},\n    \"consumerToken\": \"{{consumerToken}}\",\n    \"currencyCode\": \"TTD\",\n    \"description\": \"withdrawal test\",\n    \"deviceType\": \"PC\",\n    \"paymentAccId\": 56,\n    \"paymentTypeCode\": \"string\",\n    \"paymentTypeId\": 2,\n    \"providerId\": 2,\n    \"providerNameCode\": \"string\",\n    \"refTxnNo\": \"string\",\n    \"regularWinningId\": 0,\n    \"status\": \"ACTIVE\",\n    \"subTypeId\": 8,\n    \"txnType\": \"WITHDRAWAL\",\n    \"userAgent\": \"string\"\n}"
								},
								"url": {
									"raw": "{{CashierUrl}}/postLogin/payment/withdrawalRequest",
									"host": [
										"{{CashierUrl}}"
									],
									"path": [
										"postLogin",
										"payment",
										"withdrawalRequest"
									]
								}
							},
							"response": []
						},
						{
							"name": "withdrawalRequest Copy",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "userId",
										"value": "{{consumerId}}"
									},
									{
										"key": "userToken",
										"value": "{{consumerToken}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"accNum\": \"string\",\n    \"aliasId\": 0,\n    \"aliasName\": \"string\",\n    \"amount\": 0,\n    \"consumerId\": 0,\n    \"consumerToken\": \"string\",\n    \"currency\": \"string\",\n    \"currencyCode\": \"string\",\n    \"currencyId\": 0,\n    \"description\": \"string\",\n    \"deviceType\": \"string\",\n    \"password\": \"string\",\n    \"paymentAccId\": 0,\n    \"paymentTypeCode\": \"string\",\n    \"paymentTypeId\": 0,\n    \"providerId\": 0,\n    \"providerNameCode\": \"string\",\n    \"refTxnNo\": \"string\",\n    \"regularWinningId\": 0,\n    \"status\": \"string\",\n    \"subTypeId\": 0,\n    \"txnType\": \"string\",\n    \"userAgent\": \"string\",\n    \"userName\": \"string\",\n    \"verificationCode\": \"string\",\n    \"withDevice\": \"string\",\n    \"withTxnId\": 0,\n    \"withdrawalMode\": \"string\"\n}"
								},
								"url": {
									"raw": "{{CashierUrl}}/postLogin/payment/withdrawalRequest",
									"host": [
										"{{CashierUrl}}"
									],
									"path": [
										"postLogin",
										"payment",
										"withdrawalRequest"
									]
								}
							},
							"response": []
						},
						{
							"name": "accounts/add",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "userId",
										"value": "{{consumerId}}"
									},
									{
										"key": "userToken",
										"value": "{{consumerToken}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"accHolderName\": \"Rishabh\",\n    \"accNum\": \"12343212\",\n    \"accType\": \"SAVING\",\n    \"aliasName\": \"{{paypr}}\",\n    \"consumerId\": \"{{consumerId}}\",\n    \"consumerToken\": \"{{consumerToken}}\",\n    \"currencyCode\": \"TTD\",\n    \"deviceType\": \"PC\",\n    \"paymentTypeCode\": \"BANK_TRANS\",\n    \"paymentTypeId\": 2,,\n    \"subTypeId\": 8,\n    \"userAgent\": \"NA\"\n}"
								},
								"url": {
									"raw": "{{CashierUrl}}/postLogin/payment/accounts/add",
									"host": [
										"{{CashierUrl}}"
									],
									"path": [
										"postLogin",
										"payment",
										"accounts",
										"add"
									]
								}
							},
							"response": []
						},
						{
							"name": "accounts/add Copy",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "userId",
										"value": "1"
									},
									{
										"key": "userToken",
										"value": "XXXX"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \"accHolderName\": \"string\", \"accNum\": \"string\", \"accType\": \"string\", \"aliasName\": \"string\", \"consumerId\": \"string\", \"consumerToken\": \"string\", \"currencyCode\": \"string\", \"deviceType\": \"string\", \"documentName\": \"string\", \"ifscCode\": \"string\", \"newSession\": \"string\", \"nickName\": \"string\", \"paymentTypeCode\": \"string\", \"paymentTypeId\": 0, \"resendFlag\": \"string\", \"subTypeId\": 0, \"userAgent\": \"string\", \"verifyOtp\": \"string\"}"
								},
								"url": {
									"raw": "https://cashier-backend.sapidblue.in/postLogin/payment/accounts/add",
									"protocol": "https",
									"host": [
										"cashier-backend",
										"sapidblue",
										"in"
									],
									"path": [
										"postLogin",
										"payment",
										"accounts",
										"add"
									]
								}
							},
							"response": []
						},
						{
							"name": "https://cashier-backend.sapidblue.in/postLogin/payment/accounts/add",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "userId",
										"value": "1"
									},
									{
										"key": "userToken",
										"value": "XXXX"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \"accHolderName\": \"string\", \"accNum\": \"string\", \"accType\": \"string\", \"aliasName\": \"string\", \"consumerId\": \"string\", \"consumerToken\": \"string\", \"currencyCode\": \"string\", \"deviceType\": \"string\", \"documentName\": \"string\", \"ifscCode\": \"string\", \"newSession\": \"string\", \"nickName\": \"string\", \"paymentTypeCode\": \"string\", \"paymentTypeId\": 0, \"resendFlag\": \"string\", \"subTypeId\": 0, \"userAgent\": \"string\", \"verifyOtp\": \"string\"}"
								},
								"url": {
									"raw": "https://cashier-backend.sapidblue.in/postLogin/payment/accounts/add",
									"protocol": "https",
									"host": [
										"cashier-backend",
										"sapidblue",
										"in"
									],
									"path": [
										"postLogin",
										"payment",
										"accounts",
										"add"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "SCHEDULER",
					"item": [
						{
							"name": "getBoCorrectionReport/rescheduleTask",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CASHIER_UAT}}/clients/getBoCorrectionReport/rescheduleTask",
									"host": [
										"{{CASHIER_UAT}}"
									],
									"path": [
										"clients",
										"getBoCorrectionReport",
										"rescheduleTask"
									]
								}
							},
							"response": []
						},
						{
							"name": "dailyTransactionData/rescheduleTask",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CashierUrl}}/clients/dailyTransactionData/rescheduleTask",
									"host": [
										"{{CashierUrl}}"
									],
									"path": [
										"clients",
										"dailyTransactionData",
										"rescheduleTask"
									]
								}
							},
							"response": []
						},
						{
							"name": "dailyProviderTransactionData/rescheduleTask",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CashierUrl}}/clients/dailyProviderTransactionData/rescheduleTask",
									"host": [
										"{{CashierUrl}}"
									],
									"path": [
										"clients",
										"dailyProviderTransactionData",
										"rescheduleTask"
									]
								}
							},
							"response": []
						},
						{
							"name": "getWithdrawalBatchReport/rescheduleTask",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CashierUrl}}/clients/dailyProviderTransactionData/rescheduleTask",
									"host": [
										"{{CashierUrl}}"
									],
									"path": [
										"clients",
										"dailyProviderTransactionData",
										"rescheduleTask"
									]
								}
							},
							"response": []
						},
						{
							"name": "getMonthlyBoCorrectionReport/rescheduleTask",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CashierUrl}}/clients/dailyProviderTransactionData/rescheduleTask",
									"host": [
										"{{CashierUrl}}"
									],
									"path": [
										"clients",
										"dailyProviderTransactionData",
										"rescheduleTask"
									]
								}
							},
							"response": []
						},
						{
							"name": "regulerWinningAutoSettlement/rescheduleTask",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CashierUrl}}/clients/dailyProviderTransactionData/rescheduleTask",
									"host": [
										"{{CashierUrl}}"
									],
									"path": [
										"clients",
										"dailyProviderTransactionData",
										"rescheduleTask"
									]
								}
							},
							"response": []
						},
						{
							"name": "consumerSynIcashSettlement/rescheduleTask",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CashierUrl}}/clients/dailyProviderTransactionData/rescheduleTask",
									"host": [
										"{{CashierUrl}}"
									],
									"path": [
										"clients",
										"dailyProviderTransactionData",
										"rescheduleTask"
									]
								}
							},
							"response": []
						},
						{
							"name": "updatePodmPref/rescheduleTask",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CashierUrl}}/clients/dailyProviderTransactionData/rescheduleTask",
									"host": [
										"{{CashierUrl}}"
									],
									"path": [
										"clients",
										"dailyProviderTransactionData",
										"rescheduleTask"
									]
								}
							},
							"response": []
						},
						{
							"name": "dailyProviderTransactionData/rescheduleTask",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CashierUrl}}/clients/dailyProviderTransactionData/rescheduleTask",
									"host": [
										"{{CashierUrl}}"
									],
									"path": [
										"clients",
										"dailyProviderTransactionData",
										"rescheduleTask"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "get/token Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"pm.environment.set(\"BoToken\", jsonData.data.authToken);",
									"pm.environment.set(\"BoUserId\", jsonData.data.userId);",
									"",
									"",
									"",
									"",
									"//      pm.environment.set(\"BoUserId\", jsonData.responseData.userId)",
									"",
									"// let swicthCaseIteration = +pm.environment.get(\"swicthCaseIteration\");",
									"// if (jsonData.responseData.statusCode === 0 && swicthCaseIteration === 0) {",
									"//      pm.test(\"-------------------------1.Positive scenario Of get/token api With valid key Data.--------------------------------\");",
									"//      eval(pm.environment.get(\"IfTestCase\"))();",
									"     ",
									"//      pm.test(\"Message I am getting from Api is= \" + jsonData.responseData.message, function () { pm.expect(jsonData.responseData.message).to.eql(\"Success\") })",
									"// pm.test(\"Message I am getting from Api is= \" + jsonData.responseData.message, function () { pm.expect(jsonData.responseData.message).to.eql(\"Success\") })",
									"// pm.test(\"Status Code I am getting from Api is= \" + jsonData.responseData.statusCode, function () { pm.expect(+jsonData.responseData.statusCode).to.eql(0) })",
									"//      pm.test(\"authToken I am getting from Api is= \" + jsonData.responseData.authToken, function () { pm.expect(+jsonData.responseData.authToken).to.eql(+jsonData.responseData.authToken) })",
									"//      pm.test(\"timestamp I am getting from Api is= \" + jsonData.responseData.timestamp, function () { pm.expect(+jsonData.responseData.timestamp).to.eql(+jsonData.responseData.timestamp) })",
									"//      pm.test(\"expiryTime I am getting from Api is= \" + jsonData.responseData.expiryTime, function () { pm.expect(+jsonData.responseData.expiryTime).to.eql(+jsonData.responseData.expiryTime) })",
									"//      pm.test(\"issueAt I am getting from Api = \" + jsonData.responseData.issueAt, function () { pm.expect(+jsonData.responseData.issueAt).to.eql(+jsonData.responseData.issueAt) })",
									"//      pm.test(\"Login superBo User Id Is=\" + jsonData.responseData.userId);",
									"//      pm.test(\"passwordExpired is= \" + jsonData.responseData.passwordExpired, function () { pm.expect(jsonData.responseData.passwordExpired).to.eql(false) })",
									"//      pm.environment.set(\"swicthCaseIteration\", swicthCaseIteration + 1);",
									"//      postman.setNextRequest(\"SUPER_BO_LOGIN\");",
									"// }",
									"// else if (jsonData.responseData.statusCode > 0 && swicthCaseIteration === 1 || swicthCaseIteration === 2) {",
									"//      pm.test(\"-------------------------2.Negative scenario Of get/token api with invalid userName and Password.--------------------------------\");",
									"//      eval(pm.environment.get(\"IfTestCase\"))();",
									"//      pm.test(\"Message I am getting from Api is= \" + jsonData.responseData.message, function () { pm.expect(+jsonData.responseData.message) === (\"Incorrect UserName Or Password/PIN, Please Try Again\") })",
									"//      pm.test(\"Status Code I am getting from Api is= \" + jsonData.responseData.statusCode, function () { pm.expect(+jsonData.responseData.statusCode).to.eql(303) });",
									"//      pm.environment.set(\"swicthCaseIteration\", swicthCaseIteration + 1);",
									"//      postman.setNextRequest(\"SUPER_BO_LOGIN\")",
									"// }",
									"// else if (jsonData.responseData.statusCode > 0 && swicthCaseIteration === 3) {",
									"//      pm.test(\"-------------------------3.Negative scenario Of get/token api with invalid clientId.--------------------------------\");",
									"//      { eval(pm.environment.get(\"IfTestCase\"))(); }",
									"//      pm.environment.set(\"swicthCaseIteration\", swicthCaseIteration + 1);",
									"//      postman.setNextRequest(\"SUPER_BO_LOGIN\")",
									"// }",
									"// else if (jsonData.responseData.statusCode > 0 && swicthCaseIteration === 4) {",
									"//      pm.test(\"-------------------------4.Negative scenario Of get/token api with invalid clientSecret.--------------------------------\");",
									"//      { eval(pm.environment.get(\"IfTestCase\"))(); }",
									"//      pm.environment.set(\"swicthCaseIteration\", 0);",
									"//      postman.setNextRequest(\"validateUser\")",
									"// }",
									"// else {",
									"//      { eval(pm.environment.get(\"ElseTestCase\"))(); }",
									"//      pm.environment.set(\"swicthCaseIteration\", 0);",
									"// }"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// let swicthCaseIteration= +pm.environment.get(\"swicthCaseIteration\");\r",
									"// function sameLines()  {\r",
									"// pm.variables.set(\"userName\", \"skilrock\");\r",
									"// pm.variables.set(\"password\", 12345678);\r",
									"// pm.variables.set(\"clientId\", \"PAM\");\r",
									"// pm.variables.set(\"clientSecret\", \"ph2Nj5knd4IjWBVLc4mhmYHo1hQDEdS3FlIC2KskHpeHFhsqxD\");  }\r",
									"// switch(swicthCaseIteration) {\r",
									"//  case 0:\r",
									"// \tsameLines();  break;\r",
									"//  case 1:\r",
									"// \tsameLines();\r",
									"// \tpm.variables.set(\"userName\", null);  break;\r",
									"//  case 2:\r",
									"// \tsameLines();\r",
									"// \tpm.variables.set(\"password\", null);  break;\r",
									"//  case 3:\r",
									"// \tsameLines();\r",
									"// \tpm.variables.set(\"clientId\", null);  break;\r",
									"//  case 4:\r",
									"// \tsameLines();\r",
									"// \tpm.variables.set(\"clientSecret\", null);  break;  }\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"//VMFYq5Pz344-H8kuUUk1EedCUEPzeJAp2kl6Kddb2jE"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "userName",
								"value": "rishabh",
								"type": "text"
							},
							{
								"key": "password",
								"value": "12345678",
								"type": "text"
							},
							{
								"key": "clientId",
								"value": "UCM",
								"type": "text"
							},
							{
								"key": "clientSecret",
								"value": "ph2Nj5knd4IjWBVLc4mhmYHo1hQDEdS3FlIC2KskHpeHFhsqxD",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{UcmUrl}}/get/token",
							"host": [
								"{{UcmUrl}}"
							],
							"path": [
								"get",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "get/token Copy 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"pm.environment.set(\"BoToken\", jsonData.data.authToken);",
									"pm.environment.set(\"BoUserId\", jsonData.data.userId);",
									"",
									"",
									"",
									"",
									"//      pm.environment.set(\"BoUserId\", jsonData.responseData.userId)",
									"",
									"// let swicthCaseIteration = +pm.environment.get(\"swicthCaseIteration\");",
									"// if (jsonData.responseData.statusCode === 0 && swicthCaseIteration === 0) {",
									"//      pm.test(\"-------------------------1.Positive scenario Of get/token api With valid key Data.--------------------------------\");",
									"//      eval(pm.environment.get(\"IfTestCase\"))();",
									"     ",
									"//      pm.test(\"Message I am getting from Api is= \" + jsonData.responseData.message, function () { pm.expect(jsonData.responseData.message).to.eql(\"Success\") })",
									"// pm.test(\"Message I am getting from Api is= \" + jsonData.responseData.message, function () { pm.expect(jsonData.responseData.message).to.eql(\"Success\") })",
									"// pm.test(\"Status Code I am getting from Api is= \" + jsonData.responseData.statusCode, function () { pm.expect(+jsonData.responseData.statusCode).to.eql(0) })",
									"//      pm.test(\"authToken I am getting from Api is= \" + jsonData.responseData.authToken, function () { pm.expect(+jsonData.responseData.authToken).to.eql(+jsonData.responseData.authToken) })",
									"//      pm.test(\"timestamp I am getting from Api is= \" + jsonData.responseData.timestamp, function () { pm.expect(+jsonData.responseData.timestamp).to.eql(+jsonData.responseData.timestamp) })",
									"//      pm.test(\"expiryTime I am getting from Api is= \" + jsonData.responseData.expiryTime, function () { pm.expect(+jsonData.responseData.expiryTime).to.eql(+jsonData.responseData.expiryTime) })",
									"//      pm.test(\"issueAt I am getting from Api = \" + jsonData.responseData.issueAt, function () { pm.expect(+jsonData.responseData.issueAt).to.eql(+jsonData.responseData.issueAt) })",
									"//      pm.test(\"Login superBo User Id Is=\" + jsonData.responseData.userId);",
									"//      pm.test(\"passwordExpired is= \" + jsonData.responseData.passwordExpired, function () { pm.expect(jsonData.responseData.passwordExpired).to.eql(false) })",
									"//      pm.environment.set(\"swicthCaseIteration\", swicthCaseIteration + 1);",
									"//      postman.setNextRequest(\"SUPER_BO_LOGIN\");",
									"// }",
									"// else if (jsonData.responseData.statusCode > 0 && swicthCaseIteration === 1 || swicthCaseIteration === 2) {",
									"//      pm.test(\"-------------------------2.Negative scenario Of get/token api with invalid userName and Password.--------------------------------\");",
									"//      eval(pm.environment.get(\"IfTestCase\"))();",
									"//      pm.test(\"Message I am getting from Api is= \" + jsonData.responseData.message, function () { pm.expect(+jsonData.responseData.message) === (\"Incorrect UserName Or Password/PIN, Please Try Again\") })",
									"//      pm.test(\"Status Code I am getting from Api is= \" + jsonData.responseData.statusCode, function () { pm.expect(+jsonData.responseData.statusCode).to.eql(303) });",
									"//      pm.environment.set(\"swicthCaseIteration\", swicthCaseIteration + 1);",
									"//      postman.setNextRequest(\"SUPER_BO_LOGIN\")",
									"// }",
									"// else if (jsonData.responseData.statusCode > 0 && swicthCaseIteration === 3) {",
									"//      pm.test(\"-------------------------3.Negative scenario Of get/token api with invalid clientId.--------------------------------\");",
									"//      { eval(pm.environment.get(\"IfTestCase\"))(); }",
									"//      pm.environment.set(\"swicthCaseIteration\", swicthCaseIteration + 1);",
									"//      postman.setNextRequest(\"SUPER_BO_LOGIN\")",
									"// }",
									"// else if (jsonData.responseData.statusCode > 0 && swicthCaseIteration === 4) {",
									"//      pm.test(\"-------------------------4.Negative scenario Of get/token api with invalid clientSecret.--------------------------------\");",
									"//      { eval(pm.environment.get(\"IfTestCase\"))(); }",
									"//      pm.environment.set(\"swicthCaseIteration\", 0);",
									"//      postman.setNextRequest(\"validateUser\")",
									"// }",
									"// else {",
									"//      { eval(pm.environment.get(\"ElseTestCase\"))(); }",
									"//      pm.environment.set(\"swicthCaseIteration\", 0);",
									"// }"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// let swicthCaseIteration= +pm.environment.get(\"swicthCaseIteration\");\r",
									"// function sameLines()  {\r",
									"// pm.variables.set(\"userName\", \"skilrock\");\r",
									"// pm.variables.set(\"password\", 12345678);\r",
									"// pm.variables.set(\"clientId\", \"PAM\");\r",
									"// pm.variables.set(\"clientSecret\", \"ph2Nj5knd4IjWBVLc4mhmYHo1hQDEdS3FlIC2KskHpeHFhsqxD\");  }\r",
									"// switch(swicthCaseIteration) {\r",
									"//  case 0:\r",
									"// \tsameLines();  break;\r",
									"//  case 1:\r",
									"// \tsameLines();\r",
									"// \tpm.variables.set(\"userName\", null);  break;\r",
									"//  case 2:\r",
									"// \tsameLines();\r",
									"// \tpm.variables.set(\"password\", null);  break;\r",
									"//  case 3:\r",
									"// \tsameLines();\r",
									"// \tpm.variables.set(\"clientId\", null);  break;\r",
									"//  case 4:\r",
									"// \tsameLines();\r",
									"// \tpm.variables.set(\"clientSecret\", null);  break;  }\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"//VMFYq5Pz344-H8kuUUk1EedCUEPzeJAp2kl6Kddb2jE"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "userName",
								"value": "apoorv",
								"type": "text"
							},
							{
								"key": "password",
								"value": "12345678",
								"type": "text"
							},
							{
								"key": "clientId",
								"value": "UCM",
								"type": "text"
							},
							{
								"key": "clientSecret",
								"value": "ph2Nj5knd4IjWBVLc4mhmYHo1hQDEdS3FlIC2KskHpeHFhsqxD",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{UcmUrl}}/get/token",
							"host": [
								"{{UcmUrl}}"
							],
							"path": [
								"get",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "generatePaymentCorrectionRequest Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"pm.environment.set(\"req\", jsonData.data.requestId);",
									"",
									"",
									"",
									"",
									"",
									"//      pm.environment.set(\"BoUserId\", jsonData.responseData.userId)",
									"",
									"// let swicthCaseIteration = +pm.environment.get(\"swicthCaseIteration\");",
									"// if (jsonData.responseData.statusCode === 0 && swicthCaseIteration === 0) {",
									"//      pm.test(\"-------------------------1.Positive scenario Of get/token api With valid key Data.--------------------------------\");",
									"//      eval(pm.environment.get(\"IfTestCase\"))();",
									"     ",
									"//      pm.test(\"Message I am getting from Api is= \" + jsonData.responseData.message, function () { pm.expect(jsonData.responseData.message).to.eql(\"Success\") })",
									"// pm.test(\"Message I am getting from Api is= \" + jsonData.responseData.message, function () { pm.expect(jsonData.responseData.message).to.eql(\"Success\") })",
									"// pm.test(\"Status Code I am getting from Api is= \" + jsonData.responseData.statusCode, function () { pm.expect(+jsonData.responseData.statusCode).to.eql(0) })",
									"//      pm.test(\"authToken I am getting from Api is= \" + jsonData.responseData.authToken, function () { pm.expect(+jsonData.responseData.authToken).to.eql(+jsonData.responseData.authToken) })",
									"//      pm.test(\"timestamp I am getting from Api is= \" + jsonData.responseData.timestamp, function () { pm.expect(+jsonData.responseData.timestamp).to.eql(+jsonData.responseData.timestamp) })",
									"//      pm.test(\"expiryTime I am getting from Api is= \" + jsonData.responseData.expiryTime, function () { pm.expect(+jsonData.responseData.expiryTime).to.eql(+jsonData.responseData.expiryTime) })",
									"//      pm.test(\"issueAt I am getting from Api = \" + jsonData.responseData.issueAt, function () { pm.expect(+jsonData.responseData.issueAt).to.eql(+jsonData.responseData.issueAt) })",
									"//      pm.test(\"Login superBo User Id Is=\" + jsonData.responseData.userId);",
									"//      pm.test(\"passwordExpired is= \" + jsonData.responseData.passwordExpired, function () { pm.expect(jsonData.responseData.passwordExpired).to.eql(false) })",
									"//      pm.environment.set(\"swicthCaseIteration\", swicthCaseIteration + 1);",
									"//      postman.setNextRequest(\"SUPER_BO_LOGIN\");",
									"// }",
									"// else if (jsonData.responseData.statusCode > 0 && swicthCaseIteration === 1 || swicthCaseIteration === 2) {",
									"//      pm.test(\"-------------------------2.Negative scenario Of get/token api with invalid userName and Password.--------------------------------\");",
									"//      eval(pm.environment.get(\"IfTestCase\"))();",
									"//      pm.test(\"Message I am getting from Api is= \" + jsonData.responseData.message, function () { pm.expect(+jsonData.responseData.message) === (\"Incorrect UserName Or Password/PIN, Please Try Again\") })",
									"//      pm.test(\"Status Code I am getting from Api is= \" + jsonData.responseData.statusCode, function () { pm.expect(+jsonData.responseData.statusCode).to.eql(303) });",
									"//      pm.environment.set(\"swicthCaseIteration\", swicthCaseIteration + 1);",
									"//      postman.setNextRequest(\"SUPER_BO_LOGIN\")",
									"// }",
									"// else if (jsonData.responseData.statusCode > 0 && swicthCaseIteration === 3) {",
									"//      pm.test(\"-------------------------3.Negative scenario Of get/token api with invalid clientId.--------------------------------\");",
									"//      { eval(pm.environment.get(\"IfTestCase\"))(); }",
									"//      pm.environment.set(\"swicthCaseIteration\", swicthCaseIteration + 1);",
									"//      postman.setNextRequest(\"SUPER_BO_LOGIN\")",
									"// }",
									"// else if (jsonData.responseData.statusCode > 0 && swicthCaseIteration === 4) {",
									"//      pm.test(\"-------------------------4.Negative scenario Of get/token api with invalid clientSecret.--------------------------------\");",
									"//      { eval(pm.environment.get(\"IfTestCase\"))(); }",
									"//      pm.environment.set(\"swicthCaseIteration\", 0);",
									"//      postman.setNextRequest(\"validateUser\")",
									"// }",
									"// else {",
									"//      { eval(pm.environment.get(\"ElseTestCase\"))(); }",
									"//      pm.environment.set(\"swicthCaseIteration\", 0);",
									"// }"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{BoToken}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "amount",
									"value": "7.33",
									"type": "text"
								},
								{
									"key": "channelId",
									"value": "2",
									"type": "text"
								},
								{
									"key": "consumerId",
									"value": "378",
									"type": "text"
								},
								{
									"key": "reasonAllocation",
									"value": "Withdrawal reversal",
									"type": "text"
								},
								{
									"key": "remark",
									"value": "remark",
									"type": "text"
								},
								{
									"key": "requesterRemark",
									"value": "comment",
									"type": "text"
								},
								{
									"key": "sendSms",
									"value": "no",
									"type": "text"
								},
								{
									"key": "smsCharges",
									"value": "no",
									"type": "text"
								},
								{
									"key": "txnType",
									"value": "WITHDRAWAL",
									"type": "text"
								},
								{
									"key": "withdrawalImpact",
									"value": "yes",
									"type": "text"
								},
								{
									"key": "document",
									"type": "file",
									"src": "/Users/apoorvgupta/Downloads/image_2023_04_11T12_54_07_804Z.png"
								},
								{
									"key": "requestedCurrencyCode",
									"value": "TWD",
									"type": "text",
									"disabled": true
								},
								{
									"key": "requestedCurrencyCode",
									"value": "TTD",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{CashierUrl}}/v1.0/generatePaymentCorrectionRequest",
							"host": [
								"{{CashierUrl}}"
							],
							"path": [
								"v1.0",
								"generatePaymentCorrectionRequest"
							]
						}
					},
					"response": []
				},
				{
					"name": "generateAllocationRequest Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{BoToken}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "actualMobile",
									"value": "5555555555",
									"type": "text"
								},
								{
									"key": "amount",
									"value": "10",
									"type": "text"
								},
								{
									"key": "bank",
									"value": "Republic Bank",
									"type": "text"
								},
								{
									"key": "channelId",
									"value": "2",
									"type": "text"
								},
								{
									"key": "requestedCurrencyCode",
									"value": "INR",
									"type": "text"
								},
								{
									"key": "id",
									"value": "1",
									"type": "text",
									"disabled": true
								},
								{
									"key": "notes",
									"value": "notes",
									"type": "text",
									"disabled": true
								},
								{
									"key": "requestMobile",
									"value": "0",
									"type": "text"
								},
								{
									"key": "requesterRemark",
									"value": "requesterRemarks",
									"type": "text"
								},
								{
									"key": "tpProviderTxnId",
									"value": "12",
									"type": "text",
									"disabled": true
								},
								{
									"key": "txnType",
									"value": "DEPOSIT",
									"type": "text"
								},
								{
									"key": "supportDoc",
									"type": "file",
									"src": "/Users/apoorvgupta/Downloads/image_2023_04_11T12_54_07_804Z.png"
								},
								{
									"key": "depositReceipt",
									"type": "file",
									"src": "/Users/apoorvgupta/Downloads/image_2023_05_17T05_49_20_464Z.png"
								},
								{
									"key": "consumerId",
									"value": "378",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{CashierUrl}}/v1.0/generateAllocationRequest",
							"host": [
								"{{CashierUrl}}"
							],
							"path": [
								"v1.0",
								"generateAllocationRequest"
							]
						}
					},
					"response": []
				},
				{
					"name": "(PC2)updateCorrectionRequest",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{BoToken}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "document",
									"type": "file",
									"src": "/Users/apoorvgupta/Downloads/image_2023_04_11T12_54_07_804Z.png"
								},
								{
									"key": "remark",
									"value": "testing 2",
									"type": "text"
								},
								{
									"key": "requestId",
									"value": "{{req}}",
									"type": "text"
								},
								{
									"key": "status",
									"value": "REQUESTED",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{CashierUrl}}/v1.0/updateCorrectionRequest",
							"host": [
								"{{CashierUrl}}"
							],
							"path": [
								"v1.0",
								"updateCorrectionRequest"
							]
						}
					},
					"response": []
				},
				{
					"name": "(PC2)cancelCorrectionRequest Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{BoToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"cancelRemark\": \"cancel Remarks\",\n    \"requestId\": \"{{req}}\"\n}"
						},
						"url": {
							"raw": "{{CashierUrl}}/v1.0/cancelCorrectionRequest",
							"host": [
								"{{CashierUrl}}"
							],
							"path": [
								"v1.0",
								"cancelCorrectionRequest"
							]
						}
					},
					"response": []
				},
				{
					"name": "(PC3)updateCorrectionRequest",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{BoToken}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "document",
									"type": "file",
									"src": "/Users/apoorvgupta/Downloads/image_2023_04_11T12_54_07_804Z.png"
								},
								{
									"key": "remark",
									"value": "testing 3",
									"type": "text"
								},
								{
									"key": "requestId",
									"value": "{{req}}",
									"type": "text"
								},
								{
									"key": "status",
									"value": "APPROVED_FIRST",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{CashierUrl}}/v1.0/updateCorrectionRequest",
							"host": [
								"{{CashierUrl}}"
							],
							"path": [
								"v1.0",
								"updateCorrectionRequest"
							]
						}
					},
					"response": []
				},
				{
					"name": "withdrawalRequest",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "aliasName",
								"value": "https://www.paypr.com"
							},
							{
								"key": "userId",
								"value": "1"
							},
							{
								"key": "userToken",
								"value": "EJhUZAjSsPPLHVmEKwnKKWr2SLwuplbLhn0H__Mc-IA"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r    \"accNum\": \"12314325364\",\r    \"aliasId\": 2,\r    \"aliasName\": \"https://www.paypr.com\",\r    \"amount\": 12000,\r    \"consumerId\": 399,\r    \"consumerToken\": \"string\",\r    \"currency\": \"TTD\",\r    \"currencyCode\": \"TTD\",\r    \"currencyId\": 18,\r    \"description\": \"withdrawal\",\r    \"deviceType\": \"PC\",\r    \"password\": \"string\",\r    \"paymentAccId\": 0,\r    \"paymentTypeCode\": \"BACK_OFFICE\",\r    \"paymentTypeId\": 5,\r    \"providerId\": 2,\r    \"providerNameCode\": \"BACKOFFICE\",\r    \"refTxnNo\": \"string\",\r    \"regularWinningId\": 0,\r    \"status\": \"string\",\r    \"subTypeId\": 12,\r    \"txnType\": \"WITHDRAWAL\",\r    \"userAgent\": \"string\",\r    \"userName\": \"string\",\r    \"verificationCode\": \"string\",\r    \"withDevice\": \"string\",\r    \"withTxnId\": 0,\r    \"withdrawalMode\": \"string\"\r}"
						},
						"url": {
							"raw": "http://localhost:8082/postLogin/payment/withdrawalRequest",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"postLogin",
								"payment",
								"withdrawalRequest"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "bloxmith wrapper",
			"item": [
				{
					"name": "postloginGetBalance",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "userId",
								"value": "1603446585556238336"
							},
							{
								"key": "userToken",
								"value": "080dc27f2b5d740679d885de57a8ce64"
							},
							{
								"key": "aliasName",
								"value": "www.Bloxmith.com"
							},
							{
								"key": "X-CSRFToken",
								"value": "o1JjWAH0qWXqosVOyiEBT9G6QXWVsv29d117gPtoBkHC4OMoZYdqclYUgzgLVPrA"
							}
						],
						"url": {
							"raw": "https://api-bx.sapidblue.in/post_login/getBalance?systemUserId=1603446585556238336",
							"protocol": "https",
							"host": [
								"api-bx",
								"sapidblue",
								"in"
							],
							"path": [
								"post_login",
								"getBalance"
							],
							"query": [
								{
									"key": "systemUserId",
									"value": "1603446585556238336"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "clientFetchBlance",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "clientCode",
								"value": "UCM"
							},
							{
								"key": "clientPwd",
								"value": "ph2Nj5knd4IjWBVLc4mhmYHo1hQDEdS3FlIC2KskHpeHFhsqxD"
							},
							{
								"key": "X-CSRFToken",
								"value": "o1JjWAH0qWXqosVOyiEBT9G6QXWVsv29d117gPtoBkHC4OMoZYdqclYUgzgLVPrA"
							}
						],
						"url": {
							"raw": "https://api-bx.sapidblue.in/client/getBalance?systemUserId=1603446585556238336",
							"protocol": "https",
							"host": [
								"api-bx",
								"sapidblue",
								"in"
							],
							"path": [
								"client",
								"getBalance"
							],
							"query": [
								{
									"key": "systemUserId",
									"value": "1603446585556238336"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "debitCrystal",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "clientCode",
								"value": "UCM"
							},
							{
								"key": "clientPwd",
								"value": "ph2Nj5knd4IjWBVLc4mhmYHo1hQDEdS3FlIC2KskHpeHFhsqxD"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-CSRFToken",
								"value": "o1JjWAH0qWXqosVOyiEBT9G6QXWVsv29d117gPtoBkHC4OMoZYdqclYUgzgLVPrA",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"amount\": 10,\n    \"systemConsumerId\": 1603446585556238336,\n    \"particular\": 1\n}"
						},
						"url": {
							"raw": "https://api-bx.sapidblue.in/client/deduct",
							"protocol": "https",
							"host": [
								"api-bx",
								"sapidblue",
								"in"
							],
							"path": [
								"client",
								"deduct"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "RMS",
			"item": [
				{
					"name": "v1.0/updateOrgDetails",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Authorization",
								"value": "Bearer GHTSdz6tURZpOCrnfFbWfYerPKlC6eqa-XKtiQ0qRN4"
							},
							{
								"key": "orgTypeCode",
								"value": "BO"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"accountNumber\": \"string\", \"addressOne\": \"string\", \"addressTwo\": \"string\", \"balance\": 0, \"bankName\": \"string\", \"beneficiaryName\": \"string\", \"branchName\": \"string\", \"businessId\": 2, \"channelId\": 74, \"city\": \"string\", \"cityCode\": \"string\", \"contactPerson\": \"Demo User\", \"country\": \"string\", \"countryCode\": \"string\", \"distributableLimit\": 0, \"emailId\": \"string\", \"mobileCode\": \"+91\", \"mobileNumber\": \"9856531459\", \"orgId\": 203, \"orgName\": \"string\", \"regionCode\": \"string\", \"state\": \"string\", \"stateCode\": \"string\", \"zipCode\": \"string\"}"
						},
						"url": {
							"raw": "https://merchant-backend.sapidblue.in/v1.0/updateOrgDetails",
							"protocol": "https",
							"host": [
								"merchant-backend",
								"sapidblue",
								"in"
							],
							"path": [
								"v1.0",
								"updateOrgDetails"
							]
						}
					},
					"response": []
				},
				{
					"name": "/doOrgSearch",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{BoToken}}"
							},
							{
								"key": "orgTypeCode",
								"value": "BO"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"businessId\": 2,\r\n    \"channelId\": 74,\r\n    \"mobileCode\": \"+1868\",\r\n    \"mobileNumber\": \"9856531453\"\r\n}"
						},
						"url": {
							"raw": "https://merchant-backend.sapidblue.in/v1.0/doOrgSearch",
							"protocol": "https",
							"host": [
								"merchant-backend",
								"sapidblue",
								"in"
							],
							"path": [
								"v1.0",
								"doOrgSearch"
							]
						}
					},
					"response": []
				},
				{
					"name": "v1.0/doUserSearch",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Authorization",
								"value": "Bearer XXXX"
							},
							{
								"key": "orgTypeCode",
								"value": "aas"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"brandId\": 0, \"businessId\": 0, \"chainTypeId\": 0, \"channelId\": 0, \"city\": \"string\", \"country\": \"string\", \"emailId\": \"string\", \"firstName\": \"string\", \"inventoryId\": 0, \"isFinanceHead\": \"string\", \"isHead\": \"string\", \"isIntraOrg\": \"string\", \"lastName\": \"string\", \"loginFromDate\": \"string\", \"loginToDate\": \"string\", \"mobileCode\": \"string\", \"mobileNumber\": \"string\", \"modelId\": 0, \"orgId\": 0, \"orgName\": \"string\", \"orgTypeCode\": \"string\", \"parentAgtOrgId\": 0, \"parentMagtOrgId\": 0, \"parentSagtOrgId\": 0, \"registrationFromDate\": \"string\", \"registrationToDate\": \"string\", \"roleId\": 0, \"saleFromDate\": \"string\", \"saleToDate\": \"string\", \"serialNo\": \"string\", \"state\": \"string\", \"status\": 0, \"transactionFromDate\": \"string\", \"transactionToDate\": \"string\", \"userId\": 0, \"userName\": \"string\"}"
						},
						"url": {
							"raw": "https://merchant-backend.sapidblue.in/v1.0/doUserSearch",
							"protocol": "https",
							"host": [
								"merchant-backend",
								"sapidblue",
								"in"
							],
							"path": [
								"v1.0",
								"doUserSearch"
							]
						}
					},
					"response": []
				},
				{
					"name": "v1.0/getConfigurations",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Authorization",
								"value": "Bearer XXXX"
							},
							{
								"key": "orgTypeCode",
								"value": "BO"
							}
						],
						"url": {
							"raw": "https://merchant-backend.sapidblue.in/v1.0/getConfigurations?businessId=2&channelApplicable=false&channelId=74&configType=B2B&fetchCache=false",
							"protocol": "https",
							"host": [
								"merchant-backend",
								"sapidblue",
								"in"
							],
							"path": [
								"v1.0",
								"getConfigurations"
							],
							"query": [
								{
									"key": "businessId",
									"value": "2"
								},
								{
									"key": "channelApplicable",
									"value": "false"
								},
								{
									"key": "channelId",
									"value": "74"
								},
								{
									"key": "configType",
									"value": "B2B"
								},
								{
									"key": "fetchCache",
									"value": "false"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	]
}